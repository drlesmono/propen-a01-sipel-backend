[{"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\index.js":"1","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\App.js":"3","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js":"4","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js":"5","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js":"6","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js":"7","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js":"8","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js":"9","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js":"10","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js":"11","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js":"12","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js":"13","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js":"14","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\Progress\\index.js":"15","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Layout\\index.js":"16","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"17","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\Bast\\index.js":"18","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js":"19","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"20","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\APIConfig.js":"21","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ReportAdmin\\index.js":"22","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ReportFinance\\index.js":"23","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js":"24","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js":"25","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ReportHead\\index.js":"26","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js":"27","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Order\\orderDetail.js":"28","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js":"29","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js":"30","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js":"31","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Services\\serviceList.js":"32","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Table\\index.js":"33","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Button\\index.js":"34","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Modal\\index.js":"35","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Backdrop\\index.js":"36","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\Homepage\\index.js":"37"},{"size":610,"mtime":1622709837487,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1622709837488,"results":"40","hashOfConfig":"39"},{"size":7595,"mtime":1622787395638,"results":"41","hashOfConfig":"39"},{"size":7337,"mtime":1622709837355,"results":"42","hashOfConfig":"39"},{"size":7026,"mtime":1622709837369,"results":"43","hashOfConfig":"39"},{"size":13206,"mtime":1622709837237,"results":"44","hashOfConfig":"39"},{"size":19620,"mtime":1622709837359,"results":"45","hashOfConfig":"39"},{"size":28296,"mtime":1622786605554,"results":"46","hashOfConfig":"39"},{"size":38186,"mtime":1622787332576,"results":"47","hashOfConfig":"39"},{"size":33514,"mtime":1622709837228,"results":"48","hashOfConfig":"39"},{"size":33477,"mtime":1622709837226,"results":"49","hashOfConfig":"39"},{"size":10250,"mtime":1622709837485,"results":"50","hashOfConfig":"39"},{"size":60343,"mtime":1622786857109,"results":"51","hashOfConfig":"39"},{"size":39598,"mtime":1622709837236,"results":"52","hashOfConfig":"39"},{"size":5479,"mtime":1622709837373,"results":"53","hashOfConfig":"39"},{"size":225,"mtime":1622709837187,"results":"54","hashOfConfig":"39"},{"size":24609,"mtime":1622787263192,"results":"55","hashOfConfig":"39"},{"size":17299,"mtime":1622709837224,"results":"56","hashOfConfig":"39"},{"size":27673,"mtime":1622786605432,"results":"57","hashOfConfig":"39"},{"size":32098,"mtime":1622787747426,"results":"58","hashOfConfig":"39"},{"size":143,"mtime":1622709837141,"results":"59","hashOfConfig":"39"},{"size":72647,"mtime":1622786605470,"results":"60","hashOfConfig":"39"},{"size":72288,"mtime":1622786605485,"results":"61","hashOfConfig":"39"},{"size":956,"mtime":1622709837196,"results":"62","hashOfConfig":"39"},{"size":2530,"mtime":1622709837202,"results":"63","hashOfConfig":"39"},{"size":77515,"mtime":1622786605501,"results":"64","hashOfConfig":"39"},{"size":1719,"mtime":1622709837211,"results":"65","hashOfConfig":"39"},{"size":4173,"mtime":1622709837210,"results":"66","hashOfConfig":"39"},{"size":1859,"mtime":1622709837213,"results":"67","hashOfConfig":"39"},{"size":823,"mtime":1622709837186,"results":"68","hashOfConfig":"39"},{"size":1585,"mtime":1622709837205,"results":"69","hashOfConfig":"39"},{"size":936,"mtime":1622709837215,"results":"70","hashOfConfig":"39"},{"size":1828,"mtime":1622709837217,"results":"71","hashOfConfig":"39"},{"size":802,"mtime":1622709837185,"results":"72","hashOfConfig":"39"},{"size":478,"mtime":1622709837207,"results":"73","hashOfConfig":"39"},{"size":257,"mtime":1622709837184,"results":"74","hashOfConfig":"39"},{"size":834,"mtime":1622786992736,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"e9go33",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\index.js",[],["163","164"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\App.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js",["165","166"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst initState = {\r\n    orderTarget: null,\r\n    file: null,\r\n}\r\n\r\nclass InputDataOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            orderTarget: null,\r\n            isUnggah: false,\r\n            file: null,\r\n            isError: false,\r\n            isFinishedUpload: false,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            isFiltered: false,\r\n            ordersFiltered: [],\r\n        };\r\n        this.handleTambahOrder = this.handleTambahOrder.bind(this);\r\n        this.handleLookUpDetail = this.handleLookUpDetail.bind(this);\r\n        this.handleClickUnggah = this.handleClickUnggah.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/orderList\");\r\n            this.setState({ orders: listOrder.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return <div>Project Installation<br></br>Managed Service</div>;\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif){\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleTambahOrder = () => {\r\n        this.props.history.push(`/order/create`);\r\n    }\r\n\r\n    handleLookUpDetail = (order) => {\r\n        this.props.history.push(`/order/detail/${order.idOrder}`);\r\n    }\r\n\r\n    handleClickUnggah = (order) => {\r\n        this.props.history.push(`/order/unggah/${order.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrders = this.state.orders;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrders = this.state.orders.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) || \r\n                order.noPO.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.dateOrder).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.checkStatusOrder(order.verified).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersFiltered : newOrders });\r\n    }\r\n\r\n    render() {\r\n        const { orders, orderTarget, isError, isFiltered, ordersFiltered } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No', \r\n            'Nomor PO', \r\n            'Nama Order', \r\n            'Nama Pelanggan', \r\n            'Perusahaan Pelanggan',\r\n            'Tanggal Masuk',\r\n            'Jenis', \r\n            'Status', \r\n            'Aksi',\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersFiltered.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>])\r\n                        : orders.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <br></br>\r\n            <div className=\"d-flex justify-content-between\" style={{padding: 5}}>\r\n                <Button className={classes.button2} onClick={() => this.handleTambahOrder()}>+ Tambah Order</Button>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(InputDataOrder);","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js",["167","168"],"import React from \"react\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass PenjadwalanMaintenance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrderMs: \"\",\r\n            orderFiltered: [],\r\n            ordersTerassign: [],\r\n            isFiltered: false,\r\n            isAssigned: false,\r\n            ordersTerassignFiltered: [],\r\n            isError: false,\r\n        };\r\n        this.handleCreateSchedule = this.handleCreateSchedule.bind(this);\r\n        this.handleLookSchedule = this.handleLookSchedule.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrderTerassigned = await APIConfig.get(\"/orderMSassigned\");\r\n            this.setState({ ordersTerassign: listOrderTerassigned.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleCreateSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/create/${idOrderMs}`);\r\n    }\r\n\r\n    handleLookSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/look-update/${idOrderMs}`);\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrdersAssigned = this.state.ordersTerassign;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrdersAssigned = this.state.ordersTerassign.filter(order => {\r\n                return (order.idOrder.noPO.toLowerCase().includes(value.toLowerCase()) || \r\n                order.idOrder.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.idOrder.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.actualStart).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.actualEnd).toLowerCase().includes(value.toLowerCase()) ||\r\n                order.idUserPic.fullname.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersTerassignFiltered : newOrdersAssigned });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordMSTerassignFromOrdersList,\r\n            ordersTerassign,\r\n            isFiltered,\r\n            ordersTerassignFiltered,\r\n            isError\r\n        } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No','Nomor PO','Nama Pelanggan','Perusahaan Pelanggan', 'Jenis Order', \r\n            'Periode Mulai', 'Periode Selesai', 'PIC Engineer','Aksi'\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersTerassignFiltered.map((order) =>\r\n                        [order.idOrder.noPO, order.idOrder.clientName, order.idOrder.clientOrg, \r\n                        this.checkTypeOrder(order.idOrder.projectInstallation, order.idOrder.managedService), \r\n                        this.getDate(order.actualStart), this.getDate(order.actualEnd), order.idUserPic.fullname,\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCreateSchedule(order.idOrderMs)}>Buat Jadwal&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleLookSchedule(order.idOrderMs)}>Lihat Jadwal</Button>\r\n                        </div>])\r\n                        : ordersTerassign.map((order) =>\r\n                        [order.idOrder.noPO, order.idOrder.clientName, order.idOrder.clientOrg, \r\n                        this.checkTypeOrder(order.idOrder.projectInstallation, order.idOrder.managedService), \r\n                        this.getDate(order.actualStart), this.getDate(order.actualEnd), order.idUserPic.fullname,\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCreateSchedule(order.idOrderMs)}>Buat Jadwal&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleLookSchedule(order.idOrderMs)}>Lihat Jadwal</Button>\r\n                        </div>\r\n                        ]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <div className=\"d-flex justify-content-end\" style={{padding: 5}}>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PenjadwalanMaintenance);","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js",["169"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport TableMaintenanceDetail from \"../../components/Maintenance/mnTableDetail\";\r\nimport MaintenanceList from \"../../components/Maintenance/maintenanceList\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport { store } from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass CreateMaintenance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrderMs: this.props.match.params.id,\r\n            listMaintenance: [{ index: Math.random(), dateMn: \"\"}],\r\n            orderMSTarget: null,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            noPO: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            fullname: \"\",\r\n            maintained: false,\r\n            finishedSubmitSchedule: false,\r\n            isError: false,\r\n            isCancelToMake: false\r\n        };\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitCreateMaintenance = this.handleSubmitCreateMaintenance.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.cancelToMake = this.cancelToMake.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderMSItem = await APIConfig.get(`/order/detail/MS/${this.state.idOrderMs}`);\r\n            this.setState({ orderMSTarget: orderMSItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    } \r\n\r\n    handleLookDetail() {\r\n        let orderMS = this.state.orderMSTarget;\r\n        this.setState({ \r\n            actualStart: orderMS.actualStart,\r\n            actualEnd: orderMS.actualEnd,\r\n            noPO: orderMS.idOrder.noPO,\r\n            clientName: orderMS.idOrder.clientName,\r\n            clientOrg: orderMS.idOrder.clientOrg,\r\n            fullname: orderMS.idUserPic.fullname,\r\n        })\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"dateMn\"].includes(e.target.name)) {\r\n            let listMaintenance = [...this.state.listMaintenance]\r\n            listMaintenance[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listMaintenance: [...prevState.listMaintenance, { index: Math.random(), dateMn: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listMaintenance: this.state.listMaintenance.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listMaintenance: this.state.listMaintenance.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    async handleSubmitCreateMaintenance(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listMaintenance.length;i++) {\r\n                if(new Date(this.state.listMaintenance[i].dateMn) < new Date(this.state.actualStart)) {\r\n                    let date = this.getDate(this.state.listMaintenance[i].dateMn);\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Tanggal Maintenance  ${date} tidak boleh dilakukan sebelum periode mulai`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n                if(new Date(this.state.listMaintenance[i].dateMn) > new Date(this.state.actualEnd)) {\r\n                    let date = this.getDate(this.state.listMaintenance[i].dateMn);\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Tanggal Maintenance  ${date} tidak boleh dilakukan setelah periode selesai`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n                if(this.state.listMaintenance[i].dateMn.length === 0) {\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Anda wajib mengisi field Tanggal Maintenance`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            for (let i=0; i<this.state.listMaintenance.length;i++) {\r\n                console.log(this.state.listMaintenance[i].dateMn);\r\n                const data = {\r\n                    dateMn: this.state.listMaintenance[i].dateMn,\r\n                    maintained: this.state.maintained,\r\n                };\r\n                await APIConfig.post(`/produksi/maintenance/tambah/${this.state.orderMSTarget.idOrderMs}`, data);\r\n                this.loadData();\r\n                this.setState({ finishedSubmitSchedule: true });\r\n            }\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleConfirmCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToMake: true });\r\n    }\r\n\r\n    cancelToMake(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToMake: false });\r\n    }\r\n\r\n    render() {\r\n        let{ listMaintenance } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Buat Penjadwalan Maintenance</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                <ReactNotification />\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <TableMaintenanceDetail \r\n                                key={this.state.idOrder}\r\n                                idOrderMs={this.state.idOrderMs}\r\n                                noPO={this.state.noPO}\r\n                                clientName={this.state.clientName}\r\n                                clientOrg={this.state.clientOrg}\r\n                                fullname={this.state.fullname}\r\n                                periodeMulai={this.getDate(this.state.actualStart)}\r\n                                periodeSelesai={this.getDate(this.state.actualEnd)}\r\n                            />\r\n                            <br></br>\r\n                        </div>\r\n                        <form onChange={this.handleChange} >\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-sm-6\">\r\n                            <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"required\" style={{color: \"black\"}}>Tanggal Maintenance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <MaintenanceList add={this.addNewRow} delete={this.clickOnDelete} listMaintenance={listMaintenance} />\r\n                            </tbody>\r\n                            </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer text-right\">\r\n                            <Button className={classes.button1} onClick={this.handleSubmitCreateMaintenance}>Simpan</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={this.handleConfirmCancel}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={this.state.isCancelToMake} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal membuat jadwal ?</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={this.cancelToMake}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={this.state.finishedSubmitSchedule} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jadwal Maintenance Berhasil Dibuat</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <div className=\"text-center\">\r\n                                <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                            </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            <Modal show={this.state.isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateMaintenance);","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js",["170","171","172","173","174","175","176","177"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js",["178","179"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js",["180"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\n\r\nclass ChangeOrderPI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPI = this.handleSubmitChangeOrderPI.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderPITarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            startPI: moment(new Date(ordPI.startPI)).format(\"YYYY-MM-DD\"),\r\n            deadline: moment(new Date(ordPI.deadline)).format(\"YYYY-MM-DD\"),\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data);\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI);\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPI}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPI);","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js",["181"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\n\r\nclass ChangeOrderMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderMS = this.handleSubmitChangeOrderMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderMSTarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            actualStart: moment(new Date(ordMS.actualStart)).format(\"YYYY-MM-DD\"),\r\n            actualEnd: moment(new Date(ordMS.actualEnd)).format(\"YYYY-MM-DD\"),\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data);\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS);\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderMS);\r\n","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js",["182"],"import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport OrderDetailForUnggah from \"../../components/Order/orderDetailForUnggah\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass UnggahDokumenOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            orderTarget: null,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            file: null,\r\n            verified: false,\r\n            isFinishedUpload: false,\r\n            isError: false,\r\n            isCancel: false,\r\n        };\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.checkTypeOrder = this.checkTypeOrder.bind(this);\r\n        this.handleChangeFile = this.handleChangeFile.bind(this);\r\n        this.checkStatusOrder = this.checkStatusOrder.bind(this);\r\n        this.handleSubmitDocument = this.handleSubmitDocument.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterUnggahDokumen = this.handleAfterUnggahDokumen.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleLookDetail() {\r\n        let order = this.state.orderTarget;\r\n        this.setState({\r\n            noPO: order.noPO,\r\n            orderName: order.orderName,\r\n            clientName: order.clientName,\r\n            clientOrg: order.clientOrg,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            verified: order.verified,\r\n        });\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif) {\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    handleChangeFile(event){\r\n        event.preventDefault();\r\n        this.setState({[event.target.name]: event.target.files[0]});\r\n    }\r\n\r\n    async handleSubmitDocument(event) {\r\n        event.preventDefault();\r\n        if(this.state.file === null || this.state.file === \"\"){\r\n            store.addNotification({\r\n                title: \"Peringatan!\",\r\n                message: \"Anda wajib memasukkan file yang akan diunggah\",\r\n                type: \"warning\",\r\n                container: \"top-left\",\r\n                insert: \"top\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeout\"],\r\n                dismiss: {\r\n                    duration: 7000,\r\n                    showIcon: true,\r\n                },\r\n                width: 500\r\n            });\r\n            return false;\r\n        }\r\n        try {\r\n            let response;\r\n            let newDocument;\r\n\r\n            const dataDocument = new FormData();\r\n            dataDocument.append(\"file\", this.state.file);\r\n            console.log(dataDocument);\r\n            response = await APIConfig.post(`/order/${this.state.orderTarget.idOrder}/document/upload`, dataDocument);\r\n            newDocument = response.data.result;\r\n            this.loadData();\r\n            this.setState({ isFinishedUpload: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterUnggahDokumen = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isFinishedUpload,\r\n            isError,\r\n            isCancel\r\n        } = this.state;\r\n        \r\n        return(\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Unggah Dokumen Order</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <OrderDetailForUnggah \r\n                                noPO={this.state.noPO}\r\n                                orderName={this.state.orderName}\r\n                                jenis={this.checkTypeOrder(this.state.projectInstallation, this.state.managedService)}\r\n                                clientName={this.state.clientName}\r\n                                clientOrg={this.state.clientOrg}\r\n                                status={this.checkStatusOrder(this.state.verified)}\r\n                            />\r\n                            <br></br>\r\n                            <Form>\r\n                            <Table borderless responsive=\"xl\" size=\"md\">\r\n                                <ReactNotification />\r\n                                <tr>\r\n                                    <td><h5 className=\"d-flex justify-content-center\" style={{color: \"black\"}}>Dokumen Order <p style={{color: \"red\"}}>&nbsp;&nbsp;*</p></h5></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                        <Form.File name=\"file\" onChange={this.handleChangeFile}/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                    <Button className={classes.button2} onClick={this.handleSubmitDocument}>Simpan</Button>\r\n                                        <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button3} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </Table>\r\n                        </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={isFinishedUpload} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dokumen Order Berhasil Diunggah</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterUnggahDokumen()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal mengunggah dokumen ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button3} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UnggahDokumenOrder);","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js",["183","184"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js",["185"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\n\r\nclass ChangeOrderPIMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPIMS = this.handleSubmitChangeOrderPIMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`);\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderPITarget);\r\n            console.log(this.state.orderMSTarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            startPI: moment(new Date(ordPI.startPI)).format(\"YYYY-MM-DD\"),\r\n            deadline: moment(new Date(ordPI.deadline)).format(\"YYYY-MM-DD\"),\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n            actualStart: moment(new Date(ordMS.actualStart)).format(\"YYYY-MM-DD\"),\r\n            actualEnd: moment(new Date(ordMS.actualEnd)).format(\"YYYY-MM-DD\"),\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPIMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data);\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI);\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS);\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPIMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPIMS);","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\Progress\\index.js",["186","187","188","189","190","191"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport {Form, Card, Table} from \"react-bootstrap\";\r\nimport { Input, FormControlLabel } from \"@material-ui/core\";\r\nimport classes from \"./style.css\";\r\nimport \"./style.css\";\r\n\r\n\r\nclass Progress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            progress:[],\r\n            filteredProgress:[],\r\n            isFiltered: false,\r\n            isPi: true,\r\n            isMs: true,\r\n        };\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handlePi = this.handlePi.bind(this);\r\n        this.handleMs = this.handleMs.bind(this);\r\n        this.handleAll = this.handleAll.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const progressList = await APIConfig.get(\"/order/progress\");\r\n            this.setState({ progress: progressList.data,\r\n                }\r\n                );\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let progressList = this.state.progress;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            progressList = this.state.progress.filter(prog => {\r\n                return (prog.orderName.toLowerCase().includes(value.toLowerCase()) ||\r\n                    prog.tipeOrder.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ filteredProgress : progressList });\r\n        console.log(this.state.filteredProgress);\r\n    }\r\n\r\n    async handleAll(event){\r\n        let progressList = this.state.progress;\r\n        this.setState({ filteredProgress : progressList,\r\n            isPi: true,\r\n            isMs: true});\r\n    }\r\n\r\n    async handleMs(event){\r\n        let progressList = this.state.progress;\r\n        let value = \"managed\";\r\n        progressList = this.state.progress.filter(prog => {\r\n            return (prog.tipeOrder.toLowerCase().includes(value.toLowerCase()) )\r\n        });\r\n        this.setState({ isFiltered : true,\r\n            isPi: false,\r\n            isMs: true\r\n        });\r\n\r\n        this.setState({ filteredProgress : progressList });\r\n        //console.log(this.state.filteredProgress);\r\n\r\n    }\r\n\r\n    async handlePi(event){\r\n        let progressList = this.state.progress;\r\n        let value = \"proyek\";\r\n        progressList = this.state.progress.filter(prog => {\r\n            return (prog.tipeOrder.toLowerCase().includes(value.toLowerCase()) )\r\n        });\r\n        this.setState({ isFiltered : true,\r\n            isPi: true,\r\n            isMs: false\r\n        });\r\n\r\n        this.setState({ filteredProgress : progressList });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const tableHeaders = ['No','Order', 'Tipe Order', 'Status', 'Progress'];\r\n        let {progress, filteredProgress, isFiltered, isPi, isMs} = this.state;\r\n        const tableRows = isFiltered ?\r\n            filteredProgress.map((prog) =>\r\n                [prog.orderName, prog.tipeOrder, prog.statusOrder, prog.completionPercentage+\"%\"])\r\n            : progress.map((prog) =>\r\n            [prog.orderName, prog.tipeOrder, prog.statusOrder, prog.completionPercentage+\"%\"]\r\n\r\n        )\r\n\r\n        return(\r\n            <div class=\"test\">\r\n                <div><h1 class=\"text-center\">Daftar Progress</h1></div>\r\n                {isPi === true ?\r\n                    <div>\r\n                        {isMs === true ?\r\n                            <div>\r\n                                <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#2F3F58\" onClick={(event)=>this.handleMs(event)}>Managed Services</CustomizedButtons>\r\n                                <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#2F3F58\" onClick={(event)=>this.handlePi(event)}>Proyek Instalasi</CustomizedButtons>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#2F3F58\" onClick={(event)=>this.handleAll(event)}>All</CustomizedButtons>\r\n                                <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#2F3F58\" onClick={(event)=>this.handleMs(event)}>Managed Services</CustomizedButtons>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    :\r\n                    <div>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#2F3F58\" onClick={(event)=>this.handleAll(event)}>All</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#2F3F58\" onClick={(event)=>this.handlePi(event)}>Proyek Instalasi</CustomizedButtons>\r\n                    </div>\r\n                }\r\n               <Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} className=\"search\"/>\r\n                <CustomizedTables headers={tableHeaders} rows={tableRows} class=\"tbl\"/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Progress;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Layout\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\Bast\\index.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport {Form, Card, Table} from \"react-bootstrap\";\r\nimport { Input, FormControlLabel } from \"@material-ui/core\";\r\nimport './style.css';\r\n\r\n\r\nclass Bast extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bast: {\r\n                //\"bast\":{\"idBast\":1,\"bastNum\":\"001/LMD-BAST/020/04/2021\",\"dateHandover\":\"2021-04-21T17:00:00.000+00:00\",\"startPeriod\":null,\"endPeriod\":null},\r\n                //\"order\":{\"idOrder\":1,\"orderName\":\"Proyek Installasi - proyek Ebesha Pacil\",\"clientName\":\"Kamila Kaffah\",\"clientOrg\":\"PT. Pacil\",\"clientDiv\":\"HRGA\",\"clientPIC\":\"PIC\",\"clientEmail\":\"kamila@pacil.id\",\"clientPhone\":\"0888303031\",\"dateOrder\":\"2021-04-01T16:13:09.000+00:00\",\"noPO\":\"PO/2021/04/0001\",\"noSPH\":null,\"description\":\"Order Proyek Instalasi eBesha\",\"hibernateLazyInitializer\":{},\"managedService\":false,\"verified\":false,\"projectInstallation\":true},\r\n                //\"engineer\":{\"id\":\"2\",\"username\":\"hannaj\",\"password\":\"$2a$10$s095279is4QwurSScfHPFOnRLHSzvcibI5bZtbA25s3cmIu5/EvfS\",\"nip\":\"1906020002\",\"fullname\":\"Hanna Jannatunnaiim\",\"surname\":\"Hanna\",\"email\":\"hanna@lmd.co.id\"}\r\n                },\r\n            report: {},\r\n            pi:{},\r\n            mn:{},\r\n            laporanList:[],\r\n            orderList:[],\r\n            bastList:[],\r\n            piList:[],\r\n            mnList:[],\r\n            dateHandover: null,\r\n            isOption: true,\r\n            isToCreate: false,\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isMn: null,\r\n            idPi: null,\r\n            idMn: null,\r\n            endPeriod: null,\r\n            startPeriod: null,\r\n            isPopup: false,\r\n            isError:true,\r\n            errorMsg: \"Seluruh field pada form ini harus terisi sebelum disubmit. Mohon melengkapi data sebelum membuat preview BAST.\",\r\n        };\r\n\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const laporan = await APIConfig.get(\"/laporan\");\r\n            const order = await APIConfig.get(\"/laporan/order\");\r\n            const bast = await APIConfig.get(\"/laporan/bast\");\r\n            const pi = await APIConfig.get(\"/laporan/pi\");\r\n            const mn = await APIConfig.get(\"/laporan/mn\");\r\n            this.setState({ laporanList: laporan.data,\r\n                orderList: order.data,\r\n                bastList: bast.data,\r\n                piList: pi.data,\r\n                mnList: mn.data});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleCreatePi(){\r\n        try {\r\n            const Pi = (await APIConfig.get(\"/laporan/bast/create/pi\")).data;\r\n            const list = APIConfig.get(\"/laporan/pi\").data;\r\n            this.loadData()\r\n            //console.log(Pi);\r\n            this.setState({\r\n                listPi: list,\r\n                report: Pi.report,\r\n                bast: Pi.bastPi,\r\n                isOption: false,\r\n                isToCreate: true,\r\n                isMaintenance: false});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleCreateMn(){\r\n        try {\r\n            const Mn = (await APIConfig.get(\"/laporan/bast/create/mn\")).data;\r\n            this.loadData();\r\n            //console.log(Mn.maintenanceList);\r\n            this.setState({\r\n                listMn: Mn.maintenanceList,\r\n                report: Mn.report,\r\n                bast: Mn.bastMn,\r\n                isOption: false,\r\n                isToCreate: true,\r\n                isMaintenance: true});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleEdit(laporan){\r\n        this.setState({\r\n            isEdit: true,\r\n            laporanTarget:laporan});\r\n        //alert(this.state.laporanTarget.report)\r\n    }\r\n\r\n    handleCancel(event){\r\n        event.preventDefault();\r\n        this.setState({isEdit: false, isPopup:false});\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name, value);\r\n        var score;\r\n        var count = 0\r\n\r\n        if(name === \"idMaintenance\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.endPeriod===null\r\n            count++;\r\n            this.setState({mn: value})\r\n            this.setState({isError:score})\r\n        }\r\n        if(name === \"idOrderPi\" && value !== ''){\r\n            this.setState({pi: value})\r\n            this.setState({isError:false})\r\n        }\r\n        if(name === \"dateHandover\" && value !== ''){\r\n            this.setState({dateHandover: value})\r\n            count++;\r\n            //console.log(this.state.dateHandover);\r\n        }\r\n        if(name === \"startPeriod\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.idMaintenance === null ||this.state.endPeriod===null\r\n            count++;\r\n            this.setState({startPeriod: value})\r\n            this.setState({isError:score})\r\n        }\r\n        if(name === \"endPeriod\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.idMaintenance===null\r\n            count++;\r\n            this.setState({endPeriod: value})\r\n            this.setState({isError:score})\r\n        }\r\n\r\n\r\n        if(this.state.mn !== null){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.endPeriod===null\r\n            //console.log(score)\r\n            if(score === false){this.setState({isError:false})}\r\n        } else{\r\n            {this.setState({isError:false})}\r\n        }\r\n        console.log(this.state.isError)\r\n\r\n    }\r\n\r\n    handleSubmit(event){\r\n        //event.preventDefault();\r\n        let test = this.state.endPeriod;\r\n        if(test === null){\r\n            try{\r\n                let bastPi = {\r\n                    idReport: null,\r\n                    idBast: this.state.bast.idBast,\r\n                    bastNum: this.state.bast.bastNum,\r\n                    dateHandover: this.state.dateHandover,\r\n                    idMaintenance: null,\r\n                    idOrderPi: this.state.pi,\r\n                    startPeriod: null,\r\n                    endPeriod: null,\r\n                };\r\n                this.setState({isPopup: true,\r\n                    isToCreate: false,\r\n                    //bast: res\r\n                })\r\n                if(this.state.isError === true){\r\n                    alert(this.state.errorMsg);\r\n                    this.setState({isOption:true, isToCreate:false, isPopup: false\r\n                        //isOption : true, isToCreate: false\r\n                    })\r\n                    //this.handleCreatePi();\r\n                } if(this.state.isError === false){\r\n                    let res = APIConfig.post(`/laporan/create-bast/pi`, bastPi)\r\n                    this.setState({isPopup: true,\r\n                    })\r\n                    this.loadData();\r\n                }\r\n\r\n            }catch (error) {\r\n                alert(\"Oops terjadi masalah pada server\");\r\n                console.log(error);\r\n            }\r\n        }\r\n        else{\r\n            try{\r\n                const dataMn = {\r\n                    idReport: null,\r\n                    idBast: this.state.bast.idBast,\r\n                    bastNum: this.state.bast.bastNum,\r\n                    dateHandover: this.state.dateHandover,\r\n                    idMaintenance: this.state.mn,\r\n                    idOrderPi: null,\r\n                    startPeriod: this.state.startPeriod,\r\n                    endPeriod: this.state.endPeriod,\r\n                };\r\n                //console.log(dataMn)\r\n                if(this.state.isError === true){\r\n                    alert(this.state.errorMsg);\r\n                    //isToCreate === true && isOption === false && isMaintenance === false && isPopup === false?// pi\r\n                    //isToCreate === true && isOption === false && isMaintenance === true// main\r\n                    this.setState({isOption:true, isToCreate:false, isPopup: false\r\n                    })\r\n                    //this.handleCreateMn();\r\n                }\r\n                if(this.state.isError === false){\r\n                    let res = APIConfig.post(`/laporan/create-bast/mn`, dataMn);\r\n                    this.setState({isPopup: true,\r\n                    })\r\n                    this.loadData();\r\n                    console.log(this.state.bast.idOrderPi);\r\n                }\r\n\r\n            }catch (error) {\r\n                alert(\"Oops terjadi masalah pada server\");\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let {bast, report, isMn, listPi, listMn, isOption, isToCreate, isLoading,\r\n            isEdit, isMaintenance, idPi, idMn, dateHandover, endPeriod, startPeriod,\r\n        isPopup, errorMsg, isError} = this.state;\r\n\r\n        let nomor, tipe, status, order, id, ms, bastNum, picName, namaOrder, deskripsi;\r\n        let namaKedua, divisiKedua, organisasiKedua, picKedua, po, sph, selectedOrder;\r\n\r\n        let piList = this.state.piList;\r\n        let mnList = this.state.mnList;\r\n        let laporanList = this.state.laporanList\r\n        let orderList = this.state.orderList;\r\n        let bastList = this.state.bastList;\r\n\r\n        const pi = this.state.pi;\r\n        const mn = this.state.mn;\r\n        //const isPopup = this.state.isPopup\r\n\r\n        if(pi === null){\r\n            let pop_pi = false\r\n        }\r\n        if(mn=== null){\r\n            let pop_mn=false\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                {isOption === true && isToCreate === false && isPopup === false?\r\n                <div id=\"buttonoption\">\r\n                    <Card id=\"option\">\r\n                        <h3 id=\"titleGenerate\" >Generate BAST</h3>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleCreatePi()}>Proyek Installasi</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleCreateMn()}>Maintenance</CustomizedButtons>\r\n                    </Card>\r\n\r\n                </div>\r\n                : <div></div>\r\n            }\r\n            {isToCreate === true && isOption === false && isMaintenance === true ?\r\n                <div>\r\n                    <Card >\r\n                        <Form>\r\n                            <table id=\"card-table\">\r\n                                <tr>\r\n                                    <td colSpan={2}><h4 id=\"titleGenerate\" >Create BAST Maintenance</h4></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Maintenance :</h5></td>\r\n                                    <td><Form.Control as=\"select\"  name=\"idMaintenance\"\r\n                                                      onChange={this.handleChangeField} placeholder=\"Maintenance\" title=\"Maintenance\">\r\n                                        <option value=''>-Pilih Maintenance-</option>\r\n                                        {mnList.map((mn, index) => <option key={index} value={mn.idMaintenance}> Maintenance of {mn.dateMn.toString().substr(0,10)} (ID:{mn.idMaintenance}) </option>)}\r\n                                    </Form.Control>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Tanggal Penyerahan:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"dateHandover\" onChange={this.handleChangeField}></Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Periode Awal Maintenance:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"startPeriod\" onChange={this.handleChangeField}> </Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Periode Akhir Maintenance:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"endPeriod\" onChange={this.handleChangeField}></Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={2}>\r\n                                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleSubmit()}>Create Preview BAST</CustomizedButtons>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </Form>\r\n                    </Card>\r\n\r\n                </div>\r\n                :\r\n                <div></div>\r\n            }\r\n                {isToCreate === true && isOption === false && isMaintenance === false && isPopup === false?\r\n                    <div>\r\n                        <Card id=\"option2\">\r\n                            <Form>\r\n                                <table id=\"card-table2\">\r\n                                    <tr>\r\n                                        <td colSpan={2}><h4 id=\"titleGenerate\" >Create BAST Project Installation</h4></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h5>Proyek Installasi:</h5></td>\r\n                                        <td>\r\n\r\n                                            <Form.Control as=\"select\" size=\"lg\" name=\"idOrderPi\"\r\n                                                          onChange={this.handleChangeField}>\r\n                                                <option value=''>-Pilih Proyek Installasi-</option>\r\n                                                {piList.map((pi, index) => <option key={index} value={pi.idOrderPi}>Proyek Installasi - {pi.idOrderPi}</option>)}\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><br></br></td>\r\n                                        <td><br></br></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h5>Tanggal Penyerahan:</h5></td>\r\n                                        <td><Input type=\"date\" name=\"dateHandover\" onChange={this.handleChangeField}></Input></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colSpan={2}>\r\n                                            <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleSubmit()}>Create Preview BAST</CustomizedButtons>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n\r\n                            </Form>\r\n                        </Card>\r\n\r\n                    </div>\r\n                    :\r\n                    <div> </div>\r\n                }\r\n                {isPopup === true?\r\n                    <div id=\"preview\">\r\n                        <Modal show={isPopup} handleCloseModal={this.handleCancel}>\r\n                            <h2 style={{ marginTop: 0, marginBottom: 0}}><b>Preview BAST untuk order telah berhasil dibuat.</b></h2>\r\n                            <a onClick={(event)=>this.handleClose(event)} href={\"/laporan/admin\"}><h6 id=\"highlighted3\"> &#8810; Kembali ke Daftar Laporan</h6></a>\r\n                        </Modal>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Bast;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",["239","240","241","242"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\APIConfig.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ReportAdmin\\index.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ReportFinance\\index.js",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\ReportHead\\index.js",["305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Order\\orderDetail.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js",["338","339"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ProjectInstallation = (props) => {\r\n    const { \r\n        idOrderPi,\r\n        startPI, \r\n        deadline,\r\n        percentage,\r\n        close } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`ID Project Installation: ${idOrderPi}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Tanggal Mulai Proyek: ${startPI}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Tanggal Selesai Proyek: ${deadline}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Progres Pengerjaan: ${percentage} %`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Status: ${close}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectInstallation;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js",["340"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Laporan = (props) => {\r\n    const { \r\n        reportNum,\r\n        reportName,\r\n        noPO,\r\n        clientOrg,\r\n        statusApproval,\r\n        uploadedDate,\r\n         } = props;\r\n    return (\r\n        <div>\r\n            <p style={{color: \"black\"}}>{`Nomor Laporan: ${reportNum}`}</p>\r\n            <p style={{color: \"black\"}}>{`Nama Laporan: ${reportName}`}</p>\r\n            <p style={{color: \"black\"}}>{`Nomor PO: ${noPO}`}</p>\r\n            <p style={{color: \"black\"}}>{`Perusahaan Pelanggan: ${clientOrg}`}</p>\r\n            <p style={{color: \"black\"}}>{`Status: ${statusApproval}`}</p>\r\n            <p style={{color: \"black\"}}>{`Tanggal Dibuat: ${uploadedDate}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Laporan;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js",["341","342","343"],"import React from \"react\";\r\nimport ServiceList from \"../Services/serviceList\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ManagedService = (props) => {\r\n    const { \r\n        idOrderMs,\r\n        actualStart,\r\n        actualEnd,\r\n        activated\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`ID Managed Service: ${idOrderMs}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Periode Mulai: ${actualStart}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Periode Selesai: ${actualEnd}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Status: ${activated}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagedService;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Services\\serviceList.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Button\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Modal\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\branch stage ver 1\\propen-a01-sipel-backend\\sipel-frontend\\src\\containers\\Homepage\\index.js",[],{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","severity":1,"message":"349","line":10,"column":7,"nodeType":"350","messageId":"351","endLine":10,"endColumn":16},{"ruleId":"348","severity":1,"message":"352","line":118,"column":25,"nodeType":"350","messageId":"351","endLine":118,"endColumn":36},{"ruleId":"348","severity":1,"message":"353","line":6,"column":13,"nodeType":"350","messageId":"351","endLine":6,"endColumn":19},{"ruleId":"348","severity":1,"message":"354","line":94,"column":13,"nodeType":"350","messageId":"351","endLine":94,"endColumn":41},{"ruleId":"348","severity":1,"message":"353","line":7,"column":13,"nodeType":"350","messageId":"351","endLine":7,"endColumn":19},{"ruleId":"348","severity":1,"message":"355","line":370,"column":43,"nodeType":"350","messageId":"351","endLine":370,"endColumn":55},{"ruleId":"348","severity":1,"message":"356","line":370,"column":69,"nodeType":"350","messageId":"351","endLine":370,"endColumn":78},{"ruleId":"348","severity":1,"message":"357","line":370,"column":80,"nodeType":"350","messageId":"351","endLine":370,"endColumn":94},{"ruleId":"348","severity":1,"message":"358","line":371,"column":13,"nodeType":"350","messageId":"351","endLine":371,"endColumn":27},{"ruleId":"348","severity":1,"message":"359","line":371,"column":29,"nodeType":"350","messageId":"351","endLine":371,"endColumn":43},{"ruleId":"348","severity":1,"message":"352","line":371,"column":45,"nodeType":"350","messageId":"351","endLine":371,"endColumn":56},{"ruleId":"348","severity":1,"message":"360","line":371,"column":81,"nodeType":"350","messageId":"351","endLine":371,"endColumn":89},{"ruleId":"348","severity":1,"message":"361","line":371,"column":91,"nodeType":"350","messageId":"351","endLine":371,"endColumn":100},{"ruleId":"348","severity":1,"message":"362","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":25},{"ruleId":"348","severity":1,"message":"353","line":14,"column":13,"nodeType":"350","messageId":"351","endLine":14,"endColumn":19},{"ruleId":"348","severity":1,"message":"362","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":25},{"ruleId":"348","severity":1,"message":"362","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":25},{"ruleId":"348","severity":1,"message":"363","line":119,"column":13,"nodeType":"350","messageId":"351","endLine":119,"endColumn":24},{"ruleId":"348","severity":1,"message":"362","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":25},{"ruleId":"348","severity":1,"message":"364","line":708,"column":13,"nodeType":"350","messageId":"351","endLine":708,"endColumn":22},{"ruleId":"348","severity":1,"message":"362","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":25},{"ruleId":"348","severity":1,"message":"365","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":13},{"ruleId":"348","severity":1,"message":"366","line":6,"column":15,"nodeType":"350","messageId":"351","endLine":6,"endColumn":19},{"ruleId":"348","severity":1,"message":"367","line":6,"column":21,"nodeType":"350","messageId":"351","endLine":6,"endColumn":26},{"ruleId":"348","severity":1,"message":"368","line":7,"column":10,"nodeType":"350","messageId":"351","endLine":7,"endColumn":15},{"ruleId":"348","severity":1,"message":"369","line":7,"column":17,"nodeType":"350","messageId":"351","endLine":7,"endColumn":33},{"ruleId":"348","severity":1,"message":"370","line":8,"column":8,"nodeType":"350","messageId":"351","endLine":8,"endColumn":15},{"ruleId":"348","severity":1,"message":"371","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":24},{"ruleId":"348","severity":1,"message":"367","line":6,"column":21,"nodeType":"350","messageId":"351","endLine":6,"endColumn":26},{"ruleId":"348","severity":1,"message":"369","line":7,"column":17,"nodeType":"350","messageId":"351","endLine":7,"endColumn":33},{"ruleId":"372","severity":1,"message":"373","line":131,"column":17,"nodeType":"350","messageId":"374","endLine":131,"endColumn":22},{"ruleId":"372","severity":1,"message":"373","line":146,"column":17,"nodeType":"350","messageId":"374","endLine":146,"endColumn":22},{"ruleId":"372","severity":1,"message":"373","line":152,"column":17,"nodeType":"350","messageId":"374","endLine":152,"endColumn":22},{"ruleId":"348","severity":1,"message":"375","line":153,"column":13,"nodeType":"350","messageId":"351","endLine":153,"endColumn":18},{"ruleId":"372","severity":1,"message":"373","line":160,"column":17,"nodeType":"350","messageId":"374","endLine":160,"endColumn":22},{"ruleId":"376","severity":1,"message":"377","line":164,"column":13,"nodeType":"378","messageId":"379","endLine":164,"endColumn":45},{"ruleId":"348","severity":1,"message":"380","line":196,"column":25,"nodeType":"350","messageId":"351","endLine":196,"endColumn":28},{"ruleId":"348","severity":1,"message":"380","line":229,"column":25,"nodeType":"350","messageId":"351","endLine":229,"endColumn":28},{"ruleId":"348","severity":1,"message":"381","line":245,"column":14,"nodeType":"350","messageId":"351","endLine":245,"endColumn":18},{"ruleId":"348","severity":1,"message":"382","line":245,"column":20,"nodeType":"350","messageId":"351","endLine":245,"endColumn":26},{"ruleId":"348","severity":1,"message":"383","line":245,"column":28,"nodeType":"350","messageId":"351","endLine":245,"endColumn":32},{"ruleId":"348","severity":1,"message":"384","line":245,"column":34,"nodeType":"350","messageId":"351","endLine":245,"endColumn":40},{"ruleId":"348","severity":1,"message":"385","line":245,"column":42,"nodeType":"350","messageId":"351","endLine":245,"endColumn":48},{"ruleId":"348","severity":1,"message":"386","line":245,"column":72,"nodeType":"350","messageId":"351","endLine":245,"endColumn":81},{"ruleId":"348","severity":1,"message":"387","line":246,"column":13,"nodeType":"350","messageId":"351","endLine":246,"endColumn":19},{"ruleId":"348","severity":1,"message":"388","line":246,"column":36,"nodeType":"350","messageId":"351","endLine":246,"endColumn":40},{"ruleId":"348","severity":1,"message":"389","line":246,"column":42,"nodeType":"350","messageId":"351","endLine":246,"endColumn":46},{"ruleId":"348","severity":1,"message":"390","line":246,"column":48,"nodeType":"350","messageId":"351","endLine":246,"endColumn":60},{"ruleId":"348","severity":1,"message":"391","line":246,"column":62,"nodeType":"350","messageId":"351","endLine":246,"endColumn":71},{"ruleId":"348","severity":1,"message":"392","line":246,"column":73,"nodeType":"350","messageId":"351","endLine":246,"endColumn":84},{"ruleId":"348","severity":1,"message":"393","line":247,"column":18,"nodeType":"350","messageId":"351","endLine":247,"endColumn":26},{"ruleId":"348","severity":1,"message":"394","line":247,"column":28,"nodeType":"350","messageId":"351","endLine":247,"endColumn":35},{"ruleId":"348","severity":1,"message":"395","line":249,"column":13,"nodeType":"350","messageId":"351","endLine":249,"endColumn":18},{"ruleId":"348","severity":1,"message":"396","line":249,"column":20,"nodeType":"350","messageId":"351","endLine":249,"endColumn":24},{"ruleId":"348","severity":1,"message":"397","line":249,"column":26,"nodeType":"350","messageId":"351","endLine":249,"endColumn":32},{"ruleId":"348","severity":1,"message":"398","line":249,"column":34,"nodeType":"350","messageId":"351","endLine":249,"endColumn":39},{"ruleId":"348","severity":1,"message":"399","line":249,"column":41,"nodeType":"350","messageId":"351","endLine":249,"endColumn":43},{"ruleId":"348","severity":1,"message":"400","line":249,"column":45,"nodeType":"350","messageId":"351","endLine":249,"endColumn":47},{"ruleId":"348","severity":1,"message":"401","line":249,"column":49,"nodeType":"350","messageId":"351","endLine":249,"endColumn":56},{"ruleId":"348","severity":1,"message":"402","line":249,"column":58,"nodeType":"350","messageId":"351","endLine":249,"endColumn":65},{"ruleId":"348","severity":1,"message":"403","line":249,"column":67,"nodeType":"350","messageId":"351","endLine":249,"endColumn":76},{"ruleId":"348","severity":1,"message":"404","line":249,"column":78,"nodeType":"350","messageId":"351","endLine":249,"endColumn":87},{"ruleId":"348","severity":1,"message":"405","line":250,"column":13,"nodeType":"350","messageId":"351","endLine":250,"endColumn":22},{"ruleId":"348","severity":1,"message":"406","line":250,"column":24,"nodeType":"350","messageId":"351","endLine":250,"endColumn":35},{"ruleId":"348","severity":1,"message":"407","line":250,"column":37,"nodeType":"350","messageId":"351","endLine":250,"endColumn":52},{"ruleId":"348","severity":1,"message":"408","line":250,"column":54,"nodeType":"350","messageId":"351","endLine":250,"endColumn":62},{"ruleId":"348","severity":1,"message":"409","line":250,"column":64,"nodeType":"350","messageId":"351","endLine":250,"endColumn":66},{"ruleId":"348","severity":1,"message":"410","line":250,"column":68,"nodeType":"350","messageId":"351","endLine":250,"endColumn":71},{"ruleId":"348","severity":1,"message":"411","line":250,"column":73,"nodeType":"350","messageId":"351","endLine":250,"endColumn":86},{"ruleId":"348","severity":1,"message":"412","line":254,"column":13,"nodeType":"350","messageId":"351","endLine":254,"endColumn":24},{"ruleId":"348","severity":1,"message":"413","line":255,"column":13,"nodeType":"350","messageId":"351","endLine":255,"endColumn":22},{"ruleId":"348","severity":1,"message":"414","line":256,"column":13,"nodeType":"350","messageId":"351","endLine":256,"endColumn":21},{"ruleId":"348","severity":1,"message":"415","line":263,"column":17,"nodeType":"350","messageId":"351","endLine":263,"endColumn":23},{"ruleId":"348","severity":1,"message":"416","line":266,"column":17,"nodeType":"350","messageId":"351","endLine":266,"endColumn":23},{"ruleId":"348","severity":1,"message":"417","line":474,"column":114,"nodeType":"350","messageId":"351","endLine":474,"endColumn":121},{"ruleId":"348","severity":1,"message":"418","line":475,"column":13,"nodeType":"350","messageId":"351","endLine":475,"endColumn":29},{"ruleId":"348","severity":1,"message":"419","line":475,"column":31,"nodeType":"350","messageId":"351","endLine":475,"endColumn":51},{"ruleId":"348","severity":1,"message":"420","line":475,"column":106,"nodeType":"350","messageId":"351","endLine":475,"endColumn":117},{"ruleId":"348","severity":1,"message":"382","line":351,"column":15,"nodeType":"350","messageId":"351","endLine":351,"endColumn":21},{"ruleId":"372","severity":1,"message":"421","line":361,"column":21,"nodeType":"350","messageId":"374","endLine":361,"endColumn":25},{"ruleId":"348","severity":1,"message":"422","line":367,"column":13,"nodeType":"350","messageId":"351","endLine":367,"endColumn":17},{"ruleId":"348","severity":1,"message":"423","line":378,"column":15,"nodeType":"350","messageId":"351","endLine":378,"endColumn":21},{"ruleId":"372","severity":1,"message":"424","line":384,"column":25,"nodeType":"350","messageId":"374","endLine":384,"endColumn":38},{"ruleId":"372","severity":1,"message":"425","line":385,"column":25,"nodeType":"350","messageId":"374","endLine":385,"endColumn":29},{"ruleId":"372","severity":1,"message":"424","line":390,"column":25,"nodeType":"350","messageId":"374","endLine":390,"endColumn":38},{"ruleId":"372","severity":1,"message":"425","line":391,"column":25,"nodeType":"350","messageId":"374","endLine":391,"endColumn":29},{"ruleId":"372","severity":1,"message":"426","line":404,"column":17,"nodeType":"350","messageId":"374","endLine":404,"endColumn":20},{"ruleId":"372","severity":1,"message":"427","line":405,"column":17,"nodeType":"350","messageId":"374","endLine":405,"endColumn":22},{"ruleId":"348","severity":1,"message":"428","line":419,"column":13,"nodeType":"350","messageId":"351","endLine":419,"endColumn":22},{"ruleId":"348","severity":1,"message":"429","line":425,"column":13,"nodeType":"350","messageId":"351","endLine":425,"endColumn":16},{"ruleId":"372","severity":1,"message":"430","line":430,"column":13,"nodeType":"350","messageId":"374","endLine":430,"endColumn":16},{"ruleId":"348","severity":1,"message":"431","line":489,"column":9,"nodeType":"350","messageId":"351","endLine":489,"endColumn":15},{"ruleId":"348","severity":1,"message":"432","line":490,"column":9,"nodeType":"350","messageId":"351","endLine":490,"endColumn":15},{"ruleId":"348","severity":1,"message":"433","line":601,"column":43,"nodeType":"350","messageId":"351","endLine":601,"endColumn":55},{"ruleId":"348","severity":1,"message":"434","line":601,"column":57,"nodeType":"350","messageId":"351","endLine":601,"endColumn":77},{"ruleId":"348","severity":1,"message":"435","line":601,"column":79,"nodeType":"350","messageId":"351","endLine":601,"endColumn":87},{"ruleId":"348","severity":1,"message":"436","line":601,"column":89,"nodeType":"350","messageId":"351","endLine":601,"endColumn":98},{"ruleId":"348","severity":1,"message":"437","line":601,"column":100,"nodeType":"350","messageId":"351","endLine":601,"endColumn":108},{"ruleId":"348","severity":1,"message":"438","line":601,"column":110,"nodeType":"350","messageId":"351","endLine":601,"endColumn":125},{"ruleId":"348","severity":1,"message":"439","line":601,"column":127,"nodeType":"350","messageId":"351","endLine":601,"endColumn":135},{"ruleId":"348","severity":1,"message":"394","line":601,"column":137,"nodeType":"350","messageId":"351","endLine":601,"endColumn":144},{"ruleId":"348","severity":1,"message":"440","line":602,"column":13,"nodeType":"350","messageId":"351","endLine":602,"endColumn":28},{"ruleId":"348","severity":1,"message":"441","line":602,"column":44,"nodeType":"350","messageId":"351","endLine":602,"endColumn":56},{"ruleId":"348","severity":1,"message":"356","line":602,"column":70,"nodeType":"350","messageId":"351","endLine":602,"endColumn":79},{"ruleId":"348","severity":1,"message":"442","line":610,"column":13,"nodeType":"350","messageId":"351","endLine":610,"endColumn":17},{"ruleId":"348","severity":1,"message":"443","line":611,"column":13,"nodeType":"350","messageId":"351","endLine":611,"endColumn":18},{"ruleId":"348","severity":1,"message":"444","line":612,"column":13,"nodeType":"350","messageId":"351","endLine":612,"endColumn":19},{"ruleId":"348","severity":1,"message":"445","line":621,"column":17,"nodeType":"350","messageId":"351","endLine":621,"endColumn":19},{"ruleId":"348","severity":1,"message":"446","line":632,"column":21,"nodeType":"350","messageId":"351","endLine":632,"endColumn":30},{"ruleId":"348","severity":1,"message":"428","line":633,"column":21,"nodeType":"350","messageId":"351","endLine":633,"endColumn":30},{"ruleId":"348","severity":1,"message":"447","line":644,"column":21,"nodeType":"350","messageId":"351","endLine":644,"endColumn":34},{"ruleId":"348","severity":1,"message":"448","line":648,"column":21,"nodeType":"350","messageId":"351","endLine":648,"endColumn":29},{"ruleId":"348","severity":1,"message":"449","line":649,"column":21,"nodeType":"350","messageId":"351","endLine":649,"endColumn":23},{"ruleId":"348","severity":1,"message":"429","line":650,"column":21,"nodeType":"350","messageId":"351","endLine":650,"endColumn":24},{"ruleId":"348","severity":1,"message":"365","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":13},{"ruleId":"348","severity":1,"message":"382","line":346,"column":15,"nodeType":"350","messageId":"351","endLine":346,"endColumn":21},{"ruleId":"372","severity":1,"message":"421","line":353,"column":21,"nodeType":"350","messageId":"374","endLine":353,"endColumn":25},{"ruleId":"348","severity":1,"message":"422","line":359,"column":13,"nodeType":"350","messageId":"351","endLine":359,"endColumn":17},{"ruleId":"348","severity":1,"message":"423","line":370,"column":15,"nodeType":"350","messageId":"351","endLine":370,"endColumn":21},{"ruleId":"372","severity":1,"message":"424","line":376,"column":25,"nodeType":"350","messageId":"374","endLine":376,"endColumn":38},{"ruleId":"372","severity":1,"message":"425","line":377,"column":25,"nodeType":"350","messageId":"374","endLine":377,"endColumn":29},{"ruleId":"372","severity":1,"message":"424","line":382,"column":25,"nodeType":"350","messageId":"374","endLine":382,"endColumn":38},{"ruleId":"372","severity":1,"message":"425","line":383,"column":25,"nodeType":"350","messageId":"374","endLine":383,"endColumn":29},{"ruleId":"372","severity":1,"message":"426","line":396,"column":17,"nodeType":"350","messageId":"374","endLine":396,"endColumn":20},{"ruleId":"372","severity":1,"message":"427","line":397,"column":17,"nodeType":"350","messageId":"374","endLine":397,"endColumn":22},{"ruleId":"348","severity":1,"message":"428","line":412,"column":13,"nodeType":"350","messageId":"351","endLine":412,"endColumn":22},{"ruleId":"348","severity":1,"message":"429","line":418,"column":13,"nodeType":"350","messageId":"351","endLine":418,"endColumn":16},{"ruleId":"372","severity":1,"message":"430","line":423,"column":13,"nodeType":"350","messageId":"374","endLine":423,"endColumn":16},{"ruleId":"348","severity":1,"message":"431","line":482,"column":9,"nodeType":"350","messageId":"351","endLine":482,"endColumn":15},{"ruleId":"348","severity":1,"message":"432","line":483,"column":9,"nodeType":"350","messageId":"351","endLine":483,"endColumn":15},{"ruleId":"348","severity":1,"message":"442","line":600,"column":13,"nodeType":"350","messageId":"351","endLine":600,"endColumn":17},{"ruleId":"348","severity":1,"message":"443","line":601,"column":13,"nodeType":"350","messageId":"351","endLine":601,"endColumn":18},{"ruleId":"348","severity":1,"message":"444","line":602,"column":13,"nodeType":"350","messageId":"351","endLine":602,"endColumn":19},{"ruleId":"348","severity":1,"message":"445","line":611,"column":17,"nodeType":"350","messageId":"351","endLine":611,"endColumn":19},{"ruleId":"348","severity":1,"message":"446","line":622,"column":21,"nodeType":"350","messageId":"351","endLine":622,"endColumn":30},{"ruleId":"348","severity":1,"message":"428","line":623,"column":21,"nodeType":"350","messageId":"351","endLine":623,"endColumn":30},{"ruleId":"348","severity":1,"message":"447","line":634,"column":21,"nodeType":"350","messageId":"351","endLine":634,"endColumn":34},{"ruleId":"348","severity":1,"message":"448","line":638,"column":21,"nodeType":"350","messageId":"351","endLine":638,"endColumn":29},{"ruleId":"348","severity":1,"message":"449","line":639,"column":21,"nodeType":"350","messageId":"351","endLine":639,"endColumn":23},{"ruleId":"348","severity":1,"message":"429","line":640,"column":21,"nodeType":"350","messageId":"351","endLine":640,"endColumn":24},{"ruleId":"348","severity":1,"message":"382","line":404,"column":15,"nodeType":"350","messageId":"351","endLine":404,"endColumn":21},{"ruleId":"372","severity":1,"message":"421","line":411,"column":21,"nodeType":"350","messageId":"374","endLine":411,"endColumn":25},{"ruleId":"348","severity":1,"message":"422","line":417,"column":13,"nodeType":"350","messageId":"351","endLine":417,"endColumn":17},{"ruleId":"348","severity":1,"message":"423","line":430,"column":15,"nodeType":"350","messageId":"351","endLine":430,"endColumn":21},{"ruleId":"372","severity":1,"message":"424","line":436,"column":25,"nodeType":"350","messageId":"374","endLine":436,"endColumn":38},{"ruleId":"372","severity":1,"message":"425","line":437,"column":25,"nodeType":"350","messageId":"374","endLine":437,"endColumn":29},{"ruleId":"372","severity":1,"message":"424","line":442,"column":25,"nodeType":"350","messageId":"374","endLine":442,"endColumn":38},{"ruleId":"372","severity":1,"message":"425","line":443,"column":25,"nodeType":"350","messageId":"374","endLine":443,"endColumn":29},{"ruleId":"372","severity":1,"message":"426","line":456,"column":17,"nodeType":"350","messageId":"374","endLine":456,"endColumn":20},{"ruleId":"372","severity":1,"message":"427","line":457,"column":17,"nodeType":"350","messageId":"374","endLine":457,"endColumn":22},{"ruleId":"348","severity":1,"message":"428","line":471,"column":13,"nodeType":"350","messageId":"351","endLine":471,"endColumn":22},{"ruleId":"348","severity":1,"message":"429","line":477,"column":13,"nodeType":"350","messageId":"351","endLine":477,"endColumn":16},{"ruleId":"372","severity":1,"message":"430","line":482,"column":13,"nodeType":"350","messageId":"374","endLine":482,"endColumn":16},{"ruleId":"348","severity":1,"message":"431","line":541,"column":9,"nodeType":"350","messageId":"351","endLine":541,"endColumn":15},{"ruleId":"348","severity":1,"message":"432","line":542,"column":9,"nodeType":"350","messageId":"351","endLine":542,"endColumn":15},{"ruleId":"348","severity":1,"message":"433","line":653,"column":43,"nodeType":"350","messageId":"351","endLine":653,"endColumn":55},{"ruleId":"348","severity":1,"message":"434","line":653,"column":57,"nodeType":"350","messageId":"351","endLine":653,"endColumn":77},{"ruleId":"348","severity":1,"message":"435","line":653,"column":79,"nodeType":"350","messageId":"351","endLine":653,"endColumn":87},{"ruleId":"348","severity":1,"message":"436","line":653,"column":89,"nodeType":"350","messageId":"351","endLine":653,"endColumn":98},{"ruleId":"348","severity":1,"message":"437","line":653,"column":100,"nodeType":"350","messageId":"351","endLine":653,"endColumn":108},{"ruleId":"348","severity":1,"message":"438","line":653,"column":110,"nodeType":"350","messageId":"351","endLine":653,"endColumn":125},{"ruleId":"348","severity":1,"message":"439","line":653,"column":127,"nodeType":"350","messageId":"351","endLine":653,"endColumn":135},{"ruleId":"348","severity":1,"message":"394","line":653,"column":137,"nodeType":"350","messageId":"351","endLine":653,"endColumn":144},{"ruleId":"348","severity":1,"message":"440","line":654,"column":13,"nodeType":"350","messageId":"351","endLine":654,"endColumn":28},{"ruleId":"348","severity":1,"message":"441","line":654,"column":44,"nodeType":"350","messageId":"351","endLine":654,"endColumn":56},{"ruleId":"348","severity":1,"message":"356","line":654,"column":70,"nodeType":"350","messageId":"351","endLine":654,"endColumn":79},{"ruleId":"348","severity":1,"message":"445","line":673,"column":17,"nodeType":"350","messageId":"351","endLine":673,"endColumn":19},{"ruleId":"348","severity":1,"message":"446","line":684,"column":21,"nodeType":"350","messageId":"351","endLine":684,"endColumn":30},{"ruleId":"348","severity":1,"message":"428","line":685,"column":21,"nodeType":"350","messageId":"351","endLine":685,"endColumn":30},{"ruleId":"348","severity":1,"message":"447","line":696,"column":21,"nodeType":"350","messageId":"351","endLine":696,"endColumn":34},{"ruleId":"348","severity":1,"message":"448","line":700,"column":21,"nodeType":"350","messageId":"351","endLine":700,"endColumn":29},{"ruleId":"348","severity":1,"message":"449","line":701,"column":21,"nodeType":"350","messageId":"351","endLine":701,"endColumn":23},{"ruleId":"348","severity":1,"message":"429","line":702,"column":21,"nodeType":"350","messageId":"351","endLine":702,"endColumn":24},{"ruleId":"348","severity":1,"message":"370","line":2,"column":8,"nodeType":"350","messageId":"351","endLine":2,"endColumn":15},{"ruleId":"348","severity":1,"message":"450","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":13},{"ruleId":"348","severity":1,"message":"370","line":2,"column":8,"nodeType":"350","messageId":"351","endLine":2,"endColumn":15},{"ruleId":"348","severity":1,"message":"451","line":2,"column":8,"nodeType":"350","messageId":"351","endLine":2,"endColumn":19},{"ruleId":"348","severity":1,"message":"370","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":15},{"ruleId":"348","severity":1,"message":"450","line":4,"column":8,"nodeType":"350","messageId":"351","endLine":4,"endColumn":13},"no-native-reassign",["452"],"no-negated-in-lhs",["453"],"no-unused-vars","'initState' is assigned a value but never used.","Identifier","unusedVar","'orderTarget' is assigned a value but never used.","'moment' is defined but never used.","'ordMSTerassignFromOrdersList' is assigned a value but never used.","'reportTarget' is assigned a value but never used.","'reportNum' is assigned a value but never used.","'statusApproval' is assigned a value but never used.","'reportIRtarget' is assigned a value but never used.","'reportMRtarget' is assigned a value but never used.","'isReject' is assigned a value but never used.","'isApprove' is assigned a value but never used.","'CustomizedButtons' is defined but never used.","'newDocument' is assigned a value but never used.","'dateOrder' is assigned a value but never used.","'Modal' is defined but never used.","'Card' is defined but never used.","'Table' is defined but never used.","'Input' is defined but never used.","'FormControlLabel' is defined but never used.","'classes' is defined but never used.","'CustomizedTables' is defined but never used.","no-redeclare","'score' is already defined.","redeclared","'count' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'res' is assigned a value but never used.","'bast' is assigned a value but never used.","'report' is assigned a value but never used.","'isMn' is assigned a value but never used.","'listPi' is assigned a value but never used.","'listMn' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'idPi' is assigned a value but never used.","'idMn' is assigned a value but never used.","'dateHandover' is assigned a value but never used.","'endPeriod' is assigned a value but never used.","'startPeriod' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","'isError' is assigned a value but never used.","'nomor' is defined but never used.","'tipe' is defined but never used.","'status' is defined but never used.","'order' is defined but never used.","'id' is defined but never used.","'ms' is defined but never used.","'bastNum' is defined but never used.","'picName' is defined but never used.","'namaOrder' is defined but never used.","'deskripsi' is defined but never used.","'namaKedua' is defined but never used.","'divisiKedua' is defined but never used.","'organisasiKedua' is defined but never used.","'picKedua' is defined but never used.","'po' is defined but never used.","'sph' is defined but never used.","'selectedOrder' is defined but never used.","'laporanList' is assigned a value but never used.","'orderList' is assigned a value but never used.","'bastList' is assigned a value but never used.","'pop_pi' is assigned a value but never used.","'pop_mn' is assigned a value but never used.","'isAdded' is assigned a value but never used.","'servicesEngineer' is assigned a value but never used.","'servicesEngineerName' is assigned a value but never used.","'listService' is assigned a value but never used.","'bast' is already defined.","'endP' is assigned a value but never used.","'mnList' is assigned a value but never used.","'selectedOrder' is already defined.","'tipe' is already defined.","'end' is already defined.","'start' is already defined.","'deskripsi' is assigned a value but never used.","'sph' is assigned a value but never used.","'doc' is already defined.","'adderX' is assigned a value but never used.","'adderY' is assigned a value but never used.","'isMrUploaded' is assigned a value but never used.","'isInstallationReport' is assigned a value but never used.","'isUpload' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'isDelete' is assigned a value but never used.","'isDeleteSuccess' is assigned a value but never used.","'isFailed' is assigned a value but never used.","'listMaintenance' is assigned a value but never used.","'messageError' is assigned a value but never used.","'tipe' is assigned a value but never used.","'nomor' is assigned a value but never used.","'status' is assigned a value but never used.","'mn' is assigned a value but never used.","'namaOrder' is assigned a value but never used.","'selectedOrder' is assigned a value but never used.","'picKedua' is assigned a value but never used.","'po' is assigned a value but never used.","'Order' is defined but never used.","'ServiceList' is defined but never used.","no-global-assign","no-unsafe-negation"]