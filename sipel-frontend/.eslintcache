[{"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"2","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"3","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"4","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"5","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js":"6","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"7","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"8","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"9","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\register.component.js":"10","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth.service.js":"11","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\profile.component.js":"12","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\login.component.js":"13","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\serviceWorker.js":"14","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Home.js":"15","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth-header.js":"16","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\board-admin.component.js":"17","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\user.service.js":"18"},{"size":642,"mtime":1622286329388,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1622172457057,"results":"21","hashOfConfig":"20"},{"size":9657,"mtime":1622606425745,"results":"22","hashOfConfig":"20"},{"size":225,"mtime":1622172457026,"results":"23","hashOfConfig":"20"},{"size":26329,"mtime":1622548800606,"results":"24","hashOfConfig":"20"},{"size":26570,"mtime":1622608920863,"results":"25","hashOfConfig":"20"},{"size":32829,"mtime":1622565788438,"results":"26","hashOfConfig":"20"},{"size":143,"mtime":1622172457010,"results":"27","hashOfConfig":"20"},{"size":2994,"mtime":1622172457041,"results":"28","hashOfConfig":"20"},{"size":7221,"mtime":1622571918663,"results":"29","hashOfConfig":"20"},{"size":825,"mtime":1622571909804,"results":"30","hashOfConfig":"20"},{"size":1554,"mtime":1622347982924,"results":"31","hashOfConfig":"20"},{"size":3825,"mtime":1622347982930,"results":"32","hashOfConfig":"20"},{"size":5085,"mtime":1610020586000,"results":"33","hashOfConfig":"20"},{"size":912,"mtime":1622348743158,"results":"34","hashOfConfig":"20"},{"size":342,"mtime":1622286329388,"results":"35","hashOfConfig":"20"},{"size":846,"mtime":1622532247616,"results":"36","hashOfConfig":"20"},{"size":916,"mtime":1622607717359,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"19w90iv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["77","78"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["79","80","81","82","83","84","85","86"],"// import logo from './logo.svg';\r\nimport { useRoutes} from \"hookrouter\";\r\n// import routes from \"./router\";\r\nimport './App.css';\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport PenugasanEngineer from \"./containers/PenugasanEngineer\";\r\nimport PeriodeKontrak from \"./containers/PeriodeKontrak\";\r\nimport LaporanInstalasiMaintenance from \"./containers/LaporanInstalasiMaintenance\";\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport homepage from \"./assets/homepage.png\";\r\n\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/Auth/login.component\";\r\nimport Register from \"./components/Auth/register.component\";\r\nimport Profile from \"./components/Auth/profile.component\";\r\nimport Home from \"./components/Home\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\n\r\n\r\n/**const routes = {\r\n  \"/\": () => \r\n            <div> \r\n              <div style={{ margin: 75 }}>\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      <div style={{ margin: 30 }}>\r\n                        <h3 style={{ color: '#F7873F' }}>Hello, name_here</h3>\r\n                        <h1 style={{ color: '#2F3F58' }}>Selamat Datang di Sistem Informasi Pengelolaan Layanan</h1>\r\n                      </div>\r\n                    </td>\r\n                    <td><img src={homepage} alt=\"homepage\"/></td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>,\r\n  \"/produksi/penugasan\": () => <PenugasanEngineer />,\r\n  \"/produksi/periodeKontrak\": () => <PeriodeKontrak />,\r\n  \"/laporan/daftarLaporan\" : () => <LaporanInstalasiMaintenance />\r\n};\r\n\r\nfunction App(){\r\n\r\n  const routeResult = useRoutes(routes);\r\n\r\n    return (\r\n        <>\r\n          <Navbar collapseOnSelect expand=\"lg\" id=\"navbar\" variant=\"dark\" style={{ backgroundColor: '#2F3F58' }}>\r\n            <Navbar.Brand href=\"/\" style={{ textDecoration: 'none', color: '#F7873F' }}>SIPEL</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#dashboard\">Dashboard</Nav.Link>\r\n                <NavDropdown title=\"Order\" id=\"collasible-nav-dropdown\">\r\n                  {/* <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item> }\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Nav.Link href=\"#action/3.1\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Action</Nav.Link>\r\n                    <Nav.Link href=\"#action/3.2\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Another action</Nav.Link>\r\n                    <Nav.Link href=\"#action/3.4\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Something</Nav.Link>\r\n                    <Nav.Link href=\"#action/3.4\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Something 2</Nav.Link>\r\n                  </div>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Produksi\" id=\"collasible-nav-dropdown\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Nav.Link href=\"/produksi/penugasan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Penugasan</Nav.Link>\r\n                    <Nav.Link href=\"#produksi/progress-delivery\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Progress Delivery</Nav.Link>\r\n                    <Nav.Link href=\"/produksi/periodeKontrak\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Periode Kontrak</Nav.Link>\r\n                    <Nav.Link href=\"#produksi/maintenance\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Maintenance</Nav.Link>\r\n                  </div>\r\n                  {/* <NavDropdown.Item href=\"#produksi/progress-delivery\">Progress Delivery</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/produksi/periodeKontrak\">Periode Kontrak</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#produksi/maintenance\">Maintenance</NavDropdown.Item> }\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Laporan\"  id=\"collasible-nav-dropdown\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Nav.Link href=\"/laporan/daftarLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>\r\n                    <Nav.Link href=\"#laporan/verifikasiLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Verifikasi Laporan</Nav.Link>\r\n                  </div>\r\n                  {/* <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item> }\r\n                </NavDropdown>\r\n                <Nav.Link href=\"#halamanAdmin\">Halaman Admin</Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href=\"#deets\">name_here</Nav.Link>\r\n                {/* <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                </Nav.Link> }\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Layout>\r\n            { routeResult }\r\n          </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;*/\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showPeriodeKontrak: false,\r\n      showPenugasanEngineer: false,\r\n      showMengelolaLaporan: false,\r\n\t  showBoardAdmin: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showPeriodeKontrak: user.roles.includes(\"ROLE_ADMIN\", \"ROLE_MANAGER\"),\r\n        showPenugasanEngineer: user.roles.includes(\"ROLE_ADMIN\", \"ROLE_MANAGER\"),\r\n        showMengelolaLaporan: user.roles.includes(\"ROLE_ADMIN\", \"ROLE_MANAGER\", \"ROLE_ENGINEER\"),\r\n\t\t    showBoardAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n  render() {\r\n    const { currentUser, showPeriodeKontrak, showPenugasanEngineer, showBoardAdmin, showMengelolaLaporan } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/\"} className=\"navbar-brand\">\r\n            SIPEL\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showPenugasanEngineer && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/penugasan\"} className=\"nav-link\">\r\n                  Penugasan Engineer\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showPeriodeKontrak && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/periode-kontrak\"} className=\"nav-link\">\r\n                  Periode Kontrak\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showMengelolaLaporan && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/mengelola-laporan\"} className=\"nav-link\">\r\n                  Mengelola Laporan\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/penugasan\" component={PenugasanEngineer} />\r\n            <Route path=\"/periode-kontrak\" component={PeriodeKontrak} />\r\n            <Route path=\"/mengelola-laporan\" component={LaporanInstalasiMaintenance} />\r\n\t\t\t      <Route path=\"/api/test/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js",["87","88"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",["89","90","91","92"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\n// import CustomizedButtons from \"../../components/Button\";\r\n// import CustomizedModal from \"../../components/Modal\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass PeriodeKontrak extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isExtend: false,\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            users: [],\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            servicesEngineerName: [],\r\n            isReport: false,\r\n            isReportExtend: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            currentDateTime: new Date(),\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            totalServices: 0,\r\n            listService: [],\r\n            services: [],\r\n            isAdded: false,\r\n            newNoPO: null,\r\n            timeRemaining: null,\r\n            isFailed: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            listPi: [],\r\n            listMs: [],\r\n            messageError: null\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReport = this.handleReport.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAddServices = this.handleAddServices.bind(this);\r\n        this.handleChangeListService = this.handleChangeListService.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerified/ms\", { headers: authHeader() });\r\n            const users = await APIConfig.get(\"/users\", { headers: authHeader() });\r\n            const listPi = await APIConfig.get(\"/orders/pi\", { headers: authHeader() });\r\n            const listMs = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            this.setState({ ordersVerified: orders.data, users: users.data, listPi: listPi.data, listMs: listMs.data});\r\n        } catch (error) {\r\n            // alert(\"Oops terjadi masalah pada server\");\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let response;\r\n        let order;\r\n        let pi;\r\n        let ms;\r\n        let newOrder;\r\n        let services;\r\n        try {\r\n            order = this.state.orderTarget;\r\n            pi = order.projectInstallation === false ? null : this.getPi(order.idOrder).idOrderPi;\r\n            ms = this.getMs(order.idOrder);   \r\n            if(this.state.isExtend){\r\n                const dataOrder = {\r\n                    idOrder: order.idOrder,\r\n                    orderName: order.orderName,\r\n                    clientName: order.clientName,\r\n                    clientOrg: order.clientOrg,\r\n                    clientDiv: order.clientDiv,\r\n                    clientPIC: order.clientPIC,\r\n                    clientEmail: order.clientEmail,\r\n                    clientPhone: order.clientPhone,\r\n                    dateOrder: order.dateOrder,\r\n                    noPO: this.state.newNoPO,\r\n                    noSPH: order.noSPH,\r\n                    description: order.description,\r\n                    verified: order.verified,\r\n                    projectInstallation: order.projectInstallation,\r\n                    managedService: order.managedService,\r\n                    idOrderPi: pi,\r\n                    idOrderMs: ms.idOrderMs\r\n                }\r\n                response = await APIConfig.put(`/order/${order.idOrder}/perpanjangKontrak`, dataOrder, { headers: authHeader() });\r\n                newOrder = response.data.result;\r\n                this.loadData();\r\n            }\r\n            \r\n            console.log(this.state.listMs);\r\n            console.log(newOrder);\r\n            const dataMs = {\r\n                idOrderMs: this.state.isExtend ? null : ms.idOrderMs,\r\n                idUserPic: this.state.picEngineerMs,\r\n                actualStart: this.convertDateToString(this.state.actualStart),\r\n                actualEnd: this.convertDateToString(this.state.actualEnd),\r\n                activated: ms.activated,\r\n                dateClosedMS: null\r\n            }\r\n            response = await APIConfig.put(`/order/${this.state.isExtend ? newOrder.idOrder : order.idOrder}/ms/updateKontrak`, dataMs, { headers: authHeader() });\r\n            const newMsUpdated = response.data.result;\r\n            \r\n            if(this.state.isExtend){\r\n                let listServiceName = this.state.servicesEngineerName;\r\n                let listService = this.state.servicesEngineer;\r\n                services = new Array(listService.length);\r\n                for(let i=0; i<listService.length; i++){\r\n                    const dataService = {\r\n                    name: listServiceName[i],\r\n                    idUser: listService[i]\r\n                    }\r\n                    response = await APIConfig.post(`/order/${newOrder.idOrder}/ms/${newMsUpdated.idOrderMs}/createService`, dataService, { headers: authHeader() });\r\n                    const service = response.data.result;\r\n                    services[i] = service;\r\n                    this.loadData();\r\n                }\r\n            }\r\n            this.loadData();\r\n        } catch (error) {\r\n            console.log(error);\r\n            return this.setState({isFailed: true, messageError: this.state.isExtend? \"Perpanjangan periode kontrak gagal disimpan.\" : \"Periode kontrak gagal disimpan.\"});\r\n        }\r\n\r\n        if(this.state.isExtend){\r\n            this.setState({orderTarget: newOrder, services: services})\r\n        }\r\n        \r\n        this.setState({isFailed: false, isValid: true, isSuccess: true, isExtend: false, isEdit: false, timeRemaining: this.getTimeRemaining(this.state.actualStart, this.state.actualEnd)});\r\n    }\r\n\r\n    handleValidation(event){\r\n        event.preventDefault();\r\n        if(this.state.isExtend){\r\n            let listServiceName = this.state.servicesEngineerName;\r\n            let listService = this.state.servicesEngineer;\r\n            for(let i=0; i<listService.length; i++){\r\n                if(listServiceName[i] === null || listServiceName[i] === \"\"){\r\n                    return this.setState({isFailed: true, messageError: \"Semua service wajib diisi\"});\r\n                }\r\n                if(listService[i] === null || listService[i] === \"\"){\r\n                    return this.setState({isFailed: true, messageError: \"Semua Engineer Service wajib diisi\"});\r\n                }\r\n            }\r\n\r\n            if((this.state.picEngineerMs === null || this.state.picEngineerMs === \"\")){\r\n                return this.setState({isFailed: true, messageError: \"PIC Engineer Managed Service wajib diisi\"});\r\n            }\r\n\r\n            if(this.state.newNoPO === null || this.state.newNoPO === \"\"){\r\n                return this.setState({isFailed: true, messageError: \"Nomor PO baru wajib diisi\"});\r\n            }\r\n        }\r\n\r\n        if(new Date(this.state.actualEnd) < new Date(this.state.actualStart)){\r\n            return this.setState({isFailed: true, messageError: \"Periode mulai harus lebih awal dari periode akhir\"});\r\n        }else{\r\n            this.setState({isFailed: false, messageError: null});\r\n            this.handleSubmit(event);\r\n        }\r\n    }\r\n\r\n    handleReport(event){\r\n        event.preventDefault();\r\n        if(this.state.isExtend){\r\n            this.setState({isReportExtend: true, isAdded: false});\r\n        }else{\r\n            this.setState({isReport: true});\r\n        }\r\n\r\n        this.setState({isSuccess: false, isFailed: false, isValid: true});\r\n    }\r\n\r\n    getDate(value){\r\n        let date = new Date(value);\r\n        const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                            \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n\r\n        return date.getDate()+\" \"+monthNames[date.getMonth()]+\" \"+date.getFullYear();\r\n    }\r\n\r\n    getTimeRemaining(actualStart, actualEnd){\r\n        const startDate = new Date(actualStart);\r\n        const endDate = new Date(actualEnd);\r\n        let currentDate = this.state.currentDateTime;\r\n\r\n        if ( startDate > currentDate) {\r\n            return \"Belum mulai\";\r\n        } else if ( currentDate > endDate ){\r\n            return \"Habis\";\r\n        }\r\n        \r\n        let startYear = currentDate.getFullYear();\r\n        let startMonth = currentDate.getMonth();\r\n        let startDay = currentDate.getDate();\r\n        \r\n        let endYear = endDate.getFullYear();\r\n        let endMonth = endDate.getMonth();\r\n        let endDay = endDate.getDate();\r\n        \r\n        // We calculate February based on end year as it might be a leep year which might influence the number of days.\r\n        let february = (((endYear % 4 === 0) && (endYear % 100 !== 0)) || (endYear % 400 === 0)) ? 29 : 28;\r\n        let daysOfMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        \r\n        let startDateNotPassedInEndYear = ((endMonth < startMonth) || (endMonth === startMonth )) && (endDay < startDay);\r\n        let years = endYear - startYear - (startDateNotPassedInEndYear ? 1 : 0);\r\n        \r\n        let months = (12 + endMonth - startMonth - (endDay < startDay ? 1 : 0)) % 12;\r\n        \r\n        // (12 + ...) % 12 makes sure index is always between 0 and 11\r\n        let days = startDay <= endDay ? endDay - startDay : daysOfMonth[(12 + endMonth - 1) % 12] - startDay + endDay;\r\n\r\n        let timeRemaining = \"\";\r\n        if(years === 0){\r\n            if(months === 0){\r\n                timeRemaining = days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = months+\" bulan\";\r\n                }\r\n                timeRemaining = months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }else{\r\n            if(months === 0){\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun \"+months+\" bulan\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }\r\n\r\n        return timeRemaining;\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        const servicesEngineerNew = this.state.servicesEngineer;\r\n        const servicesEngineerNameNew = this.state.servicesEngineerName;\r\n\r\n        if( name.substring(0,16) === \"servicesEngineer\"){\r\n            let index = Number(name.substring(16));\r\n            servicesEngineerNew[index] = value;\r\n            this.setState({ servicesEngineer: servicesEngineerNew});\r\n        }else if( name.substring(0,11) === \"serviceName\" ){\r\n            let index = Number(name.substring(11));\r\n            servicesEngineerNameNew[index] = value;\r\n            this.setState({ servicesEngineerName: servicesEngineerNameNew});\r\n        }else{\r\n            this.setState({ [name]: value });\r\n            console.log(name);\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    handleEdit(order, typeEdit) {\r\n        let ms = this.getMs(order.idOrder);\r\n        let actualStart = moment(new Date(ms.actualStart)).format(\"YYYY-MM-DD\");\r\n        let actualEnd = moment(new Date(ms.actualEnd)).format(\"YYYY-MM-DD\");\r\n        console.log(actualStart);\r\n        console.log(actualEnd);\r\n        if(typeEdit === \"perbarui\"){\r\n            this.setState({ isEdit: true , formValid: true});\r\n        }else{\r\n            this.setState({ isExtend: true });\r\n        }\r\n\r\n        this.setState({  \r\n            orderTarget: order,\r\n            actualStart: actualStart,\r\n            actualEnd: actualEnd,\r\n            totalServices: ms.listService.length,\r\n            timeRemaining: this.getTimeRemaining(ms.actualStart, ms.actualEnd)  \r\n        });\r\n        \r\n        if(ms.idUserPic !== null){\r\n            let servicesEngineer = ms.listService.map(service => service.idUser.id);\r\n            let servicesEngineerName = ms.listService.map(service => service.name);\r\n            this.setState({\r\n                picEngineerMs: ms.idUserPic.id, \r\n                servicesEngineer: servicesEngineer,\r\n                servicesEngineerName: servicesEngineerName,\r\n                services: ms.listService\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isExtend: false, \r\n            isReportExtend: false, \r\n            totalServices: 0,\r\n            isAdded: false,\r\n            timeRemaining: null,\r\n            serviceEngineer: [],\r\n            listService: [],\r\n            services: [],\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            picEngineerMs: null,\r\n            newNoPO: null,\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            isFailed: false,\r\n            isSuccess: false,\r\n            isError: false,\r\n            messageError: null\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        if (ms.length !== 0) {\r\n            // console.log(ms[0]);\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPi(idOrder){\r\n        console.log(idOrder);\r\n        // console.log(this.state.listPi);\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n        // console.log(pi.length);\r\n        if (pi.length !== 0) {\r\n            console.log(pi[0]);\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPICMS(idOrder){\r\n        let ms = this.getMs(idOrder);\r\n        \r\n        if(ms !== null){\r\n            let user = ms.idUserPic;\r\n            if(user !== null){\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPICService(service){\r\n        if(service.idUser !== null){\r\n            console.log(service.idUser.fullname);\r\n            return service.idUser.fullname;\r\n        }\r\n        return <p style={{color: \"red\"}}>Belum ditugaskan</p>;\r\n    }\r\n\r\n    convertDateToString(date){\r\n        return date+\"T17:00:00.000+00:00\";\r\n    }\r\n\r\n    getDaysMonthsYears(date){\r\n        const dateSplit = date.split(\" \");\r\n        if(date.includes(\"tahun\")){\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], dateSplit[4]];\r\n                return [0, dateSplit[2], dateSplit[4]];\r\n            }\r\n            if(date.includes(\"hari\")) return [dateSplit[0], 0, dateSplit[4]];\r\n            return [0, 0, dateSplit[4]];\r\n        }else{\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], 0];\r\n                return [0, dateSplit[2], 0];\r\n            }\r\n            return [dateSplit[0], 0, 0];\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrderList = newOrderList.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.noPO.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    handleAddServices(){\r\n        this.setState({isAdded: true});\r\n        // let servicesEngineer = [...this.state.servicesEngineer];\r\n        let initialTotal = this.state.listService.length;\r\n        const totalServicesNew = initialTotal+1;\r\n        this.setState({ totalServices: totalServicesNew });\r\n        let servicesEngineer = this.state.servicesEngineer.concat(null);\r\n        let servicesEngineerName = this.state.servicesEngineerName.concat(null);\r\n        this.setState({serviceEngineer: servicesEngineer, servicesEngineerName: servicesEngineerName});\r\n        console.log(this.state.servicesEngineer);\r\n        \r\n        let services = [...this.state.services, null];\r\n        this.setState({services: services});\r\n        // this.setState({listService: [...this.state.listService, [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+initialTotal} \r\n        // placeholder=\"masukkan nama service\" onChange={this.handleChangeField}/>, \r\n        // <Form.Control as=\"select\" size=\"sm\" key={initialTotal} name={\"servicesEngineer\"+initialTotal} \r\n        // value={this.state.servicesEngineer[initialTotal] === null ? \"\": this.state.servicesEngineer[initialTotal]}\r\n        // onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n        // {this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n        // </Form.Control>]]});\r\n        this.loadData();\r\n    }\r\n\r\n    handleChangeListService(){\r\n        this.handleAddServices();\r\n        this.setState({listService: this.state.services.map((service, index) => \r\n            [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} \r\n            value={this.state.servicesEngineerName[index] === null ? service === null ? null : \r\n            service.name : this.state.servicesEngineerName[index]} \r\n            onChange={this.handleChangeField} placeholder=\"masukkan service\"/>,\r\n            <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n            value={this.state.servicesEngineer[index] === null ? \"\" : this.state.servicesEngineer[index]}\r\n            onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n            {this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n            </Form.Control>])});\r\n    }\r\n\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false, messageError: null});\r\n    }\r\n\r\n    render() {\r\n        const { ordersVerified, isEdit, isExtend, orderTarget, users, actualStart, actualEnd, picEngineerMs, isAdded, timeRemaining, isSuccess, isFailed, isError, messageError,\r\n            servicesEngineer, servicesEngineerName, isReport, isReportExtend, orderFiltered, isFiltered, listService, services } = this.state;\r\n        const tableHeaders = ['No.', 'Nomor PO', 'Nama Order', 'Periode Mulai', 'Periode Berakhir', 'Waktu Tersisa', 'Aksi'];                  \r\n        \r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(this.getMs(order.idOrder).actualStart), this.getDate(this.getMs(order.idOrder).actualEnd),\r\n                        this.getTimeRemaining(this.getMs(order.idOrder).actualStart, this.getMs(order.idOrder).actualEnd),\r\n                        <div className=\"justify-content-between\"><Button className={classes.button1} onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</Button>\r\n                        <Button className={classes.button2} onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</Button></div>])\r\n                        : ordersVerified.map((order) =>\r\n                        [order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(this.getMs(order.idOrder).actualStart), this.getDate(this.getMs(order.idOrder).actualEnd),\r\n                        this.getTimeRemaining(this.getMs(order.idOrder).actualStart, this.getMs(order.idOrder).actualEnd),\r\n                        <div className=\"justify-content-between\"><Button className={classes.button1} onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</Button>\r\n                        <Button className={classes.button2} onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</Button></div>])\r\n \r\n        const tableServiceHeaders = ['No.', 'Nama Service', 'Engineer'];\r\n        let tableServiceRows;\r\n\r\n        if(orderTarget !== null){\r\n                // tableServiceRows = isAdded ? listService : services.map((service, index) =>\r\n                //                     [isExtend? <Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} value={servicesEngineerName[index] === null ? \r\n                //                     service.name : servicesEngineerName[index]} onChange={this.handleChangeField} placeholder=\"masukkan service\"/>\r\n                //                     : service.name, (isReport || isEdit || isReportExtend ) ? this.getPICService(service) :\r\n                //                     <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                //                     value={servicesEngineer[index] === null ? \"\" : servicesEngineer[index]}\r\n                //                     onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n                //                     {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                //                 </Form.Control>]);\r\n                tableServiceRows = isExtend ?  \r\n                                services.map((service, index) => \r\n                                [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} \r\n                                value={this.state.servicesEngineerName[index] === null ? service === null ? null : \r\n                                service.name : this.state.servicesEngineerName[index]} \r\n                                onChange={this.handleChangeField} placeholder=\"masukkan service\"/>,\r\n                                <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                                value={this.state.servicesEngineer[index] === null ? \"\" : this.state.servicesEngineer[index]}\r\n                                onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n                                {this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                </Form.Control>])\r\n                                : services.map((service) =>[service.name, this.getPICService(service)]);\r\n        }\r\n\r\n        const titleExtend = isReportExtend? \"Perpanjangan Periode Kontrak\" : \"Form Perpanjangan Periode Kontrak\";\r\n        const title = isReport? \"Rincian Periode Kontrak\" : \"Form Perbarui Periode Kontrak\";\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <div><h1 className=\"text-center\">Daftar Order</h1></div>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} className={classes.search}/></div>\r\n                <div><CustomizedTables headers={tableHeaders} rows={tableRows}/></div>\r\n                <Modal\r\n                    show={isEdit || isReport || isExtend || isReportExtend}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {isEdit? title : titleExtend}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        {messageError}\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                            : <></> }\r\n                            <p>\r\n                                { orderTarget !== null ?\r\n                                <Form>\r\n                                    <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                        {/* <tr>\r\n                                            <td>Id Order</td>\r\n                                            <td>: {orderTarget.idOrder}</td>\r\n                                        </tr> */}\r\n                                        <tr>\r\n                                            <td>Nomor PO</td>\r\n                                            <td>: {orderTarget.noPO === null ? \"-\" : orderTarget.noPO}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nama Order</td>\r\n                                            <td>: {orderTarget.orderName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Perusahaan</td>\r\n                                            <td>: {orderTarget.clientOrg}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                            {isExtend ? <td className=\"d-flex justify-content-end\">\r\n                                            <Button className={classes.button1} onClick={this.handleChangeListService}>\r\n                                                + Tambah Services\r\n                                                </Button></td>\r\n                                                : <></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isExtend ? \r\n                                            <td><p className=\"d-flex\">Services<p style={{color: \"red\"}}>*</p></p></td> \r\n                                            : <td>Services</td>}\r\n                                            <td>\r\n                                                <><CustomizedTables headers={tableServiceHeaders} rows={tableServiceRows}></CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isExtend ?\r\n                                            <><td><p className=\"d-flex\">PIC Engineer<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control as=\"select\" size=\"sm\" name=\"picEngineerMs\" value={picEngineerMs === null ? \"\" : picEngineerMs} onChange={this.handleChangeField}>\r\n                                                    <option value=\"\">Belum ditugaskan</option>\r\n                                                    {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                                </Form.Control></td></>\r\n                                            : <><td>PIC Engineer</td>\r\n                                            <td>: {this.getPICMS(orderTarget.idOrder) === null? \"Belum ditugaskan\" : this.getPICMS(orderTarget.idOrder).fullname}</td></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            { isExtend ? <>\r\n                                            <td><p className=\"d-flex\">Nomor PO Baru<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"text\" size=\"sm\" name=\"newNoPO\" onChange={this.handleChangeField} placeholder=\"masukkan nomor PO baru\"/></td></> : <></> } \r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isReport || isReportExtend ?\r\n                                            <><td>Periode Mulai</td> \r\n                                            <td>: {this.getDate(actualStart)}</td></> :\r\n                                            <><td><p className=\"d-flex\">Periode Mulai<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualStart\" value={actualStart} onChange={this.handleChangeField}/></td></> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isReport || isReportExtend  ? \r\n                                            <><td>Periode Berakhir</td>\r\n                                            <td>: {this.getDate(actualEnd)}</td></> :\r\n                                            <><td><p className=\"d-flex\">Periode Berakhir<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualEnd\" value={actualEnd} onChange={this.handleChangeField}/></td></> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Waktu Tersisa</td> \r\n                                            <td>: {timeRemaining}</td> \r\n                                        </tr>\r\n                                        {isReport || isReportExtend ? <></> :\r\n                                        <tr>\r\n                                            <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                            <td className=\"d-flex justify-content-end\">\r\n                                                <Button className={classes.button1} onClick={this.handleValidation}>\r\n                                                    simpan\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr> }\r\n                                    </Table>\r\n                                </Form> : <></>}\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    show={isSuccess || isError}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {isSuccess?\r\n                        <>\r\n                            <div className=\"d-flex justify-content-center\">{isEdit? \"Periode Kontrak\" : \"Perpanjangan Periode Kontrak\"} berhasil disimpan.</div><br></br>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" className={classes.button1} onClick={this.handleReport}>\r\n                                    Kembali\r\n                                </Button>\r\n                            </div>\r\n                        </> :\r\n                        <>\r\n                        <div className=\"d-flex justify-content-center\">Oops terjadi masalah pada server</div><br></br>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleCancel}>\r\n                                Kembali\r\n                            </Button>\r\n                        </div>\r\n                        </>}\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodeKontrak;","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\register.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth.service.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\profile.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\login.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\serviceWorker.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Home.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth-header.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\board-admin.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\user.service.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"97","severity":1,"message":"102","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":16},{"ruleId":"97","severity":1,"message":"103","line":10,"column":18,"nodeType":"99","messageId":"100","endLine":10,"endColumn":29},{"ruleId":"97","severity":1,"message":"104","line":10,"column":31,"nodeType":"99","messageId":"100","endLine":10,"endColumn":34},{"ruleId":"97","severity":1,"message":"105","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":16},{"ruleId":"97","severity":1,"message":"106","line":143,"column":69,"nodeType":"99","messageId":"100","endLine":143,"endColumn":83},{"ruleId":"97","severity":1,"message":"107","line":143,"column":85,"nodeType":"99","messageId":"100","endLine":143,"endColumn":105},{"ruleId":"97","severity":1,"message":"108","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":19},{"ruleId":"97","severity":1,"message":"109","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":13},{"ruleId":"97","severity":1,"message":"110","line":462,"column":110,"nodeType":"99","messageId":"100","endLine":462,"endColumn":117},{"ruleId":"97","severity":1,"message":"111","line":463,"column":13,"nodeType":"99","messageId":"100","endLine":463,"endColumn":29},{"ruleId":"97","severity":1,"message":"112","line":463,"column":31,"nodeType":"99","messageId":"100","endLine":463,"endColumn":51},{"ruleId":"97","severity":1,"message":"113","line":463,"column":106,"nodeType":"99","messageId":"100","endLine":463,"endColumn":117},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useRoutes' is defined but never used.","Identifier","unusedVar","'Layout' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'homepage' is defined but never used.","'showBoardAdmin' is assigned a value but never used.","'showMengelolaLaporan' is assigned a value but never used.","'UserService' is defined but never used.","'axios' is defined but never used.","'isAdded' is assigned a value but never used.","'servicesEngineer' is assigned a value but never used.","'servicesEngineerName' is assigned a value but never used.","'listService' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]