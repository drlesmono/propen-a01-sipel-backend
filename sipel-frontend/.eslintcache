[{"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"2","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"3","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"4","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"5","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js":"6","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"7","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"8","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"9","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\register.component.js":"10","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth.service.js":"11","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\profile.component.js":"12","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\login.component.js":"13","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\serviceWorker.js":"14","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Home.js":"15","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth-header.js":"16","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\board-admin.component.js":"17","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\user.service.js":"18","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\HalamanAdmin\\index.js":"19","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx":"20","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx":"21","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\OrderVerification\\ListNotVerifiedOrder.jsx":"22","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx":"23","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx":"24","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\OrderVerification\\OrderDetails.jsx":"25","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx":"26","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\OrderVerification\\OrderVerificationComponent.jsx":"27","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\OrderService.js":"28","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\InstallationProjectService.js":"29"},{"size":642,"mtime":1622286329388,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1622172457057,"results":"32","hashOfConfig":"31"},{"size":8696,"mtime":1622737748299,"results":"33","hashOfConfig":"31"},{"size":225,"mtime":1622172457026,"results":"34","hashOfConfig":"31"},{"size":26329,"mtime":1622548800606,"results":"35","hashOfConfig":"31"},{"size":25795,"mtime":1622635434887,"results":"36","hashOfConfig":"31"},{"size":32829,"mtime":1622565788438,"results":"37","hashOfConfig":"31"},{"size":143,"mtime":1622172457010,"results":"38","hashOfConfig":"31"},{"size":2994,"mtime":1622172457041,"results":"39","hashOfConfig":"31"},{"size":7222,"mtime":1622711695235,"results":"40","hashOfConfig":"31"},{"size":825,"mtime":1622571909804,"results":"41","hashOfConfig":"31"},{"size":1676,"mtime":1622738783116,"results":"42","hashOfConfig":"31"},{"size":3818,"mtime":1622710409060,"results":"43","hashOfConfig":"31"},{"size":5085,"mtime":1610020586000,"results":"44","hashOfConfig":"31"},{"size":1329,"mtime":1622711379189,"results":"45","hashOfConfig":"31"},{"size":342,"mtime":1622286329388,"results":"46","hashOfConfig":"31"},{"size":846,"mtime":1622532247616,"results":"47","hashOfConfig":"31"},{"size":916,"mtime":1622607717359,"results":"48","hashOfConfig":"31"},{"size":12939,"mtime":1622710610636,"results":"49","hashOfConfig":"31"},{"size":3797,"mtime":1622737554734,"results":"50","hashOfConfig":"31"},{"size":2378,"mtime":1622737456746,"results":"51","hashOfConfig":"31"},{"size":3419,"mtime":1622737125096,"results":"52","hashOfConfig":"31"},{"size":3483,"mtime":1619761235173,"results":"53","hashOfConfig":"31"},{"size":2830,"mtime":1619761235171,"results":"54","hashOfConfig":"31"},{"size":3986,"mtime":1622737321312,"results":"55","hashOfConfig":"31"},{"size":3218,"mtime":1622729119805,"results":"56","hashOfConfig":"31"},{"size":3242,"mtime":1622736978525,"results":"57","hashOfConfig":"31"},{"size":822,"mtime":1622735075674,"results":"58","hashOfConfig":"31"},{"size":1275,"mtime":1622733918200,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"19w90iv",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["122","123"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["124","125","126"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js",["127","128"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport authHeader from '../../services/auth-header';\r\nimport UserService from \"../../services/user.service\";\r\nimport axios from 'axios';\r\n\r\nclass LaporanInstalasiMaintenance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            reports: [],\r\n            listIr: [],\r\n            listMr: [],\r\n            listPi: [],\r\n            listMs: [],\r\n            listMaintenance: [],\r\n            reportsFiltered: [],\r\n            isInstallationReport: false,\r\n            isMrUploaded: false,\r\n            isUpload: false,\r\n            isDelete: false,\r\n            isSuccess: false,\r\n            isDeleteSuccess: false,\r\n            isFailed: false,\r\n            isError: false,\r\n            reportTarget: null,\r\n            orderTarget: null,\r\n            maintenanceTarget: null,\r\n            orderByPO: null,\r\n            file: null,\r\n            notes: null,\r\n            isValid: true,\r\n            messageError: null,\r\n            reportNum: null\r\n        };\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleUpload = this.handleUpload.bind(this);\r\n        this.handleMrUpload = this.handleMrUpload.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n        this.handleCancelMrUpload = this.handleCancelMrUpload.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeFile = this.handleChangeFile.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n        this.handleValidationMrUpload = this.handleValidationMrUpload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n        \r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerifiedReport\", { headers: authHeader() });\r\n            const reports = await APIConfig.get(\"/reportsIrMr\", { headers: authHeader() });\r\n            const listIr = await APIConfig.get(\"/reports/ir\", { headers: authHeader() });\r\n            const listMr = await APIConfig.get(\"/reports/mr\", { headers: authHeader() });\r\n            const listPi = await APIConfig.get(\"/orders/pi\", { headers: authHeader() });\r\n            const listMs = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            this.setState({ ordersVerified: orders.data, reports: reports.data, listIr: listIr.data, \r\n                            listMr: listMr.data, listPi: listPi.data, listMs: listMs.data});\r\n        } catch (error) {\r\n            // alert(\"Oops terjadi masalah pada server\");\r\n            this.setState({ isError: true, messageError: \"Oops terjadi masalah pada server\" });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        try {   \r\n            let response;\r\n            let newReport;\r\n\r\n            const dataReport = new FormData();\r\n            dataReport.append(\"statusApproval\", \"pending\");\r\n            dataReport.append(\"signed\", false)\r\n            dataReport.append(\"reportType\", this.state.isInstallationReport ? \"installation\" : \"maintenance\");\r\n            dataReport.append(\"file\", this.state.file);\r\n            console.log(dataReport);\r\n            response = await APIConfig.post(`/report/upload`, dataReport, { headers: authHeader() });\r\n            newReport = response.data.result;\r\n\r\n            if(this.state.isInstallationReport){\r\n                const dataInstallationReport = {\r\n                    idInstallationReport: null,\r\n                    irNum: null,\r\n                    notes: this.state.notes,\r\n                    idOrderPi: this.getPi(parseInt(this.state.orderByPO, 10)).idOrderPi\r\n                }\r\n                await APIConfig.post(`/report/${newReport.idReport}/installation/upload`, dataInstallationReport, { headers: authHeader() });\r\n            }else{\r\n                const dataMaintenanceReport = {\r\n                    idMaintenanceReport: null,\r\n                    mrNum: null,\r\n                    notes: this.state.notes,\r\n                    idMaintenance: parseInt(this.state.maintenanceTarget, 10)\r\n                }\r\n                console.log(dataMaintenanceReport);\r\n                await APIConfig.post(`/report/${newReport.idReport}/maintenance/upload`, dataMaintenanceReport, { headers: authHeader() });\r\n            }\r\n            \r\n            this.setState({reportTarget: newReport});\r\n            this.loadData();\r\n        } catch (error) {\r\n            console.log(error);\r\n            return this.setState({isUpload: false, isMrUploaded:false, isInstallationReport: false, isError: true, messageError: \"Oops terjadi masalah pada server\"});\r\n        }\r\n        this.setState({isSuccess: true, isUpload: false, isMrUploaded:false, isInstallationReport: false});\r\n        this.loadData();\r\n    }\r\n\r\n    handleValidation(event){\r\n        event.preventDefault();\r\n        if(this.state.orderByPO === null || this.state.orderByPO === \"\"){\r\n            return this.setState({isFailed: true, messageError: \"Nomor PO wajib diisi\"});\r\n        }\r\n\r\n        if(this.state.file === null || this.state.file === \"\"){\r\n            return this.setState({isFailed: true, messageError: \"File wajib diisi\"});\r\n        }\r\n\r\n        this.setState({isFailed: false, messageError: null});\r\n        if(this.state.isInstallationReport === false){\r\n            return this.handleMrUpload(event);\r\n        }\r\n        this.handleSubmit(event);\r\n    }\r\n\r\n    handleValidationMrUpload(event){\r\n        event.preventDefault();\r\n        if(this.state.maintenanceTarget === null || this.state.maintenanceTarget === \"\"){\r\n            return this.setState({isFailed: true, messageError: \"Tanggal maintenance wajib diisi\"});\r\n        }\r\n        this.handleSubmit(event);\r\n    }\r\n\r\n    async handleDelete(event){\r\n        event.preventDefault();\r\n        try{\r\n            await APIConfig.delete(`/report/${this.state.reportTarget.idReport}/delete`, { headers: authHeader() });\r\n        }catch (error){\r\n            console.log(error);\r\n            return this.setState({isFailed: true, messageError: \"Laporan gagal dihapus\"});\r\n        }\r\n        this.loadData();\r\n        return this.setState({isDeleteSuccess: true, isDelete: false});\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleChangeFile(event){\r\n        event.preventDefault();\r\n        this.setState({[event.target.name]: event.target.files[0]});\r\n    }\r\n\r\n    getOrder(report){\r\n        if(report.reportType === \"installation\"){\r\n            const ir = this.getIr(report.idReport);\r\n            if(ir !== null){\r\n                const pi = ir.idOrderPi;\r\n                return pi.idOrder;\r\n            }\r\n        }else{\r\n            const mr = this.getMr(report.idReport);\r\n            if(mr !== null){\r\n                const maintenanceTarget = mr.idMaintenance;\r\n                for(let i=0; i<this.state.listMs.length; i++){\r\n                    if(this.state.listMs[i].listMaintenance !== null){\r\n                        const listMaintenance = this.state.listMs[i].listMaintenance.filter(maintenance => \r\n                                                maintenance.idMaintenance === maintenanceTarget.idMaintenance);\r\n                        if(listMaintenance.length !== 0){\r\n                            const ms = this.state.listMs[i];\r\n                            return ms.idOrder;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getListOrderFilter(){\r\n        if(this.state.isInstallationReport){\r\n            return this.state.ordersVerified.filter(order => order.projectInstallation === true);\r\n        }else{\r\n            return this.state.ordersVerified.filter(order => order.managedService === true);\r\n        }\r\n    }\r\n\r\n    getPi(idOrder){\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        console.log(ms);\r\n        if (ms.length !== 0) {\r\n            console.log(ms[0]);\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getIr(idReport){\r\n        let ir = this.state.listIr.filter(ir => ir.idReport.idReport === idReport);\r\n        if (ir.length !== 0) {\r\n            return ir[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMr(idReport){\r\n        let mr = this.state.listMr.filter(mr => mr.idReport.idReport === idReport);\r\n        if (mr.length !== 0) {\r\n            return mr[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getReportNum(report){\r\n        if(report.reportType === \"installation\"){\r\n            if(this.getIr(report.idReport) !== null){\r\n                return this.getIr(report.idReport).irNum;\r\n            }\r\n        }else{\r\n            if(this.getMr(report.idReport) !== null){\r\n                return this.getMr(report.idReport).mrNum;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleUpload(type){\r\n        if(type === \"instalasi\"){\r\n            this.setState({isInstallationReport: true});\r\n        }\r\n        this.setState({isUpload: true});\r\n    }\r\n\r\n    handleMrUpload(event){\r\n        event.preventDefault();\r\n        const ms = this.getMs(parseInt(this.state.orderByPO, 10));\r\n        this.setState({listMaintenance: ms.listMaintenance, isUpload: false, isInstallationReport: false, isMrUploaded: true});\r\n    }\r\n\r\n    getDate(value){\r\n        let date = new Date(value);\r\n        const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                            \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n\r\n        return date.getDate()+\" \"+monthNames[date.getMonth()]+\" \"+date.getFullYear();\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            listMaintenance: [],\r\n            isInstallationReport: false,\r\n            isMrUploaded: false,\r\n            isUpload: false,\r\n            isDelete: false,\r\n            isSuccess: false,\r\n            isDeleteSuccess: false,\r\n            isFailed: false,\r\n            isError: false,\r\n            reportTarget: null,\r\n            orderTarget: null,\r\n            maintenanceTarget: null,\r\n            orderByPO: null,\r\n            file: null,\r\n            notes: null,\r\n            isValid: true,\r\n            messageError: null,\r\n            isFiltered: false,\r\n            reportNum: null\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false });\r\n    }\r\n\r\n    handleConfirmDelete(report){\r\n        const reportNum = this.getReportNum(report);\r\n        this.setState({reportNum: reportNum, reportTarget: report, isDelete: true, orderTarget: this.getOrder(report)});\r\n    }\r\n\r\n    handleCancelMrUpload(){\r\n        this.setState({isMrUploaded: false, isUpload: true});\r\n    }\r\n\r\n    getUrl(report){\r\n        \r\n        if(report.fileType === \"application/pdf\"){\r\n            return report.urlFile+\"/preview\";\r\n\r\n        }else{\r\n            return report.urlFile;\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    getNotes(report){\r\n        if(report.reportType === \"installation\"){\r\n            const ir = this.getIr(report.idReport);\r\n            if(ir !== null){\r\n                if(ir.notes !== null){\r\n                    return ir.notes;\r\n                }\r\n            }\r\n        }else{\r\n            const mr = this.getMr(report.idReport);\r\n            if(mr !== null){\r\n                if(mr.notes !== null){\r\n                    return mr.notes;\r\n                }\r\n            }\r\n        }\r\n\r\n        return \"-\";\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newReportList = this.state.reports;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newReportList = this.state.reports.filter(report => {\r\n                return (report.reportName.toLowerCase().includes(value.toLowerCase()) || \r\n                this.getReportNum(report).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ reportsFiltered : newReportList });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { reports, reportsFiltered, isMrUploaded, isInstallationReport, isUpload, isSuccess, isDelete, isDeleteSuccess, isFailed, isError,\r\n                listMaintenance, reportTarget, messageError, isFiltered, reportNum } = this.state;\r\n        const tableHeaders = ['No.', 'Nomor Laporan', 'Nama Laporan', 'Nomor PO', 'Perusahaan', 'Tanggal dibuat', 'Catatan', 'Aksi'];                  \r\n        let tableRows = [];\r\n\r\n        if(reports.length !== 0){\r\n            tableRows = isFiltered ? reportsFiltered.map((report) =>\r\n                        [ this.getReportNum(report), report.reportName, this.getOrder(report).noPO, this.getOrder(report).clientOrg, \r\n                        this.getDate(report.uploadedDate), this.getNotes(report), \r\n                        <div className=\"d-flex justify-content-center\"><Button className={classes.button2}\r\n                        onClick={() => this.handleConfirmDelete(report)}>hapus</Button>\r\n                        <Button className={classes.button4} href={this.getUrl(report)} target = \"_blank\">lihat</Button></div>])\r\n                        : reports.map((report) =>\r\n                        [ this.getReportNum(report), report.reportName, this.getOrder(report).noPO, this.getOrder(report).clientOrg, \r\n                        this.getDate(report.uploadedDate), this.getNotes(report), \r\n                        <div className=\"d-flex justify-content-center\"><Button className={classes.button2}\r\n                        onClick={() => this.handleConfirmDelete(report)}>hapus</Button>\r\n                        <Button className={classes.button4} href={this.getUrl(report)} target = \"_blank\">lihat</Button></div>]);\r\n        }\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <div><h1 className=\"text-center\">Daftar Laporan</h1></div>\r\n                <div className=\"d-flex justify-content-between\" style={{padding: 5}}>\r\n                    <div className={classes.containerButtonUpload}>\r\n                        <Button size=\"sm\" className={[classes.button1, classes.buttonUpload].join(\" \")} onClick={() => this.handleUpload(\"instalasi\")}>Unggah Laporan Instalasi</Button>\r\n                        <Button size=\"sm\" className={[classes.button5, classes.buttonUpload].join(\" \")} onClick={() => this.handleUpload(\"maintenance\")}>Unggah Laporan Maintenance</Button>\r\n                    </div>\r\n                    <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n                </div>\r\n                <div>{ reports.length !== 0 ? <CustomizedTables headers={tableHeaders} rows={tableRows}/> : <p className=\"text-center\" style={{color: \"red\"}}>Belum terdapat laporan </p>}</div>\r\n                <Modal\r\n                    show={isUpload}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        {isUpload ?\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                {isInstallationReport ? \"Form Unggah Laporan Instalasi\" : \"Form Unggah Laporan Maintenance\"}\r\n                            </Modal.Title>\r\n                        : <></>}\r\n                    </Modal.Header>\r\n                        <Modal.Body>\r\n                               { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        <div>{messageError}</div>\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                               : <></> }\r\n                            <p>\r\n                                <Form>\r\n                                    <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                        <tr>\r\n                                            <td><p className=\"d-flex\">Nomor PO<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control as=\"select\" size=\"sm\" name=\"orderByPO\" onChange={this.handleChangeField}>\r\n                                                    <option value='' style={{color: 'gray'}}>Pilih Nomor PO</option>\r\n                                                    {this.getListOrderFilter().map((order) => <option value={order.idOrder}>{order.noPO}</option>)}\r\n                                                </Form.Control></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><p className=\"d-flex\">Laporan <p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.File name=\"file\" onChange={this.handleChangeFile}/></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Catatan</td>\r\n                                            <td><Form.Control type=\"text\" size=\"sm\" name=\"notes\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"Tambahkan catatan...\"/></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                            <td className=\"d-flex justify-content-end\">\r\n                                                    <Button variant=\"primary\" className={classes.button1} onClick={this.handleValidation}>\r\n                                                        {isInstallationReport ? \"simpan\" : \"unggah\"}\r\n                                                    </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </Table>\r\n                                </Form>\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    show={isMrUploaded}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancelMrUpload}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Form Pemilihan Maintenance\r\n                            </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        { isFailed ? \r\n                            <Card body className={classes.card}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div>{messageError}</div>\r\n                                     <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                </div>\r\n                            </Card>\r\n                        : <></> }\r\n                        <Form>\r\n                            <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                <tr>\r\n                                    <td><p className=\"d-flex\">Maintenance<p style={{color: \"red\"}}>*</p></p></td>\r\n                                    <td><Form.Control as=\"select\" size=\"sm\" name=\"maintenanceTarget\" onChange={this.handleChangeField}>\r\n                                        <option value='' style={{color: 'gray'}}>Pilih Tanggal Maintenance</option>\r\n                                        {listMaintenance.map((maintenance) => <option value={maintenance.idMaintenance}>{this.getDate(maintenance.dateMn)}</option>)}\r\n                                    </Form.Control></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                    <td className=\"d-flex justify-content-end\">\r\n                                    <Button variant=\"primary\" className={classes.button1} onClick={this.handleValidationMrUpload}>\r\n                                        simpan\r\n                                    </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </Table>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    show={isDelete}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        <div>{messageError}</div>\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                               : <></> }\r\n                        <div>Apakah Anda yakin menghapus laporan dengan nomor {reportNum === null? \"\" : reportNum} ?</div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button className={classes.button3} onClick={this.handleCancel}>\r\n                                    Batal\r\n                            </Button>\r\n                            <Button className={classes.button1} onClick={this.handleDelete}>\r\n                                    Hapus\r\n                            </Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    show={isSuccess || isDeleteSuccess || isError}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {isSuccess || isDeleteSuccess ?\r\n                        <>\r\n                            {isDeleteSuccess ? \r\n                                <><div className=\"d-flex justify-content-center\">Laporan dengan nomor {reportNum} berhasil dihapus.</div><br></br>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" className={classes.button1} onClick={this.handleCancel}>\r\n                                    Kembali\r\n                                </Button></div></>  \r\n                                :<><div className=\"d-flex justify-content-center\">Laporan {reportTarget.reportType === \"installation\" ? \"Instalasi\" : \"Maintenace\"} {reportTarget.reportName} pada order {this.getOrder(reportTarget) === null ? \"\" : this.getOrder(reportTarget).noPO} berhasil disimpan.</div><br></br>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" className={classes.button1} href={this.getUrl(reportTarget)} target=\"_blank\">\r\n                                    lihat\r\n                                </Button></div></>\r\n                            }\r\n                        </> :\r\n                        <>\r\n                        <div className=\"d-flex justify-content-center\">{messageError}</div><br></br>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleCancel}>\r\n                                Kembali\r\n                            </Button>\r\n                        </div>\r\n                        </>}\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LaporanInstalasiMaintenance;","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",["129","130","131","132"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\n// import CustomizedButtons from \"../../components/Button\";\r\n// import CustomizedModal from \"../../components/Modal\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass PeriodeKontrak extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isExtend: false,\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            users: [],\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            servicesEngineerName: [],\r\n            isReport: false,\r\n            isReportExtend: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            currentDateTime: new Date(),\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            totalServices: 0,\r\n            listService: [],\r\n            services: [],\r\n            isAdded: false,\r\n            newNoPO: null,\r\n            timeRemaining: null,\r\n            isFailed: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            listPi: [],\r\n            listMs: [],\r\n            messageError: null\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReport = this.handleReport.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAddServices = this.handleAddServices.bind(this);\r\n        this.handleChangeListService = this.handleChangeListService.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerified/ms\", { headers: authHeader() });\r\n            const users = await APIConfig.get(\"/users\", { headers: authHeader() });\r\n            const listPi = await APIConfig.get(\"/orders/pi\", { headers: authHeader() });\r\n            const listMs = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            this.setState({ ordersVerified: orders.data, users: users.data, listPi: listPi.data, listMs: listMs.data});\r\n        } catch (error) {\r\n            // alert(\"Oops terjadi masalah pada server\");\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let response;\r\n        let order;\r\n        let pi;\r\n        let ms;\r\n        let newOrder;\r\n        let services;\r\n        try {\r\n            order = this.state.orderTarget;\r\n            pi = order.projectInstallation === false ? null : this.getPi(order.idOrder).idOrderPi;\r\n            ms = this.getMs(order.idOrder);   \r\n            if(this.state.isExtend){\r\n                const dataOrder = {\r\n                    idOrder: order.idOrder,\r\n                    orderName: order.orderName,\r\n                    clientName: order.clientName,\r\n                    clientOrg: order.clientOrg,\r\n                    clientDiv: order.clientDiv,\r\n                    clientPIC: order.clientPIC,\r\n                    clientEmail: order.clientEmail,\r\n                    clientPhone: order.clientPhone,\r\n                    dateOrder: order.dateOrder,\r\n                    noPO: this.state.newNoPO,\r\n                    noSPH: order.noSPH,\r\n                    description: order.description,\r\n                    verified: order.verified,\r\n                    projectInstallation: order.projectInstallation,\r\n                    managedService: order.managedService,\r\n                    idOrderPi: pi,\r\n                    idOrderMs: ms.idOrderMs\r\n                }\r\n                response = await APIConfig.put(`/order/${order.idOrder}/perpanjangKontrak`, dataOrder, { headers: authHeader() });\r\n                newOrder = response.data.result;\r\n                this.loadData();\r\n            }\r\n            \r\n            console.log(this.state.listMs);\r\n            console.log(newOrder);\r\n            const dataMs = {\r\n                idOrderMs: this.state.isExtend ? null : ms.idOrderMs,\r\n                idUserPic: this.state.picEngineerMs,\r\n                actualStart: this.convertDateToString(this.state.actualStart),\r\n                actualEnd: this.convertDateToString(this.state.actualEnd),\r\n                activated: ms.activated,\r\n                dateClosedMS: null\r\n            }\r\n            response = await APIConfig.put(`/order/${this.state.isExtend ? newOrder.idOrder : order.idOrder}/ms/updateKontrak`, dataMs, { headers: authHeader() });\r\n            const newMsUpdated = response.data.result;\r\n            \r\n            if(this.state.isExtend){\r\n                let listServiceName = this.state.servicesEngineerName;\r\n                let listService = this.state.servicesEngineer;\r\n                services = new Array(listService.length);\r\n                for(let i=0; i<listService.length; i++){\r\n                    const dataService = {\r\n                    name: listServiceName[i],\r\n                    idUser: listService[i]\r\n                    }\r\n                    response = await APIConfig.post(`/order/${newOrder.idOrder}/ms/${newMsUpdated.idOrderMs}/createService`, dataService, { headers: authHeader() });\r\n                    const service = response.data.result;\r\n                    services[i] = service;\r\n                    this.loadData();\r\n                }\r\n            }\r\n            this.loadData();\r\n        } catch (error) {\r\n            console.log(error);\r\n            return this.setState({isFailed: true, messageError: this.state.isExtend? \"Perpanjangan periode kontrak gagal disimpan.\" : \"Periode kontrak gagal disimpan.\"});\r\n        }\r\n\r\n        if(this.state.isExtend){\r\n            this.setState({orderTarget: newOrder, services: services})\r\n        }\r\n        \r\n        this.setState({isFailed: false, isValid: true, isSuccess: true, isExtend: false, isEdit: false, timeRemaining: this.getTimeRemaining(this.state.actualStart, this.state.actualEnd)});\r\n    }\r\n\r\n    handleValidation(event){\r\n        event.preventDefault();\r\n        if(this.state.isExtend){\r\n            let listServiceName = this.state.servicesEngineerName;\r\n            let listService = this.state.servicesEngineer;\r\n            for(let i=0; i<listService.length; i++){\r\n                if(listServiceName[i] === null || listServiceName[i] === \"\"){\r\n                    return this.setState({isFailed: true, messageError: \"Semua service wajib diisi\"});\r\n                }\r\n                if(listService[i] === null || listService[i] === \"\"){\r\n                    return this.setState({isFailed: true, messageError: \"Semua Engineer Service wajib diisi\"});\r\n                }\r\n            }\r\n\r\n            if((this.state.picEngineerMs === null || this.state.picEngineerMs === \"\")){\r\n                return this.setState({isFailed: true, messageError: \"PIC Engineer Managed Service wajib diisi\"});\r\n            }\r\n\r\n            if(this.state.newNoPO === null || this.state.newNoPO === \"\"){\r\n                return this.setState({isFailed: true, messageError: \"Nomor PO baru wajib diisi\"});\r\n            }\r\n        }\r\n\r\n        if(new Date(this.state.actualEnd) < new Date(this.state.actualStart)){\r\n            return this.setState({isFailed: true, messageError: \"Periode mulai harus lebih awal dari periode akhir\"});\r\n        }else{\r\n            this.setState({isFailed: false, messageError: null});\r\n            this.handleSubmit(event);\r\n        }\r\n    }\r\n\r\n    handleReport(event){\r\n        event.preventDefault();\r\n        if(this.state.isExtend){\r\n            this.setState({isReportExtend: true, isAdded: false});\r\n        }else{\r\n            this.setState({isReport: true});\r\n        }\r\n\r\n        this.setState({isSuccess: false, isFailed: false, isValid: true});\r\n    }\r\n\r\n    getDate(value){\r\n        let date = new Date(value);\r\n        const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                            \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n\r\n        return date.getDate()+\" \"+monthNames[date.getMonth()]+\" \"+date.getFullYear();\r\n    }\r\n\r\n    getTimeRemaining(actualStart, actualEnd){\r\n        const startDate = new Date(actualStart);\r\n        const endDate = new Date(actualEnd);\r\n        let currentDate = this.state.currentDateTime;\r\n\r\n        if ( startDate > currentDate) {\r\n            return \"Belum mulai\";\r\n        } else if ( currentDate > endDate ){\r\n            return \"Habis\";\r\n        }\r\n        \r\n        let startYear = currentDate.getFullYear();\r\n        let startMonth = currentDate.getMonth();\r\n        let startDay = currentDate.getDate();\r\n        \r\n        let endYear = endDate.getFullYear();\r\n        let endMonth = endDate.getMonth();\r\n        let endDay = endDate.getDate();\r\n        \r\n        // We calculate February based on end year as it might be a leep year which might influence the number of days.\r\n        let february = (((endYear % 4 === 0) && (endYear % 100 !== 0)) || (endYear % 400 === 0)) ? 29 : 28;\r\n        let daysOfMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        \r\n        let startDateNotPassedInEndYear = ((endMonth < startMonth) || (endMonth === startMonth )) && (endDay < startDay);\r\n        let years = endYear - startYear - (startDateNotPassedInEndYear ? 1 : 0);\r\n        \r\n        let months = (12 + endMonth - startMonth - (endDay < startDay ? 1 : 0)) % 12;\r\n        \r\n        // (12 + ...) % 12 makes sure index is always between 0 and 11\r\n        let days = startDay <= endDay ? endDay - startDay : daysOfMonth[(12 + endMonth - 1) % 12] - startDay + endDay;\r\n\r\n        let timeRemaining = \"\";\r\n        if(years === 0){\r\n            if(months === 0){\r\n                timeRemaining = days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = months+\" bulan\";\r\n                }\r\n                timeRemaining = months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }else{\r\n            if(months === 0){\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun \"+months+\" bulan\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }\r\n\r\n        return timeRemaining;\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        const servicesEngineerNew = this.state.servicesEngineer;\r\n        const servicesEngineerNameNew = this.state.servicesEngineerName;\r\n\r\n        if( name.substring(0,16) === \"servicesEngineer\"){\r\n            let index = Number(name.substring(16));\r\n            servicesEngineerNew[index] = value;\r\n            this.setState({ servicesEngineer: servicesEngineerNew});\r\n        }else if( name.substring(0,11) === \"serviceName\" ){\r\n            let index = Number(name.substring(11));\r\n            servicesEngineerNameNew[index] = value;\r\n            this.setState({ servicesEngineerName: servicesEngineerNameNew});\r\n        }else{\r\n            this.setState({ [name]: value });\r\n            console.log(name);\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    handleEdit(order, typeEdit) {\r\n        let ms = this.getMs(order.idOrder);\r\n        let actualStart = moment(new Date(ms.actualStart)).format(\"YYYY-MM-DD\");\r\n        let actualEnd = moment(new Date(ms.actualEnd)).format(\"YYYY-MM-DD\");\r\n        console.log(actualStart);\r\n        console.log(actualEnd);\r\n        if(typeEdit === \"perbarui\"){\r\n            this.setState({ isEdit: true , formValid: true});\r\n        }else{\r\n            this.setState({ isExtend: true });\r\n        }\r\n\r\n        this.setState({  \r\n            orderTarget: order,\r\n            actualStart: actualStart,\r\n            actualEnd: actualEnd,\r\n            totalServices: ms.listService.length,\r\n            timeRemaining: this.getTimeRemaining(ms.actualStart, ms.actualEnd)  \r\n        });\r\n        \r\n        if(ms.idUserPic !== null){\r\n            let servicesEngineer = ms.listService.map(service => service.idUser.id);\r\n            let servicesEngineerName = ms.listService.map(service => service.name);\r\n            this.setState({\r\n                picEngineerMs: ms.idUserPic.id, \r\n                servicesEngineer: servicesEngineer,\r\n                servicesEngineerName: servicesEngineerName,\r\n                services: ms.listService\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isExtend: false, \r\n            isReportExtend: false, \r\n            totalServices: 0,\r\n            isAdded: false,\r\n            timeRemaining: null,\r\n            serviceEngineer: [],\r\n            listService: [],\r\n            services: [],\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            picEngineerMs: null,\r\n            newNoPO: null,\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            isFailed: false,\r\n            isSuccess: false,\r\n            isError: false,\r\n            messageError: null\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        if (ms.length !== 0) {\r\n            // console.log(ms[0]);\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPi(idOrder){\r\n        console.log(idOrder);\r\n        // console.log(this.state.listPi);\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n        // console.log(pi.length);\r\n        if (pi.length !== 0) {\r\n            console.log(pi[0]);\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPICMS(idOrder){\r\n        let ms = this.getMs(idOrder);\r\n        \r\n        if(ms !== null){\r\n            let user = ms.idUserPic;\r\n            if(user !== null){\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPICService(service){\r\n        if(service.idUser !== null){\r\n            console.log(service.idUser.fullname);\r\n            return service.idUser.fullname;\r\n        }\r\n        return <p style={{color: \"red\"}}>Belum ditugaskan</p>;\r\n    }\r\n\r\n    convertDateToString(date){\r\n        return date+\"T17:00:00.000+00:00\";\r\n    }\r\n\r\n    getDaysMonthsYears(date){\r\n        const dateSplit = date.split(\" \");\r\n        if(date.includes(\"tahun\")){\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], dateSplit[4]];\r\n                return [0, dateSplit[2], dateSplit[4]];\r\n            }\r\n            if(date.includes(\"hari\")) return [dateSplit[0], 0, dateSplit[4]];\r\n            return [0, 0, dateSplit[4]];\r\n        }else{\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], 0];\r\n                return [0, dateSplit[2], 0];\r\n            }\r\n            return [dateSplit[0], 0, 0];\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrderList = newOrderList.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.noPO.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    handleAddServices(){\r\n        this.setState({isAdded: true});\r\n        // let servicesEngineer = [...this.state.servicesEngineer];\r\n        let initialTotal = this.state.listService.length;\r\n        const totalServicesNew = initialTotal+1;\r\n        this.setState({ totalServices: totalServicesNew });\r\n        let servicesEngineer = this.state.servicesEngineer.concat(null);\r\n        let servicesEngineerName = this.state.servicesEngineerName.concat(null);\r\n        this.setState({serviceEngineer: servicesEngineer, servicesEngineerName: servicesEngineerName});\r\n        console.log(this.state.servicesEngineer);\r\n        \r\n        let services = [...this.state.services, null];\r\n        this.setState({services: services});\r\n        // this.setState({listService: [...this.state.listService, [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+initialTotal} \r\n        // placeholder=\"masukkan nama service\" onChange={this.handleChangeField}/>, \r\n        // <Form.Control as=\"select\" size=\"sm\" key={initialTotal} name={\"servicesEngineer\"+initialTotal} \r\n        // value={this.state.servicesEngineer[initialTotal] === null ? \"\": this.state.servicesEngineer[initialTotal]}\r\n        // onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n        // {this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n        // </Form.Control>]]});\r\n        this.loadData();\r\n    }\r\n\r\n    handleChangeListService(){\r\n        this.handleAddServices();\r\n        this.setState({listService: this.state.services.map((service, index) => \r\n            [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} \r\n            value={this.state.servicesEngineerName[index] === null ? service === null ? null : \r\n            service.name : this.state.servicesEngineerName[index]} \r\n            onChange={this.handleChangeField} placeholder=\"masukkan service\"/>,\r\n            <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n            value={this.state.servicesEngineer[index] === null ? \"\" : this.state.servicesEngineer[index]}\r\n            onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n            {this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n            </Form.Control>])});\r\n    }\r\n\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false, messageError: null});\r\n    }\r\n\r\n    render() {\r\n        const { ordersVerified, isEdit, isExtend, orderTarget, users, actualStart, actualEnd, picEngineerMs, isAdded, timeRemaining, isSuccess, isFailed, isError, messageError,\r\n            servicesEngineer, servicesEngineerName, isReport, isReportExtend, orderFiltered, isFiltered, listService, services } = this.state;\r\n        const tableHeaders = ['No.', 'Nomor PO', 'Nama Order', 'Periode Mulai', 'Periode Berakhir', 'Waktu Tersisa', 'Aksi'];                  \r\n        \r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(this.getMs(order.idOrder).actualStart), this.getDate(this.getMs(order.idOrder).actualEnd),\r\n                        this.getTimeRemaining(this.getMs(order.idOrder).actualStart, this.getMs(order.idOrder).actualEnd),\r\n                        <div className=\"justify-content-between\"><Button className={classes.button1} onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</Button>\r\n                        <Button className={classes.button2} onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</Button></div>])\r\n                        : ordersVerified.map((order) =>\r\n                        [order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(this.getMs(order.idOrder).actualStart), this.getDate(this.getMs(order.idOrder).actualEnd),\r\n                        this.getTimeRemaining(this.getMs(order.idOrder).actualStart, this.getMs(order.idOrder).actualEnd),\r\n                        <div className=\"justify-content-between\"><Button className={classes.button1} onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</Button>\r\n                        <Button className={classes.button2} onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</Button></div>])\r\n \r\n        const tableServiceHeaders = ['No.', 'Nama Service', 'Engineer'];\r\n        let tableServiceRows;\r\n\r\n        if(orderTarget !== null){\r\n                // tableServiceRows = isAdded ? listService : services.map((service, index) =>\r\n                //                     [isExtend? <Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} value={servicesEngineerName[index] === null ? \r\n                //                     service.name : servicesEngineerName[index]} onChange={this.handleChangeField} placeholder=\"masukkan service\"/>\r\n                //                     : service.name, (isReport || isEdit || isReportExtend ) ? this.getPICService(service) :\r\n                //                     <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                //                     value={servicesEngineer[index] === null ? \"\" : servicesEngineer[index]}\r\n                //                     onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n                //                     {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                //                 </Form.Control>]);\r\n                tableServiceRows = isExtend ?  \r\n                                services.map((service, index) => \r\n                                [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} \r\n                                value={this.state.servicesEngineerName[index] === null ? service === null ? null : \r\n                                service.name : this.state.servicesEngineerName[index]} \r\n                                onChange={this.handleChangeField} placeholder=\"masukkan service\"/>,\r\n                                <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                                value={this.state.servicesEngineer[index] === null ? \"\" : this.state.servicesEngineer[index]}\r\n                                onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n                                {this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                </Form.Control>])\r\n                                : services.map((service) =>[service.name, this.getPICService(service)]);\r\n        }\r\n\r\n        const titleExtend = isReportExtend? \"Perpanjangan Periode Kontrak\" : \"Form Perpanjangan Periode Kontrak\";\r\n        const title = isReport? \"Rincian Periode Kontrak\" : \"Form Perbarui Periode Kontrak\";\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <div><h1 className=\"text-center\">Daftar Order</h1></div>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} className={classes.search}/></div>\r\n                <div><CustomizedTables headers={tableHeaders} rows={tableRows}/></div>\r\n                <Modal\r\n                    show={isEdit || isReport || isExtend || isReportExtend}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {isEdit? title : titleExtend}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        {messageError}\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                            : <></> }\r\n                            <p>\r\n                                { orderTarget !== null ?\r\n                                <Form>\r\n                                    <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                        {/* <tr>\r\n                                            <td>Id Order</td>\r\n                                            <td>: {orderTarget.idOrder}</td>\r\n                                        </tr> */}\r\n                                        <tr>\r\n                                            <td>Nomor PO</td>\r\n                                            <td>: {orderTarget.noPO === null ? \"-\" : orderTarget.noPO}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nama Order</td>\r\n                                            <td>: {orderTarget.orderName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Perusahaan</td>\r\n                                            <td>: {orderTarget.clientOrg}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                            {isExtend ? <td className=\"d-flex justify-content-end\">\r\n                                            <Button className={classes.button1} onClick={this.handleChangeListService}>\r\n                                                + Tambah Services\r\n                                                </Button></td>\r\n                                                : <></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isExtend ? \r\n                                            <td><p className=\"d-flex\">Services<p style={{color: \"red\"}}>*</p></p></td> \r\n                                            : <td>Services</td>}\r\n                                            <td>\r\n                                                <><CustomizedTables headers={tableServiceHeaders} rows={tableServiceRows}></CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isExtend ?\r\n                                            <><td><p className=\"d-flex\">PIC Engineer<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control as=\"select\" size=\"sm\" name=\"picEngineerMs\" value={picEngineerMs === null ? \"\" : picEngineerMs} onChange={this.handleChangeField}>\r\n                                                    <option value=\"\">Belum ditugaskan</option>\r\n                                                    {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                                </Form.Control></td></>\r\n                                            : <><td>PIC Engineer</td>\r\n                                            <td>: {this.getPICMS(orderTarget.idOrder) === null? \"Belum ditugaskan\" : this.getPICMS(orderTarget.idOrder).fullname}</td></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            { isExtend ? <>\r\n                                            <td><p className=\"d-flex\">Nomor PO Baru<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"text\" size=\"sm\" name=\"newNoPO\" onChange={this.handleChangeField} placeholder=\"masukkan nomor PO baru\"/></td></> : <></> } \r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isReport || isReportExtend ?\r\n                                            <><td>Periode Mulai</td> \r\n                                            <td>: {this.getDate(actualStart)}</td></> :\r\n                                            <><td><p className=\"d-flex\">Periode Mulai<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualStart\" value={actualStart} onChange={this.handleChangeField}/></td></> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isReport || isReportExtend  ? \r\n                                            <><td>Periode Berakhir</td>\r\n                                            <td>: {this.getDate(actualEnd)}</td></> :\r\n                                            <><td><p className=\"d-flex\">Periode Berakhir<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualEnd\" value={actualEnd} onChange={this.handleChangeField}/></td></> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Waktu Tersisa</td> \r\n                                            <td>: {timeRemaining}</td> \r\n                                        </tr>\r\n                                        {isReport || isReportExtend ? <></> :\r\n                                        <tr>\r\n                                            <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                            <td className=\"d-flex justify-content-end\">\r\n                                                <Button className={classes.button1} onClick={this.handleValidation}>\r\n                                                    simpan\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr> }\r\n                                    </Table>\r\n                                </Form> : <></>}\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    show={isSuccess || isError}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {isSuccess?\r\n                        <>\r\n                            <div className=\"d-flex justify-content-center\">{isEdit? \"Periode Kontrak\" : \"Perpanjangan Periode Kontrak\"} berhasil disimpan.</div><br></br>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" className={classes.button1} onClick={this.handleReport}>\r\n                                    Kembali\r\n                                </Button>\r\n                            </div>\r\n                        </> :\r\n                        <>\r\n                        <div className=\"d-flex justify-content-center\">Oops terjadi masalah pada server</div><br></br>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleCancel}>\r\n                                Kembali\r\n                            </Button>\r\n                        </div>\r\n                        </>}\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodeKontrak;","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\register.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth.service.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\profile.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Auth\\login.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\serviceWorker.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\Home.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\auth-header.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\board-admin.component.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\user.service.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\containers\\HalamanAdmin\\index.js",["133","134","135"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport authHeader from '../../services/auth-header';\r\nimport axios from 'axios';\r\n\r\nclass HalamanAdmin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEdit: false,\r\n            userTarget: null,\r\n            usersFiltered: [],\r\n            users: [],\r\n            userFiltered: [],\r\n            isFiltered: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            isFailed: false,\r\n            usernameTarget: \"\",\r\n            role_name: \"\",\r\n            messageError: null,\r\n            isDelete: false,\r\n            isConfirmDelete: false\r\n            \r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n        this.handleConfirmDelete = this.handleConfirmDelete.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n        \r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const users = await APIConfig.get(\"/all/users\", { headers: authHeader() });\r\n            console.log(users.data);\r\n            this.setState({ users: users.data });\r\n            \r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleEdit(user) {\r\n        this.setState({\r\n            isEdit: true,\r\n            userTarget: user\r\n        });\r\n        \r\n    }\r\n\r\n    handleFilter(event){\r\n        let newUserList = this.state.users;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newUserList = this.state.users.filter(user => {\r\n                return (user.username.toLowerCase().includes(value.toLowerCase()) ||\r\n                user.role_name.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ usersFiltered : newUserList });\r\n    }\r\n\r\n\r\n    handleConfirmDelete(user) {\r\n        this.setState({\r\n            isConfirmDelete: true,\r\n            userTarget: user\r\n        });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isError: false, \r\n            isSuccess: false,\r\n            isFailed: false,\r\n            isConfirmDelete: false,\r\n            isDelete: false,\r\n            messageError: null\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false, messageError: null });\r\n    }\r\n\r\n    handleChangeField= (event) => {\r\n        this.setState({role_name: event.target.value});\r\n    }\r\n\r\n    handleSave = (e) => {\r\n        e.preventDefault();\r\n        let user = {username: this.state.userTarget.username, role_name: this.state.role_name};\r\n        console.log('user => ' + JSON.stringify(user));\r\n        const URL = \"http://localhost:2020/api/v1/user/updateRole\";\r\n        axios.put(URL, user, { headers: authHeader() });\r\n        this.setState({isSuccess: true});\r\n    }\r\n\r\n    handleDelete() {\r\n        \r\n        let user = {username: this.state.userTarget.username};\r\n        console.log('user => ' + JSON.stringify(user));\r\n        const URL = \"http://localhost:2020/api/v1/delete-user/\";\r\n        const usr = this.state.userTarget.username;\r\n        axios.delete(URL+usr, { headers: authHeader() });\r\n        \r\n        this.setState({\r\n            isDelete: true,\r\n        });\r\n        \r\n    }\r\n\r\n    handleValidation(event){\r\n        event.preventDefault();\r\n        if(this.state.role_name === \"\"){\r\n            return this.setState({isFailed: true, messageError: \"Role wajib dipilih\"});\r\n        }\r\n\r\n        this.handleSave(event);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isEdit, users, usersFiltered, isConfirmDelete, isFailed, messageError, userTarget, role_name, isError, isSuccess, isDelete, isFiltered } = this.state;\r\n        const tableHeaders = ['Nomor', 'Username', 'Role', 'Aksi'];                  \r\n        const tableRows = isFiltered ? usersFiltered.map((user) =>\r\n                        [  <div className=\"d-flex justify-content-center\">{user.username}</div>,\r\n                            <div className=\"d-flex justify-content-center\">{user.role_name}</div>,\r\n                            <div className=\"d-flex justify-content-center\">\r\n                            <Button className={classes.button4} onClick={() => this.handleEdit(user)}>Ubah Role</Button>\r\n                            <Button className=\"btn btn-danger\" onClick={() => this.handleConfirmDelete(user)} style={{marginLeft: \"5px\"}}>Hapus Role</Button></div>])\r\n                        : users.map((user) =>\r\n                        [ <div className=\"d-flex justify-content-center\">{user.username}</div>,\r\n                        <div className=\"d-flex justify-content-center\">{user.role_name}</div>,\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button className={classes.button4} onClick={() => this.handleEdit(user)}>Ubah Role</Button>\r\n                            <Button className=\"btn btn-danger\" onClick={() => this.handleConfirmDelete(user)} style={{marginLeft: \"5px\"}}>Hapus Role</Button>\r\n                        </div>])\r\n\r\n        return (\r\n            \r\n            <div className={classes.container}>\r\n                <div><h1 className=\"text-center\">Daftar Pengguna Sistem</h1></div>\r\n                <br></br>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} className={classes.search}/></div>\r\n                <br></br>\r\n                <div>{ users.length !== 0 ? <CustomizedTables headers={tableHeaders} rows={tableRows}/> : <p className=\"text-center\" style={{color: \"red\"}}>Belum terdapat Pengguna</p>}</div>\r\n                <Modal\r\n                    show={isEdit}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        \r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Ubah Role Pengguna\r\n                    </Modal.Title>\r\n                        \r\n                    </Modal.Header>\r\n                        <Modal.Body>\r\n                               { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        <div>{messageError}</div>\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                               : <></> }\r\n                            <p>\r\n                                <Form>\r\n                                    <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                        <tr>\r\n                                            <td><p className=\"d-flex\">Pilih Role<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td>\r\n                                                <Form.Control\r\n                                                as=\"select\"\r\n                                                size=\"lg\"\r\n                                                name=\"role_name\"\r\n                                                value={ this.state.value }\r\n                                                onChange={this.handleChangeField}>\r\n                                                <option value=\"None\">None</option>\r\n                                                <option value=\"Admin\">Admin</option>\r\n                                                <option value=\"Manager\">Manager</option>\r\n                                                <option value=\"Engineer\">Engineer</option>\r\n                                                <option value=\"Data Entry\">Data Entry</option>\r\n                                                <option value=\"Finance\">Finance</option>\r\n                                                </Form.Control>   \r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{color: \"red\"}}>*Wajib dipilih</td>\r\n                                            <td className=\"d-flex justify-content-end\">\r\n                                                    <Button variant=\"primary\" className={classes.button1} onClick={this.handleValidation}>\r\n                                                        Simpan\r\n                                                    </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </Table>\r\n                                </Form>\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                \r\n                <Modal\r\n                    show={isSuccess || isDelete}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                                <br></br>\r\n                                <div className=\"d-flex justify-content-center\"><strong>{isSuccess ? \"Role pada pengguna berhasil disimpan\" : \"Pengguna berhasil dihapus\"} </strong></div><br></br>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                </div> \r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <Button className=\"btn btn-success\" onClick={this.handleCancel}>Kembali</Button>\r\n                                </div>\r\n                                <br></br>\r\n                                                        \r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={isConfirmDelete}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Konfirmasi Penghapusan Role\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                                <br></br>\r\n                                <div className=\"d-flex justify-content-center\"><strong>Apakah Anda yakin untuk mengahpus pengguna?</strong></div><br></br>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                </div> \r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <Button className={classes.button3} onClick={this.handleCancel}>\r\n                                    Batal\r\n                                </Button>\r\n                                <Button className={classes.button1} style={{marginLeft: \"7px\"}} onClick={this.handleDelete}>\r\n                                    Hapus\r\n                                </Button>\r\n                                </div>\r\n                                <br></br>\r\n                                \r\n                                \r\n\r\n                                                        \r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HalamanAdmin;","C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx",["136"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\OrderVerification\\ListNotVerifiedOrder.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\OrderVerification\\OrderDetails.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\components\\OrderVerification\\OrderVerificationComponent.jsx",["137"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\OrderService.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna 2\\propen-a01-sipel\\sipel-frontend\\src\\services\\InstallationProjectService.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":19},{"ruleId":"143","severity":1,"message":"147","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":14},{"ruleId":"143","severity":1,"message":"148","line":73,"column":114,"nodeType":"145","messageId":"146","endLine":73,"endColumn":128},{"ruleId":"143","severity":1,"message":"149","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":19},{"ruleId":"143","severity":1,"message":"150","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":13},{"ruleId":"143","severity":1,"message":"151","line":462,"column":110,"nodeType":"145","messageId":"146","endLine":462,"endColumn":117},{"ruleId":"143","severity":1,"message":"152","line":463,"column":13,"nodeType":"145","messageId":"146","endLine":463,"endColumn":29},{"ruleId":"143","severity":1,"message":"153","line":463,"column":31,"nodeType":"145","messageId":"146","endLine":463,"endColumn":51},{"ruleId":"143","severity":1,"message":"154","line":463,"column":106,"nodeType":"145","messageId":"146","endLine":463,"endColumn":117},{"ruleId":"143","severity":1,"message":"155","line":146,"column":88,"nodeType":"145","messageId":"146","endLine":146,"endColumn":98},{"ruleId":"143","severity":1,"message":"156","line":146,"column":100,"nodeType":"145","messageId":"146","endLine":146,"endColumn":109},{"ruleId":"143","severity":1,"message":"157","line":146,"column":111,"nodeType":"145","messageId":"146","endLine":146,"endColumn":118},{"ruleId":"143","severity":1,"message":"158","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":17},{"ruleId":"143","severity":1,"message":"159","line":24,"column":17,"nodeType":"145","messageId":"146","endLine":24,"endColumn":22},{"ruleId":"143","severity":1,"message":"160","line":6,"column":7,"nodeType":"145","messageId":"146","endLine":6,"endColumn":28},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'useRoutes' is defined but never used.","Identifier","unusedVar","'Layout' is defined but never used.","'showBoardAdmin' is assigned a value but never used.","'UserService' is defined but never used.","'axios' is defined but never used.","'isAdded' is assigned a value but never used.","'servicesEngineer' is assigned a value but never used.","'servicesEngineerName' is assigned a value but never used.","'listService' is assigned a value but never used.","'userTarget' is assigned a value but never used.","'role_name' is assigned a value but never used.","'isError' is assigned a value but never used.","'APIConfig' is defined but never used.","'order' is assigned a value but never used.","'ADD_TASK_API_BASE_URL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]