[{"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"3","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"4","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"5","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"6","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js":"7","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"8","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js":"9","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js":"10","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"11","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Login\\index.js":"12","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\Homepage\\index.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1500,"mtime":1619583590623,"results":"17","hashOfConfig":"15"},{"size":178,"mtime":1618680772693,"results":"18","hashOfConfig":"15"},{"size":24798,"mtime":1619582022976,"results":"19","hashOfConfig":"15"},{"size":143,"mtime":1618932282107,"results":"20","hashOfConfig":"15"},{"size":802,"mtime":1619176967606,"results":"21","hashOfConfig":"15"},{"size":2994,"mtime":1619024890744,"results":"22","hashOfConfig":"15"},{"size":478,"mtime":1619532665996,"results":"23","hashOfConfig":"15"},{"size":259,"mtime":1618994525865,"results":"24","hashOfConfig":"15"},{"size":24820,"mtime":1619579870632,"results":"25","hashOfConfig":"15"},{"size":847,"mtime":1619584073795,"results":"26","hashOfConfig":"15"},{"size":5155,"mtime":1619584719847,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qicre3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["58","59"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["60"],"import './App.css';\r\nimport React, { Component } from \"react\";\r\nimport Homepage from \"./containers/Homepage\";\r\nimport Login from \"./components/Login\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nclass App extends Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   // the initial application state\r\n  //   this.state = {\r\n  //     user: null\r\n  //   }\r\n  // }\r\n\r\n  // // App \"actions\" (functions that modify state)\r\n  // signIn(username, password) {\r\n  //   // This is where you would call Firebase, an API etc...\r\n  //   // calling setState will re-render the entire app (efficiently!)\r\n  //   this.setState({\r\n  //     user: {\r\n  //       username,\r\n  //       password,\r\n  //     }\r\n  //   })\r\n  // }\r\n  \r\n  // signOut() {\r\n  //   // clear out user from state\r\n  //   this.setState({user: null})\r\n  // }\r\n\r\n  render() {\r\n    // Here we pass relevant state to our child components\r\n    // as props. Note that functions are passed using `bind` to\r\n    // make sure we keep our scope to App\r\n    return (\r\n      // <div>\r\n      //   <h1>Login SIPEL</h1>\r\n      //   { \r\n      //     (this.state.user) ? \r\n      //       <Homepage \r\n      //        user={this.state.user} \r\n      //        onSignOut={this.signOut.bind(this)} \r\n      //       />\r\n      //     :\r\n      //       <Login \r\n      //        onSignIn={this.signIn.bind(this)} \r\n      //       />\r\n      //   }\r\n      // </div>\r\n      <Layout>\r\n        <Homepage />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",["61","62","63","64"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\n// import CustomizedModal from \"../../components/Modal\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass PeriodeKontrak extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isExtend: false,\r\n            orderTarget: null,\r\n            users: [],\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            servicesEngineerName: [],\r\n            isReport: false,\r\n            isReportExtend: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            currentDateTime: new Date(),\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            totalServices: 0,\r\n            listService: [],\r\n            isAdded: false,\r\n            newNoPO: null,\r\n            timeRemaining: null,\r\n            isHide: true\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReport = this.handleReport.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAddServices = this.handleAddServices.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/orders/ms\");\r\n            const users = await APIConfig.get(\"/users\");\r\n            this.setState({ ordersVerified: orders.data, users: users.data});\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(this.state.formValid){\r\n            let newOrder;\r\n            try {   \r\n                let response;\r\n                if(this.state.isExtend){\r\n                    const order = this.state.orderTarget;\r\n                    const pi = order.idOrderPi === null ? null : order.idOrderPi.idOrderPi;\r\n                    const ms = order.idOrderMs.idOrderMs;\r\n                    const dataOrder = {\r\n                        idOrder: order.idOrder,\r\n                        orderName: order.orderName,\r\n                        clientName: order.clientName,\r\n                        clientOrg: order.clientOrg,\r\n                        clientDiv: order.clientDiv,\r\n                        clientPIC: order.clientPIC,\r\n                        clientEmail: order.clientEmail,\r\n                        clientPhone: order.clientPhone,\r\n                        dateOrder: order.dateOrder,\r\n                        noPO: this.state.newNoPO,\r\n                        noSPH: order.noSPH,\r\n                        description: order.description,\r\n                        verified: order.verified,\r\n                        projectInstallation: order.projectInstallation,\r\n                        managedService: order.managedService,\r\n                        idOrderPi: pi,\r\n                        idOrderMs: ms\r\n                    }\r\n                    response = await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/perpanjangKontrak`, dataOrder);\r\n                    newOrder = response.data.result;\r\n                    this.loadData();\r\n                }\r\n                const ms = this.state.isExtend ? newOrder.idOrderMs : this.state.orderTarget.idOrderMs;\r\n                const dataMs = {\r\n                    idOrderMs: ms.idOrderMs,\r\n                    idUserPic: this.state.picEngineerMs,\r\n                    actualStart: this.convertDateToString(this.state.actualStart),\r\n                    actualEnd: this.convertDateToString(this.state.actualEnd),\r\n                    activated: ms.activated,\r\n                    dateClosedMS: ms.dateClosedMS\r\n                }\r\n                const newMs = await APIConfig.put(`/order/${this.state.isExtend? newOrder.idOrder : this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/updateKontrak`, dataMs);\r\n                if(this.state.isExtend){\r\n                    let listServiceName = this.state.servicesEngineerName;\r\n                    let listService = this.state.servicesEngineer;\r\n                    for(let i=0; i<listService.length; i++){\r\n                        const dataService = {\r\n                            name: listServiceName[i],\r\n                            idUser: listService[i]\r\n                        }\r\n                        console.log(dataService);\r\n                        await APIConfig.post(`/order/${newOrder.idOrder}/ms/${ms.idOrderMs}/service`, dataService);\r\n                        this.loadData();\r\n                    }\r\n                }\r\n                this.loadData();\r\n                this.setState({ orderTarget: newOrder });   \r\n            } catch (error) {\r\n                if(this.state.isExtend){\r\n                    alert(\"Perpanjangan Periode Kontrak gagal disimpan\");\r\n                }else{\r\n                    alert(\"Periode Kontrak gagal disimpan\");\r\n                }\r\n                console.log(error);\r\n            }\r\n            this.handleReport();\r\n        }else{\r\n            this.handleValidation(event);\r\n        } \r\n    }\r\n\r\n    handleReport(){\r\n        if(this.state.isExtend){\r\n            this.setState({isExtend: false, isReportExtend: true});\r\n            alert(\"Perpanjangan periode kontrak berhasil disimpan\");\r\n        }else{\r\n            this.setState({isEdit: false, isReport: true});\r\n            alert(\"Periode kontrak berhasil disimpan\");\r\n        }\r\n    }\r\n\r\n    getDate(value){\r\n        let date;\r\n        if(value.includes(\"T\")){\r\n            const valueSplit = value.split(\"T\");\r\n            date = valueSplit[0].split(\"-\");\r\n        }else{\r\n            date = value.split(\"-\");\r\n        }\r\n\r\n        const newDate = date[2]+\"/\"+date[1]+\"/\"+date[0];\r\n        return newDate;\r\n    }\r\n\r\n    getTimeRemaining(actualStart, actualEnd){\r\n        const startDate = new Date(actualStart.replace(/-/g, '\\/').replace(/T.+/, ''));\r\n        const endDate = new Date(actualEnd.replace(/-/g, '\\/').replace(/T.+/, ''));\r\n        let currentDate = this.state.currentDateTime;\r\n\r\n        if ( startDate > currentDate) {\r\n            console.log(startDate > currentDate);\r\n            return \"Belum mulai\";\r\n        } else if ( currentDate > endDate ){\r\n            console.log( currentDate > endDate );\r\n            return \"Habis\";\r\n        }\r\n        \r\n        let startYear = currentDate.getFullYear();\r\n        let startMonth = currentDate.getMonth();\r\n        let startDay = currentDate.getDate();\r\n        \r\n        let endYear = endDate.getFullYear();\r\n        let endMonth = endDate.getMonth();\r\n        let endDay = endDate.getDate();\r\n        \r\n        // We calculate February based on end year as it might be a leep year which might influence the number of days.\r\n        let february = (((endYear % 4 === 0) && (endYear % 100 !== 0)) || (endYear % 400 === 0)) ? 29 : 28;\r\n        // console.log(february);\r\n        let daysOfMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        \r\n        let startDateNotPassedInEndYear = ((endMonth < startMonth) || (endMonth === startMonth )) && (endDay < startDay);\r\n        let years = endYear - startYear - (startDateNotPassedInEndYear ? 1 : 0);\r\n        \r\n        let months = (12 + endMonth - startMonth - (endDay < startDay ? 1 : 0)) % 12;\r\n        \r\n        // (12 + ...) % 12 makes sure index is always between 0 and 11\r\n        let days = startDay <= endDay ? endDay - startDay : daysOfMonth[(12 + endMonth - 1) % 12] - startDay + endDay;\r\n\r\n        let timeRemaining = \"\";\r\n        if(years === 0){\r\n            if(months === 0){\r\n                timeRemaining = days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = months+\" bulan\";\r\n                }\r\n                timeRemaining = months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }else{\r\n            if(months === 0){\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun \"+months+\" bulan\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }\r\n\r\n        return timeRemaining;\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        const servicesEngineerNew = this.state.servicesEngineer;\r\n        const servicesEngineerNameNew = this.state.servicesEngineerName;\r\n\r\n        if( name.substring(0,16) === \"servicesEngineer\"){\r\n            let index = Number(name.substring(16));\r\n            servicesEngineerNew[index] = value;\r\n            console.log(servicesEngineerNew);\r\n            this.setState({ servicesEngineer: servicesEngineerNew, formValid: true });\r\n        }else if( name.substring(0,11) === \"serviceName\" ){\r\n            let index = Number(name.substring(11));\r\n            servicesEngineerNameNew[index] = value;\r\n            console.log(servicesEngineerNameNew);\r\n            this.setState({ servicesEngineerName: servicesEngineerNameNew, formValid: true });\r\n        }else{\r\n            if(this.state.isExtend){\r\n                if( name === \"newNoP0\"){\r\n                    if( value === null){\r\n                        this.handleValidation(event);\r\n                    }else{\r\n                        this.setState({ formValid: true });\r\n                    } \r\n                }\r\n            }\r\n            this.setState({ [name]: value, formValid: true});\r\n        }\r\n    }\r\n\r\n    handleValidation(){\r\n        this.setState({ formValid: false });\r\n        alert(\"Nomor PO baru harus diisi\");\r\n    }\r\n\r\n    handleEdit(order, typeEdit) {\r\n        let actualStart = order.idOrderMs.actualStart.split(\"T\");\r\n        let actualEnd = order.idOrderMs.actualEnd.split(\"T\");\r\n        if(typeEdit === \"perbarui\"){\r\n            this.setState({ isEdit: true , formValid: true});\r\n        }else{\r\n            this.setState({ isExtend: true });\r\n        }\r\n\r\n        this.setState({  \r\n            orderTarget: order,\r\n            actualStart: actualStart[0],\r\n            actualEnd: actualEnd[0],\r\n            totalServices: order.idOrderMs.listService.length,\r\n            timeRemaining: this.getTimeRemaining(order.idOrderMs.actualStart, order.idOrderMs.actualEnd)  \r\n        });\r\n        \r\n        if(order.idOrderMs.idUserPic !== null){\r\n            let servicesEngineer = order.idOrderMs.listService.map(service => service.idUser.id);\r\n            let servicesEngineerName = order.idOrderMs.listService.map(service => service.name);\r\n            console.log(servicesEngineer);\r\n            this.setState({\r\n                picEngineerMs: order.idOrderMs.idUserPic.id, \r\n                servicesEngineer: servicesEngineer,\r\n                servicesEngineerName: servicesEngineerName\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isExtend: false, \r\n            isReportExtend: false, \r\n            totalServices: 0,\r\n            isAdded: false,\r\n            timeRemaining: null,\r\n            serviceEngineer: [],\r\n            listService: [],\r\n            orderTarget: null,\r\n            picEngineerMs: null,\r\n            formValid: false,\r\n            isHide: true\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    getPICMS(idOrder){\r\n        let orderTarget = this.state.ordersVerified.filter(\r\n            order => order.idOrder === idOrder\r\n        );\r\n        let ms = orderTarget.map(order => {return order.idOrderMs});\r\n    \r\n        if(orderTarget !== null && ms[0] !== null){\r\n            let user = orderTarget.map(order => order.idOrderMs.idUserPic);\r\n            if(user !== null){\r\n                let pic = orderTarget.map(order => order.idOrderMs.idUserPic.fullname);\r\n                return pic;\r\n            }\r\n        }\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    getPICService(service){\r\n        if(service.idUser !== null) return service.idUser.fullname;\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    convertDateToString(date){\r\n        return date+\"T17:00:00.000+00:00\";\r\n    }\r\n\r\n    changeDateFormat(date){\r\n        let dateSplit = date.split(\"/\");\r\n        return dateSplit[2]+\"-\"+dateSplit[1]+\"-\"+dateSplit[0];\r\n    }\r\n\r\n    getDaysMonthsYears(date){\r\n        const dateSplit = date.split(\" \");\r\n        if(date.includes(\"tahun\")){\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], dateSplit[4]];\r\n                return [0, dateSplit[2], dateSplit[4]];\r\n            }\r\n            if(date.includes(\"hari\")) return [dateSplit[0], 0, dateSplit[4]];\r\n            return [0, 0, dateSplit[4]];\r\n        }else{\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], 0];\r\n                return [0, dateSplit[2], 0];\r\n            }\r\n            return [dateSplit[0], 0, 0];\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrderList = newOrderList.filter(order => {\r\n                return order.orderName.toLowerCase().includes(value.toLowerCase())\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    handleAddServices(listService){\r\n        this.setState({isAdded: true});\r\n        let listServiceNew = [[...listService]];\r\n        let servicesEngineer = [...this.state.servicesEngineer];\r\n        let initialTotal = listService.length;\r\n        const totalServicesNew = initialTotal+1;\r\n        this.setState({ totalServices: totalServicesNew });\r\n        servicesEngineer = servicesEngineer.concat(null);\r\n        this.setState({serviceEngineer: servicesEngineer});\r\n        listServiceNew = listService.concat([[<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+initialTotal} \r\n                            placeholder=\"masukkan nama service\" onChange={this.handleChangeField}/>, \r\n                            <Form.Control as=\"select\" size=\"sm\" key={initialTotal} name={\"servicesEngineer\"+initialTotal} \r\n                            value={this.state.servicesEngineer[initialTotal] === null ? this.state.users[0].id : this.state.servicesEngineer[initialTotal]}\r\n                            onChange={this.handleChangeField}>{this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                            </Form.Control>]]);\r\n\r\n        this.setState({listService: listServiceNew});\r\n    }\r\n\r\n    render() {\r\n        const { ordersVerified, isEdit, isExtend, orderTarget, users, actualStart, actualEnd, picEngineerMs, isAdded, timeRemaining, isHide,\r\n            servicesEngineer, servicesEngineerName, isReport, isReportExtend, orderFiltered, isFiltered, listService } = this.state;\r\n        const tableHeaders = ['No.', 'Id Order', 'Nomor PO', 'Nama Order', 'Periode Mulai', 'Periode Berakhir', 'Waktu Tersisa', 'Aksi'];                  \r\n        console.log(ordersVerified);\r\n        console.log(orderTarget);\r\n  \r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(order.idOrderMs.actualStart), this.getDate(order.idOrderMs.actualEnd),\r\n                        this.getTimeRemaining(order.idOrderMs.actualStart, order.idOrderMs.actualEnd),\r\n                        <><CustomizedButtons variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"secondary\"onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</CustomizedButtons></>])\r\n                        : ordersVerified.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(order.idOrderMs.actualStart), this.getDate(order.idOrderMs.actualEnd),\r\n                        this.getTimeRemaining(order.idOrderMs.actualStart, order.idOrderMs.actualEnd),\r\n                        <><CustomizedButtons variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"secondary\"onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</CustomizedButtons></>])\r\n \r\n        const tableServiceHeaders = ['No.', 'Nama Service', 'Engineer'];\r\n        let tableServiceRows;\r\n\r\n        if(orderTarget !== null){\r\n                tableServiceRows = isAdded ? listService : orderTarget.idOrderMs.listService.map((service, index) =>\r\n                                    [isExtend? <Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} value={servicesEngineerName[index] === null ? \r\n                                    service.name : servicesEngineerName[index]} onChange={this.handleChangeField} placeholder={service.name}/>\r\n                                    : service.name, (isReport || isEdit) ? this.getPICService(service) :\r\n                                    <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                                    value={servicesEngineer[index] === null ? users[0].id : servicesEngineer[index]}\r\n                                    onChange={this.handleChangeField}>\r\n                                    {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                </Form.Control>]);\r\n        }\r\n\r\n        const titleExtend = isReportExtend? \"Perpanjangan Periode Kontrak\" : \"Form Perpanjangan Periode Kontrak\";\r\n        const title = isReport? \"Rincian Periode Kontrak\" : \"Form Perbarui Periode Kontrak\";\r\n\r\n        return (\r\n            <div style={{justifyContent: \"space-around\"}}>\r\n                <div>\r\n                    <div><h1>Daftar Order</h1></div>\r\n                    <div><div style={{width: 200}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} id=\"search\"/></div></div>\r\n                </div>\r\n                <div><CustomizedTables headers={tableHeaders} rows={tableRows}/></div>\r\n                <Modal\r\n                    show={isEdit || isReport || isExtend || isReportExtend}\r\n                    onHide={isHide}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {isEdit? title : titleExtend}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <p>\r\n                                { orderTarget !== null ?\r\n                                <Form>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>Id Order</td>\r\n                                            <td>: {orderTarget.idOrder}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nomor PO</td>\r\n                                            <td>: {orderTarget.noPO === null ? \"-\" : orderTarget.noPO}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nama Order</td>\r\n                                            <td>: {orderTarget.orderName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Perusahaan</td>\r\n                                            <td>: {orderTarget.clientOrg}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                            {isExtend ? <td><CustomizedButtons variant=\"contained\" size=\"small\" color=\"secondary\" onClick={() => this.handleAddServices(tableServiceRows)}>\r\n                                                + Tambah Services\r\n                                                </CustomizedButtons></td>\r\n                                                : <></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Services</td>\r\n                                            <td>\r\n                                                <><CustomizedTables headers={tableServiceHeaders} rows={tableServiceRows}></CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>PIC Engineer</td>\r\n                                            {isExtend ?\r\n                                            <td><Form.Control as=\"select\" size=\"sm\" name=\"picEngineerMs\" value={picEngineerMs === null ? users[0].id : picEngineerMs} onChange={this.handleChangeField}>\r\n                                                    {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                                </Form.Control></td>\r\n                                            : <td>: {this.getPICMS(orderTarget.idOrder)}</td>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            { isExtend ? <>\r\n                                            <td>Nomor PO Baru</td>\r\n                                            <Form.Control type=\"text\" size=\"sm\" name=\"newNoPO\" onChange={this.handleChangeField} placeholder=\"masukkan nomor PO baru\"/></> : <></> } \r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Periode Mulai</td>\r\n                                            {isReport ? \r\n                                            <td>: {actualStart}</td> :\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualStart\" value={actualStart} onChange={this.handleChangeField}/></td> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Periode Berakhir</td>\r\n                                            {isReport ? \r\n                                            <td>: {actualEnd}</td> :\r\n                                            <td><Form.Control type=\"text\" type=\"date\" size=\"sm\" name=\"actualEnd\" value={actualEnd} onChange={this.handleChangeField}/></td> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Waktu Tersisa</td> \r\n                                            <td>: {timeRemaining}</td> \r\n                                        </tr>\r\n                                    </table>\r\n                                    {isReport || isReportExtend ? <></> :\r\n                                    <div style={{alignItems:'right'}}><CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmit}>\r\n                                        simpan\r\n                                    </CustomizedButtons></div> }\r\n                                </Form> : <></>}\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodeKontrak;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",["65"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\n// import CustomizedModal from \"../../components/Modal\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass PeriodeKontrak extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isExtend: false,\r\n            orderTarget: null,\r\n            users: [],\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            servicesEngineerName: [],\r\n            isReport: false,\r\n            isReportExtend: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            currentDateTime: new Date(),\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            totalServices: 0,\r\n            listService: [],\r\n            isAdded: false,\r\n            newNoPO: null,\r\n            timeRemaining: null,\r\n            isHide: true\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReport = this.handleReport.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAddServices = this.handleAddServices.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/orders/ms\");\r\n            const users = await APIConfig.get(\"/users\");\r\n            this.setState({ ordersVerified: orders.data, users: users.data});\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(this.state.formValid){\r\n            let newOrder;\r\n            try {   \r\n                let response;\r\n                if(this.state.isExtend){\r\n                    const order = this.state.orderTarget;\r\n                    const pi = order.idOrderPi === null ? null : order.idOrderPi.idOrderPi;\r\n                    const ms = order.idOrderMs.idOrderMs;\r\n                    const dataOrder = {\r\n                        idOrder: order.idOrder,\r\n                        orderName: order.orderName,\r\n                        clientName: order.clientName,\r\n                        clientOrg: order.clientOrg,\r\n                        clientDiv: order.clientDiv,\r\n                        clientPIC: order.clientPIC,\r\n                        clientEmail: order.clientEmail,\r\n                        clientPhone: order.clientPhone,\r\n                        dateOrder: order.dateOrder,\r\n                        noPO: this.state.newNoPO,\r\n                        noSPH: order.noSPH,\r\n                        description: order.description,\r\n                        verified: order.verified,\r\n                        projectInstallation: order.projectInstallation,\r\n                        managedService: order.managedService,\r\n                        idOrderPi: pi,\r\n                        idOrderMs: ms\r\n                    }\r\n                    response = await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/perpanjangKontrak`, dataOrder);\r\n                    newOrder = response.data.result;\r\n                    this.loadData();  \r\n                }\r\n                const ms = this.state.isExtend ? newOrder.idOrderMs : this.state.orderTarget.idOrderMs;\r\n                const dataMs = {\r\n                    idOrderMs: ms.idOrderMs,\r\n                    idUserPic: this.state.picEngineerMs,\r\n                    actualStart: this.convertDateToString(this.state.actualStart),\r\n                    actualEnd: this.convertDateToString(this.state.actualEnd),\r\n                    activated: ms.activated,\r\n                    dateClosedMS: ms.dateClosedMS\r\n                }\r\n                const newMs = await APIConfig.put(`/order/${this.state.isExtend? newOrder.idOrder : this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/updateKontrak`, dataMs);\r\n                console.log(newMs);\r\n                if(this.state.isExtend){\r\n                    let listServiceName = this.state.servicesEngineerName;\r\n                    let listService = this.state.servicesEngineer;\r\n                    for(let i=0; i<listService.length; i++){\r\n                        const dataService = {\r\n                            name: listServiceName[i],\r\n                            idUser: listService[i]\r\n                        }\r\n                        console.log(dataService);\r\n                        await APIConfig.post(`/order/${newOrder.idOrder}/ms/${ms.idOrderMs}/service`, dataService);\r\n                        this.loadData();\r\n                    }\r\n                }\r\n                this.loadData();\r\n                if(this.state.extend) {\r\n                    this.setState({ orderTarget: newOrder });\r\n                }\r\n            } catch (error) {\r\n                if(this.state.isExtend){\r\n                    alert(\"Perpanjangan Periode Kontrak gagal disimpan\");\r\n                }else{\r\n                    alert(\"Periode Kontrak gagal disimpan\");\r\n                }\r\n                console.log(error);\r\n            }\r\n            this.handleReport();\r\n        }else{\r\n            this.handleValidation(event);\r\n        } \r\n    }\r\n\r\n    handleReport(){\r\n        if(this.state.isExtend){\r\n            this.setState({isExtend: false, isReportExtend: true});\r\n            alert(\"Perpanjangan periode kontrak berhasil disimpan\");\r\n        }else{\r\n            this.setState({isEdit: false, isReport: true});\r\n            alert(\"Periode kontrak berhasil disimpan\");\r\n        }\r\n    }\r\n\r\n    getDate(value){\r\n        let date;\r\n        if(value.includes(\"T\")){\r\n            const valueSplit = value.split(\"T\");\r\n            date = valueSplit[0].split(\"-\");\r\n        }else{\r\n            date = value.split(\"-\");\r\n        }\r\n\r\n        const newDate = date[2]+\"/\"+date[1]+\"/\"+date[0];\r\n        return newDate;\r\n    }\r\n\r\n    getTimeRemaining(actualStart, actualEnd){\r\n        const startDate = new Date(actualStart);\r\n        const endDate = new Date(actualEnd);\r\n        let currentDate = this.state.currentDateTime;\r\n\r\n        if ( startDate > currentDate) {\r\n            console.log(startDate > currentDate);\r\n            return \"Belum mulai\";\r\n        } else if ( currentDate > endDate ){\r\n            console.log( currentDate > endDate );\r\n            return \"Habis\";\r\n        }\r\n        \r\n        let startYear = currentDate.getFullYear();\r\n        let startMonth = currentDate.getMonth();\r\n        let startDay = currentDate.getDate();\r\n        \r\n        let endYear = endDate.getFullYear();\r\n        let endMonth = endDate.getMonth();\r\n        let endDay = endDate.getDate();\r\n        \r\n        // We calculate February based on end year as it might be a leep year which might influence the number of days.\r\n        let february = (((endYear % 4 === 0) && (endYear % 100 !== 0)) || (endYear % 400 === 0)) ? 29 : 28;\r\n        // console.log(february);\r\n        let daysOfMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        \r\n        let startDateNotPassedInEndYear = ((endMonth < startMonth) || (endMonth === startMonth )) && (endDay < startDay);\r\n        let years = endYear - startYear - (startDateNotPassedInEndYear ? 1 : 0);\r\n        \r\n        let months = (12 + endMonth - startMonth - (endDay < startDay ? 1 : 0)) % 12;\r\n        \r\n        // (12 + ...) % 12 makes sure index is always between 0 and 11\r\n        let days = startDay <= endDay ? endDay - startDay : daysOfMonth[(12 + endMonth - 1) % 12] - startDay + endDay;\r\n\r\n        let timeRemaining = \"\";\r\n        if(years === 0){\r\n            if(months === 0){\r\n                timeRemaining = days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = months+\" bulan\";\r\n                }\r\n                timeRemaining = months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }else{\r\n            if(months === 0){\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun \"+months+\" bulan\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }\r\n\r\n        return timeRemaining;\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        const servicesEngineerNew = this.state.servicesEngineer;\r\n        const servicesEngineerNameNew = this.state.servicesEngineerName;\r\n\r\n        if( name.substring(0,16) === \"servicesEngineer\"){\r\n            let index = Number(name.substring(16));\r\n            servicesEngineerNew[index] = value;\r\n            console.log(servicesEngineerNew);\r\n            this.setState({ servicesEngineer: servicesEngineerNew, formValid: true });\r\n        }else if( name.substring(0,11) === \"serviceName\" ){\r\n            let index = Number(name.substring(11));\r\n            servicesEngineerNameNew[index] = value;\r\n            console.log(servicesEngineerNameNew);\r\n            this.setState({ servicesEngineerName: servicesEngineerNameNew, formValid: true });\r\n        }else{\r\n            if(this.state.isExtend){\r\n                if( name === \"newNoP0\"){\r\n                    if( value === null){\r\n                        this.handleValidation(event);\r\n                    }else{\r\n                        this.setState({ formValid: true });\r\n                    } \r\n                }\r\n            }\r\n            this.setState({ [name]: value, formValid: true});\r\n        }\r\n    }\r\n\r\n    handleValidation(){\r\n        this.setState({ formValid: false });\r\n        alert(\"Nomor PO baru harus diisi\");\r\n    }\r\n\r\n    handleEdit(order, typeEdit) {\r\n        let actualStart = order.idOrderMs.actualStart.split(\"T\");\r\n        let actualEnd = order.idOrderMs.actualEnd.split(\"T\");\r\n        if(typeEdit === \"perbarui\"){\r\n            this.setState({ isEdit: true , formValid: true});\r\n        }else{\r\n            this.setState({ isExtend: true });\r\n        }\r\n\r\n        this.setState({  \r\n            orderTarget: order,\r\n            actualStart: actualStart[0],\r\n            actualEnd: actualEnd[0],\r\n            totalServices: order.idOrderMs.listService.length,\r\n            timeRemaining: this.getTimeRemaining(order.idOrderMs.actualStart, order.idOrderMs.actualEnd)  \r\n        });\r\n        \r\n        if(order.idOrderMs.idUserPic !== null){\r\n            let servicesEngineer = order.idOrderMs.listService.map(service => service.idUser.id);\r\n            let servicesEngineerName = order.idOrderMs.listService.map(service => service.name);\r\n            console.log(servicesEngineer);\r\n            this.setState({\r\n                picEngineerMs: order.idOrderMs.idUserPic.id, \r\n                servicesEngineer: servicesEngineer,\r\n                servicesEngineerName: servicesEngineerName\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isExtend: false, \r\n            isReportExtend: false, \r\n            totalServices: 0,\r\n            isAdded: false,\r\n            timeRemaining: null,\r\n            serviceEngineer: [],\r\n            listService: [],\r\n            orderTarget: null,\r\n            picEngineerMs: null,\r\n            formValid: false,\r\n            isHide: true\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    getPICMS(idOrder){\r\n        let orderTarget = this.state.ordersVerified.filter(\r\n            order => order.idOrder === idOrder\r\n        );\r\n        let ms = orderTarget.map(order => {return order.idOrderMs});\r\n    \r\n        if(orderTarget !== null && ms[0] !== null){\r\n            let user = orderTarget.map(order => order.idOrderMs.idUserPic);\r\n            if(user !== null){\r\n                let pic = orderTarget.map(order => order.idOrderMs.idUserPic.fullname);\r\n                return pic;\r\n            }\r\n        }\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    getPICService(service){\r\n        if(service.idUser !== null) return service.idUser.fullname;\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    convertDateToString(date){\r\n        return date+\"T17:00:00.000+00:00\";\r\n    }\r\n\r\n    changeDateFormat(date){\r\n        let dateSplit = date.split(\"/\");\r\n        return dateSplit[2]+\"-\"+dateSplit[1]+\"-\"+dateSplit[0];\r\n    }\r\n\r\n    getDaysMonthsYears(date){\r\n        const dateSplit = date.split(\" \");\r\n        if(date.includes(\"tahun\")){\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], dateSplit[4]];\r\n                return [0, dateSplit[2], dateSplit[4]];\r\n            }\r\n            if(date.includes(\"hari\")) return [dateSplit[0], 0, dateSplit[4]];\r\n            return [0, 0, dateSplit[4]];\r\n        }else{\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], 0];\r\n                return [0, dateSplit[2], 0];\r\n            }\r\n            return [dateSplit[0], 0, 0];\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrderList = newOrderList.filter(order => {\r\n                return order.orderName.toLowerCase().includes(value.toLowerCase())\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    handleAddServices(listService){\r\n        this.setState({isAdded: true});\r\n        let listServiceNew = [[...listService]];\r\n        let servicesEngineer = [...this.state.servicesEngineer];\r\n        let initialTotal = listService.length;\r\n        const totalServicesNew = initialTotal+1;\r\n        this.setState({ totalServices: totalServicesNew });\r\n        servicesEngineer = servicesEngineer.concat(null);\r\n        this.setState({serviceEngineer: servicesEngineer});\r\n        listServiceNew = listService.concat([[<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+initialTotal} \r\n                            placeholder=\"masukkan nama service\" onChange={this.handleChangeField}/>, \r\n                            <Form.Control as=\"select\" size=\"sm\" key={initialTotal} name={\"servicesEngineer\"+initialTotal} \r\n                            value={this.state.servicesEngineer[initialTotal] === null ? this.state.users[0].id : this.state.servicesEngineer[initialTotal]}\r\n                            onChange={this.handleChangeField}>{this.state.users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                            </Form.Control>]]);\r\n\r\n        this.setState({listService: listServiceNew});\r\n    }\r\n\r\n    render() {\r\n        const { ordersVerified, isEdit, isExtend, orderTarget, users, actualStart, actualEnd, picEngineerMs, isAdded, timeRemaining, isHide,\r\n            servicesEngineer, servicesEngineerName, isReport, isReportExtend, orderFiltered, isFiltered, listService } = this.state;\r\n        const tableHeaders = ['No.', 'Id Order', 'Nomor PO', 'Nama Order', 'Periode Mulai', 'Periode Berakhir', 'Waktu Tersisa', 'Aksi'];                  \r\n        console.log(ordersVerified);\r\n        console.log(orderTarget);\r\n  \r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(order.idOrderMs.actualStart), this.getDate(order.idOrderMs.actualEnd),\r\n                        this.getTimeRemaining(order.idOrderMs.actualStart, order.idOrderMs.actualEnd),\r\n                        <><CustomizedButtons variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"secondary\"onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</CustomizedButtons></>])\r\n                        : ordersVerified.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(order.idOrderMs.actualStart), this.getDate(order.idOrderMs.actualEnd),\r\n                        this.getTimeRemaining(order.idOrderMs.actualStart, order.idOrderMs.actualEnd),\r\n                        <><CustomizedButtons variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"secondary\"onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</CustomizedButtons></>])\r\n \r\n        const tableServiceHeaders = ['No.', 'Nama Service', 'Engineer'];\r\n        let tableServiceRows;\r\n\r\n        if(orderTarget !== null){\r\n                tableServiceRows = isAdded ? listService : orderTarget.idOrderMs.listService.map((service, index) =>\r\n                                    [isExtend? <Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} value={servicesEngineerName[index] === null ? \r\n                                    service.name : servicesEngineerName[index]} onChange={this.handleChangeField} placeholder={service.name}/>\r\n                                    : service.name, (isReport || isEdit) ? this.getPICService(service) :\r\n                                    <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                                    value={servicesEngineer[index] === null ? users[0].id : servicesEngineer[index]}\r\n                                    onChange={this.handleChangeField}>\r\n                                    {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                </Form.Control>]);\r\n        }\r\n\r\n        const titleExtend = isReportExtend? \"Perpanjangan Periode Kontrak\" : \"Form Perpanjangan Periode Kontrak\";\r\n        const title = isReport? \"Rincian Periode Kontrak\" : \"Form Perbarui Periode Kontrak\";\r\n\r\n        return (\r\n            <div style={{justifyContent: \"space-around\"}}>\r\n                <div>\r\n                    <div><h1>Daftar Order</h1></div>\r\n                    <div><div style={{width: 200}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} id=\"search\"/></div></div>\r\n                </div>\r\n                <div><CustomizedTables headers={tableHeaders} rows={tableRows}/></div>\r\n                <Modal\r\n                    show={isEdit || isReport || isExtend || isReportExtend}\r\n                    onHide={isHide}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {isEdit? title : titleExtend}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <p>\r\n                                { orderTarget !== null ?\r\n                                <Form>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>Id Order</td>\r\n                                            <td>: {orderTarget.idOrder}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nomor PO</td>\r\n                                            <td>: {orderTarget.noPO === null ? \"-\" : orderTarget.noPO}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nama Order</td>\r\n                                            <td>: {orderTarget.orderName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Perusahaan</td>\r\n                                            <td>: {orderTarget.clientOrg}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                            {isExtend ? <td><CustomizedButtons variant=\"contained\" size=\"small\" color=\"secondary\" onClick={() => this.handleAddServices(tableServiceRows)}>\r\n                                                + Tambah Services\r\n                                                </CustomizedButtons></td>\r\n                                                : <></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Services</td>\r\n                                            <td>\r\n                                                <><CustomizedTables headers={tableServiceHeaders} rows={tableServiceRows}></CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>PIC Engineer</td>\r\n                                            {isExtend ?\r\n                                            <td><Form.Control as=\"select\" size=\"sm\" name=\"picEngineerMs\" value={picEngineerMs === null ? users[0].id : picEngineerMs} onChange={this.handleChangeField}>\r\n                                                    {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                                </Form.Control></td>\r\n                                            : <td>: {this.getPICMS(orderTarget.idOrder)}</td>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            { isExtend ? <>\r\n                                            <td>Nomor PO Baru</td>\r\n                                            <Form.Control type=\"text\" size=\"sm\" name=\"newNoPO\" onChange={this.handleChangeField} placeholder=\"masukkan nomor PO baru\"/></> : <></> } \r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Periode Mulai</td>\r\n                                            {isReport ? \r\n                                            <td>: {actualStart}</td> :\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualStart\" value={actualStart} onChange={this.handleChangeField}/></td> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Periode Berakhir</td>\r\n                                            {isReport ? \r\n                                            <td>: {actualEnd}</td> :\r\n                                            <td><Form.Control type=\"text\" type=\"date\" size=\"sm\" name=\"actualEnd\" value={actualEnd} onChange={this.handleChangeField}/></td> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Waktu Tersisa</td> \r\n                                            <td>: {timeRemaining}</td> \r\n                                        </tr>\r\n                                    </table>\r\n                                    {isReport || isReportExtend ? <></> :\r\n                                    <div style={{alignItems:'right'}}><CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmit}>\r\n                                        simpan\r\n                                    </CustomizedButtons></div> }\r\n                                </Form> : <></>}\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodeKontrak;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Login\\index.js",["66"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\Homepage\\index.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":13},{"ruleId":"72","severity":1,"message":"76","line":103,"column":23,"nodeType":"74","messageId":"75","endLine":103,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":157,"column":63,"nodeType":"79","messageId":"80","endLine":157,"endColumn":64,"suggestions":"81"},{"ruleId":"77","severity":1,"message":"78","line":158,"column":59,"nodeType":"79","messageId":"80","endLine":158,"endColumn":60,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":494,"column":75,"nodeType":"85","messageId":"86","endLine":494,"endColumn":86},{"ruleId":"83","severity":1,"message":"84","line":497,"column":75,"nodeType":"85","messageId":"86","endLine":497,"endColumn":86},{"ruleId":"72","severity":1,"message":"87","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"88","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":15},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'newMs' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["91","92"],["93","94"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Component' is defined but never used.","'classes' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"95","fix":"96","desc":"97"},{"messageId":"98","fix":"99","desc":"100"},{"messageId":"95","fix":"101","desc":"97"},{"messageId":"98","fix":"102","desc":"100"},"removeEscape",{"range":"103","text":"104"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"105","text":"106"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"107","text":"104"},{"range":"108","text":"106"},[6419,6420],"",[6419,6419],"\\",[6504,6505],[6504,6504]]