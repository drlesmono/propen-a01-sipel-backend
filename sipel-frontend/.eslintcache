[{"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"2","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"3","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\Components\\Layout\\index.js":"4","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"5","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js":"6","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js":"7","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceList.js":"8","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js":"9","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js":"10","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetail.js":"11","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"12","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js":"13","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"14","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js":"15","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceDetail.js":"16","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js":"17","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js":"18","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js":"19","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js":"20","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js":"21","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js":"22","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js":"23","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js":"24","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js":"25","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js":"26"},{"size":565,"mtime":1619762565434,"results":"27","hashOfConfig":"28"},{"size":5673,"mtime":1621908389143,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1618630151447,"results":"30","hashOfConfig":"28"},{"size":186,"mtime":1619146411241,"results":"31","hashOfConfig":"28"},{"size":186,"mtime":1619146411241,"results":"32","hashOfConfig":"28"},{"size":768,"mtime":1619268259747,"results":"33","hashOfConfig":"28"},{"size":3579,"mtime":1621692134297,"results":"34","hashOfConfig":"28"},{"size":936,"mtime":1619586961764,"results":"35","hashOfConfig":"28"},{"size":1734,"mtime":1621788284607,"results":"36","hashOfConfig":"28"},{"size":1485,"mtime":1621788358910,"results":"37","hashOfConfig":"28"},{"size":3823,"mtime":1621782336025,"results":"38","hashOfConfig":"28"},{"size":141,"mtime":1619295380407,"results":"39","hashOfConfig":"28"},{"size":474,"mtime":1619268227108,"results":"40","hashOfConfig":"28"},{"size":1797,"mtime":1619271163009,"results":"41","hashOfConfig":"28"},{"size":255,"mtime":1619268019724,"results":"42","hashOfConfig":"28"},{"size":448,"mtime":1619285199524,"results":"43","hashOfConfig":"28"},{"size":5502,"mtime":1621928226576,"results":"44","hashOfConfig":"28"},{"size":10493,"mtime":1621961323076,"results":"45","hashOfConfig":"28"},{"size":2330,"mtime":1621925018113,"results":"46","hashOfConfig":"28"},{"size":956,"mtime":1621917911610,"results":"47","hashOfConfig":"28"},{"size":4278,"mtime":1621778609004,"results":"48","hashOfConfig":"28"},{"size":37726,"mtime":1621842669607,"results":"49","hashOfConfig":"28"},{"size":26851,"mtime":1621870506216,"results":"50","hashOfConfig":"28"},{"size":22252,"mtime":1621842641859,"results":"51","hashOfConfig":"28"},{"size":25299,"mtime":1621843303783,"results":"52","hashOfConfig":"28"},{"size":22309,"mtime":1621842652612,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"10eu9m6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["113","114"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["115","116","117"],"/* import React, { Component } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <InputDataOrder/>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App; */\r\n\r\n// import logo from './logo.svg';\r\nimport { useRoutes, A } from \"hookrouter\";\r\n// import routes from \"./router\";\r\nimport './App.css';\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport homepage from \"./assets/homepage.png\";\r\nimport PenjadwalanMaintenance from \"./containers/PenjadwalanMaintenance/PenjadwalanMaintenance\";\r\nimport CreateMaintenance from \"./containers/CreateMaintenance/CreateMaintenance\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport LookUpdateMaintenance from \"./containers/LookUpdateMaintenance/LookUpdateMaintenance\";\r\nimport CreateOrder from \"./containers/CreateOrder/CreateOrder\";\r\nimport DetailOrder from \"./containers/DetailOrder/DetailOrder\";\r\nimport ChangeOrderPI from \"./containers/ChangeOrderPI/ChangeOrderPI\";\r\nimport ChangeOrderMS from \"./containers/ChangeOrderMS/ChangeOrderMS\";\r\nimport ChangeOrderPIMS from \"./containers/ChangeOrderPIMS/ChangeOrderPIMS\";\r\n\r\nconst routes = {\r\n  \"/\": () => \r\n            <div> \r\n              <div style={{ margin: 75 }}>\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      <div style={{ margin: 30 }}>\r\n                        <h3 style={{ color: '#F7873F' }}>Hello, name_here</h3>\r\n                        <h1 style={{ color: '#2F3F58' }}>Selamat Datang di Sistem Informasi Pengelolaan Layanan</h1>\r\n                      </div>\r\n                    </td>\r\n                    <td><img src={homepage} alt=\"homepage\"/></td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>,\r\n  //\"/order/order\": () => <InputDataOrder/>,\r\n  //\"/produksi/maintenance\": () => <PenjadwalanMaintenance />,\r\n  //\"/produksi/maintenance/tambah/:id\" : () => <CreateMaintenance />,\r\n};\r\n\r\nfunction App(){\r\n\r\n  const routeResult = useRoutes(routes);\r\n\r\n    return (\r\n        <Layout>\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" id=\"navbar\">\r\n            <Navbar.Brand href=\"/\" style={{ textDecoration: 'none', color: '#F7873F' }}>SIPEL</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#dashboard\">Dashboard</Nav.Link>\r\n                <NavDropdown title=\"Order\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"/order/order\">Order</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Produksi\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Penugasan</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.1\">Progress Delivery</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.1\">Periode Kontrak</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"produksi/maintenance\">Maintenance</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Laporan\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Nav.Link href=\"#halamanAdmin\">Halaman Admin</Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href=\"#deets\">name_here</Nav.Link>\r\n                {/* <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                </Nav.Link> */}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n            { routeResult }\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/order/order\" component={InputDataOrder} />\r\n              <Route exact path=\"/produksi/maintenance\" component={PenjadwalanMaintenance} />\r\n              <Route exact path=\"/produksi/maintenance/create/:id\" component={CreateMaintenance} />\r\n              <Route exact path=\"/produksi/maintenance/look-update/:id\" component={LookUpdateMaintenance} />\r\n              <Route exact path=\"/order/create\" component={CreateOrder} />\r\n              <Route exact path=\"/order/detail/:id\" component={DetailOrder} />\r\n              <Route exact path=\"/orderPI/change/:id/:idPi\" component={ChangeOrderPI} />\r\n              <Route exact path=\"/orderMS/change/:id/:idMs\" component={ChangeOrderMS} />\r\n              <Route exact path=\"/orderPIMS/change/:id/:idPi/:idMs\" component={ChangeOrderPIMS} />\r\n            </Switch>\r\n          </Router>\r\n          </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\Components\\Layout\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceList.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js",["118","119"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ProjectInstallation = (props) => {\r\n    const { \r\n        idOrderPi,\r\n        startPI, \r\n        deadline,\r\n        percentage,\r\n        close } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`ID Project Installation: ${idOrderPi}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Tanggal Mulai Proyek: ${startPI}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Tanggal Selesai Proyek: ${deadline}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Progres Pengerjaan: ${percentage} %`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Status: ${close}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectInstallation;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js",["120","121","122"],"import React from \"react\";\r\nimport ServiceList from \"../Services/serviceList\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ManagedService = (props) => {\r\n    const { \r\n        idOrderMs,\r\n        actualStart,\r\n        actualEnd,\r\n        activated\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`ID Managed Service: ${idOrderMs}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Periode Mulai: ${actualStart}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Periode Selesai: ${actualEnd}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Status: ${activated}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagedService;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetail.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceDetail.js",[],["123","124"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js",["125","126"],"import React from \"react\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\n\r\nclass PenjadwalanMaintenance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrderMs: \"\",\r\n            //ordersMS: [],\r\n            orderFiltered: [],\r\n            //orders: [],\r\n            ordersTerassign: [],\r\n            //ordMSTerassignFromOrdersList: [],\r\n            isFiltered: false,\r\n            isAssigned: false,\r\n        };\r\n        this.handleCreateSchedule = this.handleCreateSchedule.bind(this);\r\n        this.handleLookSchedule = this.handleLookSchedule.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            //const listOrderMS  = await APIConfig.get(\"/orderMS\");\r\n            //const listOrder  = await APIConfig.get(\"/orderList\");\r\n            const listOrderTerassigned = await APIConfig.get(\"/orderMSassigned\");\r\n            //const listOrdMSfromOrders = await APIConfig.get(\"/orderListIsMS\");\r\n            //this.setState({ ordersMS: listOrderMS.data });\r\n            //this.setState({ orders: listOrder.data });\r\n            this.setState({ ordersTerassign: listOrderTerassigned.data });\r\n            //this.setState({ ordMSTerassignFromOrdersList: listOrdMSfromOrders.data });\r\n            //console.log(this.state.ordersMS);\r\n            //console.log(this.state.orders);\r\n            //console.log(this.state.ordersTerassign);\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleCreateSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/create/${idOrderMs}`);\r\n    }\r\n\r\n    handleLookSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/look-update/${idOrderMs}`);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordMSTerassignFromOrdersList,\r\n            ordersTerassign\r\n        } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No','Nomor PO','Nama Pelanggan','Perusahaan Pelanggan', 'Jenis Order', \r\n            'Periode Mulai', 'Periode Selesai', 'PIC Engineer','Buat Penjadwalan','Lihat Penjadwalan',\r\n        ];\r\n\r\n        /* const tableRows = ordMSTerassignFromOrdersList.map((order) => order.idOrderMs.idUserPic !== null ?\r\n                        [order.idOrderMs.idOrderMs, order.noPO, order.clientName, order.clientOrg, \r\n                        this.checkTypeOrder(order.projectInstallation, order.managedService),\r\n                        order.idOrderMs.idUserPic.fullname,\r\n                        <CustomizedButtons \r\n                            variant=\"contained\" \r\n                            size=\"small\" \r\n                            color=\"#FD693E\" \r\n                            onClick={() => this.handleCreateSchedule(order)}>Buat Jadwal</CustomizedButtons>,\r\n                        <CustomizedButtons \r\n                            variant=\"contained\" \r\n                            size=\"small\" \r\n                            color=\"#FD693E\"\r\n                            onClick={() => this.handleLookSchedule(order)}>Lihat Jadwal</CustomizedButtons>\r\n                        ] : []\r\n                        ); */\r\n\r\n        const tableRows = ordersTerassign.map((order) =>\r\n                        [order.idOrder.noPO, order.idOrder.clientName, order.idOrder.clientOrg, \r\n                        this.checkTypeOrder(order.idOrder.projectInstallation, order.idOrder.managedService), \r\n                        this.getDate(order.actualStart), this.getDate(order.actualEnd), order.idUserPic.fullname,\r\n                        <CustomizedButtons \r\n                            variant=\"contained\" \r\n                            size=\"small\" \r\n                            color=\"#FD693E\" \r\n                            onClick={() => this.handleCreateSchedule(order.idOrderMs)}>Buat Jadwal</CustomizedButtons>,\r\n                        <CustomizedButtons \r\n                            variant=\"contained\" \r\n                            size=\"small\" \r\n                            color=\"#FD693E\"\r\n                            onClick={() => this.handleLookSchedule(order.idOrderMs)}>Lihat Jadwal</CustomizedButtons>\r\n                        ]);\r\n\r\n        return (\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PenjadwalanMaintenance);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js",["127","128"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport Order from \"../../components/Order/orderDetail\";\r\nimport ProjectInstallation from \"../../components/ProjectInstallation/piDetail\";\r\nimport ManagedService from \"../../components/ManagedService/msDetail\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport Modal from \"../../components/Modal\";\r\nimport ServiceList from \"../../components/Services/serviceList\";\r\n\r\nconst initState = {\r\n    name: \"\",\r\n}\r\n\r\nclass DetailOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idOrderPi: \"\",\r\n            idOrderMs: \"\",\r\n            ordersPI: [],\r\n            ordersMS: [],\r\n            orderTarget: null,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            listService: [],\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            verified: false,\r\n            idService: \"\",\r\n            name: \"\",\r\n            serviceTarget: null,\r\n            listServiceNew: [{ index: Math.random(), name: \"\"}],\r\n            finishedSubmitService: false,\r\n            isChangeService: false,\r\n            finishedDeleteService: false,\r\n            finishedSubmitAddService: false,\r\n            isAddService: false,\r\n        }\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.handleLookService = this.handleLookService.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleChangeOrderPI = this.handleChangeOrderPI.bind(this);\r\n        this.handleChangeOrderMS = this.handleChangeOrderMS.bind(this);\r\n        this.handleChangeOrderPIMS = this.handleChangeOrderPIMS.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.changeService = this.changeService.bind(this);\r\n        this.handleSubmitChangeService = this.handleSubmitChangeService.bind(this);\r\n        this.deleteService = this.deleteService.bind(this);\r\n        this.handleToChangeService = this.handleToChangeService.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleAfterDelete = this.handleAfterDelete.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeFieldService = this.handleChangeFieldService.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitTambahService = this.handleSubmitTambahService.bind(this);\r\n        this.handleTambahService = this.handleTambahService.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrderPI  = await APIConfig.get(\"/orderPI\");\r\n            const listOrderMS  = await APIConfig.get(\"/orderMS\");\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            this.setState({ ordersPI: listOrderPI.data });\r\n            this.setState({ ordersMS: listOrderMS.data });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getPIorder(idOrder) {\r\n        let pi = this.state.ordersPI.filter(pi => pi.idOrder.idOrder === idOrder);\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMSorder(idOrder) {\r\n        let ms = this.state.ordersMS.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        if (ms.length !== 0) {\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif) {\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    checkActivatedMS(active) {\r\n        if(active === true){\r\n            return \"Activated\";\r\n        } else {\r\n            return \"Not Activated\";\r\n        }\r\n    }\r\n\r\n    checkClosedPI(close) {\r\n        if(close === true){\r\n            return \"Closed\";\r\n        } else {\r\n            return \"Not Closed\";\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleLookDetail() {\r\n        let order = this.state.orderTarget;\r\n        //console.log(this.state.orderTarget);\r\n        this.setState({\r\n            noPO: order.noPO,\r\n            noSPH: order.noSPH,\r\n            orderName: order.orderName,\r\n            description: order.description,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            clientName: order.clientName,\r\n            clientDiv: order.clientDiv,\r\n            clientPIC: order.clientPIC,\r\n            clientOrg: order.clientOrg,\r\n            clientPhone: order.clientPhone,\r\n            clientEmail: order.clientEmail,\r\n            dateOrder: order.dateOrder,\r\n            verified: order.verified,\r\n        })\r\n        let isPI = order.projectInstallation;\r\n        let isMS = order.managedService;\r\n        if (isPI === true) {\r\n            const ordPI = this.getPIorder(order.idOrder);\r\n            //console.log(ordPI);\r\n            this.setState({\r\n                idOrderPi: ordPI.idOrderPi,\r\n                startPI: ordPI.startPI,\r\n                deadline: ordPI.deadline,\r\n                close: ordPI.close,\r\n                percentage: ordPI.percentage,\r\n            });\r\n        }\r\n        if (isMS === true) {\r\n            const ordMS = this.getMSorder(order.idOrder);\r\n            //console.log(ordMS);\r\n            this.setState({\r\n                idOrderMs: ordMS.idOrderMs,\r\n                actualStart: ordMS.actualStart,\r\n                actualEnd: ordMS.actualEnd,\r\n                activated: ordMS.activated,\r\n            });\r\n            this.handleLookService();\r\n        }\r\n    }\r\n\r\n    async handleLookService() {\r\n        try {\r\n            const services = await APIConfig.get(`/order/MS/${this.state.idOrderMs}/listService`);\r\n            this.setState({ listService: services.data });\r\n            //console.log(this.state.listService);\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async changeService(idService) {\r\n        try {\r\n            const serviceItem = await APIConfig.get(`/order/detail/Service/${idService}`);\r\n            this.setState({ serviceTarget: serviceItem.data });\r\n            console.log(this.state.serviceTarget);\r\n            this.handleToChangeService();\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitChangeService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                name: this.state.name,\r\n            }\r\n            await APIConfig.put(`/order/ubah/service/${this.state.idService}`, data);\r\n            this.loadData();\r\n            this.setState({ finishedSubmitService: true });\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    async deleteService(idService) {\r\n        try {\r\n            await APIConfig.delete(`order/delete/service/${idService}`);\r\n            this.loadData();\r\n            this.setState({ finishedDeleteService: true });\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleToChangeService() {\r\n        let service = this.state.serviceTarget;\r\n        this.setState({\r\n            idService: service.idService,\r\n            name: service.name,\r\n            isChangeService: true,\r\n        })\r\n    }\r\n\r\n    handleChangeOrderPI = () => {\r\n        this.props.history.push(`/orderPI/change/${this.state.idOrder}/${this.state.idOrderPi}`);\r\n    }\r\n\r\n    handleChangeOrderMS = () => {\r\n        this.props.history.push(`/orderMS/change/${this.state.idOrder}/${this.state.idOrderMs}`);\r\n    }\r\n    \r\n    handleChangeOrderPIMS = () => {\r\n        this.props.history.push(`/orderPIMS/change/${this.state.idOrder}/${this.state.idOrderPi}/${this.state.idOrderMs}`);\r\n    }\r\n\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n        this.setState({ finishedSubmitService: false });\r\n    }\r\n\r\n    handleAfterDelete = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n        this.setState({ finishedDeleteService: false });\r\n    }\r\n\r\n    handleAfterAdd = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n        this.setState({ finishedSubmitAddService: false });\r\n    }\r\n\r\n    handleCancelSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ isChangeService: false, isAddService: false });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isChangeService: false, isAddService: false, ...initState });\r\n    }\r\n\r\n    handleChangeFieldService = (e) => {\r\n        if ([\"name\"].includes(e.target.name)) {\r\n            let listServiceNew = [...this.state.listServiceNew]\r\n            listServiceNew[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listServiceNew: [...prevState.listServiceNew, { index: Math.random(), name: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listServiceNew: this.state.listServiceNew.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listServiceNew: this.state.listServiceNew.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    handleTambahService(event) {\r\n        event.preventDefault();\r\n        this.setState({ isAddService: true });\r\n    }\r\n\r\n    async handleSubmitTambahService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listServiceNew.length;i++) {\r\n                const data = {\r\n                    name: this.state.listServiceNew[i].name,\r\n                };\r\n                //console.log(this.state.listService[i].name);\r\n                await APIConfig.post(`/order/tambah/MS/${this.state.idOrderMs}/Service`, data);\r\n                this.loadData();\r\n                this.setState({ finishedSubmitAddService: true });\r\n            }\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            idOrder,\r\n            idOrderPi,\r\n            idOrderMs,\r\n            ordersPI,\r\n            ordersMS,\r\n            orderTarget ,\r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation ,\r\n            managedService ,\r\n            startPI,\r\n            deadline,\r\n            close,\r\n            percentage,\r\n            actualStart,\r\n            actualEnd,\r\n            activated,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            verified,\r\n            isPIchange,\r\n            finishedSubmit,\r\n            name,\r\n        } = this.state;\r\n\r\n        let { listService } = this.state;\r\n\r\n        let { listServiceNew } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No', 'Nama Service', 'Ubah Service', 'Hapus Service'\r\n        ];\r\n\r\n        const tableRows = listService.map((service) => [service.name,\r\n            <CustomizedButtons\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"#FD693E\"\r\n                onClick={() => this.changeService(service.idService)}>Ubah</CustomizedButtons>,\r\n            <CustomizedButtons\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"#FD693E\"\r\n                onClick={() => this.deleteService(service.idService)}>Hapus</CustomizedButtons>\r\n        ])\r\n\r\n        return (\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Detail Order</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {this.state.projectInstallation && !this.state.managedService? \r\n                            <><div className=\"text-right\">\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={() => this.handleChangeOrderPI()}>\r\n                                    Ubah Order\r\n                                </CustomizedButtons>\r\n                            </div></>\r\n                            : <></>}\r\n                            {this.state.managedService && !this.state.projectInstallation ? \r\n                            <><div className=\"text-right\">\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={() => this.handleChangeOrderMS()}>\r\n                                    Ubah Order\r\n                                </CustomizedButtons>\r\n                            </div></>\r\n                            : <></>}\r\n                            {this.state.managedService && this.state.projectInstallation ? \r\n                            <><div className=\"text-right\">\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={() => this.handleChangeOrderPIMS()}>\r\n                                    Ubah Order\r\n                                </CustomizedButtons>\r\n                            </div></>\r\n                            : <></>}\r\n                            <Order \r\n                                key={this.state.idOrder}\r\n                                idOrder={this.state.idOrder}\r\n                                noPO={this.state.noPO}\r\n                                noSPH={this.state.noSPH}\r\n                                orderName={this.state.orderName}\r\n                                description={this.state.description}\r\n                                clientName={this.state.clientName}\r\n                                clientDiv={this.state.clientDiv}\r\n                                clientPIC={this.state.clientPIC}\r\n                                clientOrg={this.state.clientOrg}\r\n                                clientPhone={this.state.clientPhone}\r\n                                clientEmail={this.state.clientEmail}\r\n                                dateOrder={this.state.dateOrder}\r\n                                verified={this.checkStatusOrder(this.state.verified)}\r\n                                jenis={this.checkTypeOrder(this.state.projectInstallation, this.state.managedService)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {this.state.projectInstallation \r\n                            ? \r\n                            <>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Detail Data Project Installation</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* <h3 className={classes.subtitle}>Detail Data Project Installation</h3> */}\r\n                            <ProjectInstallation \r\n                                key={this.state.idOrderPi}\r\n                                idOrderPi={this.state.idOrderPi}\r\n                                startPI={this.state.startPI}\r\n                                deadline={this.state.deadline}\r\n                                percentage={this.state.percentage}\r\n                                close={this.checkClosedPI(this.state.close)} /><br></br>\r\n                            </>\r\n                            : \r\n                                <></>\r\n                            }\r\n                        {/* </div>\r\n                        <div className=\"card-body\"> */}\r\n                            {this.state.managedService\r\n                            ? \r\n                            <>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Detail Data Managed Service</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* <h3 className={classes.subtitle}>Detail Data Managed Service</h3> */}\r\n                            <ManagedService \r\n                                key={this.state.idOrderMs}\r\n                                idOrderMs={this.state.idOrderMs}\r\n                                actualStart={this.state.actualStart}\r\n                                actualEnd={this.state.actualEnd}\r\n                                activated={this.checkActivatedMS(this.state.activated)}/>\r\n                            <br></br>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Daftar Services</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"text-right\">\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleTambahService}>\r\n                                    + Tambah Services\r\n                                </CustomizedButtons>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <CustomizedTables headers={tableHeaders} rows={tableRows} /><br></br>\r\n                            </>\r\n                            : <></> }\r\n                        </div>\r\n                        <div className=\"card-footer text-right\">\r\n                            <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={() => this.handleBack()} >\r\n                                Kembali\r\n                            </CustomizedButtons>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={this.state.isChangeService} >\r\n                <form onChange={this.handleChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">Ubah Service</div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-10\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Service</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"name\" \r\n                                                    id=\"name\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan nama service\" \r\n                                                    value={name} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-center\">\r\n                                        <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmitChangeService}>\r\n                                            Simpan\r\n                                        </CustomizedButtons>\r\n                                        <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleCancelSubmit}>\r\n                                            Batal\r\n                                        </CustomizedButtons>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishedSubmitService}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <h2>{`Service Berhasil Diubah`}</h2>\r\n                        </div>\r\n                        <div className=\"card-footer text-center\">\r\n                            <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={() => this.handleAfterSubmit()} >\r\n                                Kembali\r\n                            </CustomizedButtons>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishedDeleteService}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <h2>{`Service Berhasil Dihapus`}</h2>\r\n                        </div>\r\n                        <div className=\"card-footer text-center\">\r\n                            <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={() => this.handleAfterDelete()} >\r\n                                Kembali\r\n                            </CustomizedButtons>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.isAddService} >\r\n                <form onChange={this.handleChangeFieldService} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">Tambah Services</div>\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"required\">Nama Services</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <ServiceList add={this.addNewRow} delete={this.clickOnDelete} listService={listServiceNew} />\r\n                                        </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-center\">\r\n                                        <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmitTambahService}>\r\n                                            Simpan\r\n                                        </CustomizedButtons>\r\n                                        <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleCancelSubmit}>\r\n                                            Batal\r\n                                        </CustomizedButtons>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishedSubmitAddService}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <h2>{`Service Berhasil Ditambahkan`}</h2>\r\n                        </div>\r\n                        <div className=\"card-footer text-center\">\r\n                            <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={() => this.handleAfterAdd()} >\r\n                                Kembali\r\n                            </CustomizedButtons>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DetailOrder);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":18,"column":21,"nodeType":"164","messageId":"165","endLine":18,"endColumn":22},{"ruleId":"162","severity":1,"message":"166","line":21,"column":17,"nodeType":"164","messageId":"165","endLine":21,"endColumn":26},{"ruleId":"162","severity":1,"message":"167","line":29,"column":50,"nodeType":"164","messageId":"165","endLine":29,"endColumn":54},{"ruleId":"162","severity":1,"message":"168","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":15},{"ruleId":"162","severity":1,"message":"169","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":13},{"ruleId":"162","severity":1,"message":"170","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":19},{"ruleId":"162","severity":1,"message":"168","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":15},{"ruleId":"162","severity":1,"message":"169","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":13},{"ruleId":"158","replacedBy":"171"},{"ruleId":"160","replacedBy":"172"},{"ruleId":"162","severity":1,"message":"173","line":7,"column":13,"nodeType":"164","messageId":"165","endLine":7,"endColumn":19},{"ruleId":"162","severity":1,"message":"174","line":77,"column":13,"nodeType":"164","messageId":"165","endLine":77,"endColumn":41},{"ruleId":"162","severity":1,"message":"175","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":25},{"ruleId":"162","severity":1,"message":"173","line":9,"column":13,"nodeType":"164","messageId":"165","endLine":9,"endColumn":19},{"ruleId":"162","severity":1,"message":"176","line":352,"column":13,"nodeType":"164","messageId":"165","endLine":352,"endColumn":20},{"ruleId":"162","severity":1,"message":"177","line":353,"column":13,"nodeType":"164","messageId":"165","endLine":353,"endColumn":22},{"ruleId":"162","severity":1,"message":"178","line":354,"column":13,"nodeType":"164","messageId":"165","endLine":354,"endColumn":22},{"ruleId":"162","severity":1,"message":"179","line":355,"column":13,"nodeType":"164","messageId":"165","endLine":355,"endColumn":21},{"ruleId":"162","severity":1,"message":"180","line":356,"column":13,"nodeType":"164","messageId":"165","endLine":356,"endColumn":21},{"ruleId":"162","severity":1,"message":"181","line":357,"column":13,"nodeType":"164","messageId":"165","endLine":357,"endColumn":24},{"ruleId":"162","severity":1,"message":"182","line":358,"column":13,"nodeType":"164","messageId":"165","endLine":358,"endColumn":17},{"ruleId":"162","severity":1,"message":"183","line":359,"column":13,"nodeType":"164","messageId":"165","endLine":359,"endColumn":18},{"ruleId":"162","severity":1,"message":"184","line":360,"column":13,"nodeType":"164","messageId":"165","endLine":360,"endColumn":22},{"ruleId":"162","severity":1,"message":"185","line":361,"column":13,"nodeType":"164","messageId":"165","endLine":361,"endColumn":24},{"ruleId":"162","severity":1,"message":"186","line":362,"column":13,"nodeType":"164","messageId":"165","endLine":362,"endColumn":32},{"ruleId":"162","severity":1,"message":"187","line":363,"column":13,"nodeType":"164","messageId":"165","endLine":363,"endColumn":27},{"ruleId":"162","severity":1,"message":"188","line":364,"column":13,"nodeType":"164","messageId":"165","endLine":364,"endColumn":20},{"ruleId":"162","severity":1,"message":"189","line":365,"column":13,"nodeType":"164","messageId":"165","endLine":365,"endColumn":21},{"ruleId":"162","severity":1,"message":"190","line":366,"column":13,"nodeType":"164","messageId":"165","endLine":366,"endColumn":18},{"ruleId":"162","severity":1,"message":"191","line":367,"column":13,"nodeType":"164","messageId":"165","endLine":367,"endColumn":23},{"ruleId":"162","severity":1,"message":"192","line":368,"column":13,"nodeType":"164","messageId":"165","endLine":368,"endColumn":24},{"ruleId":"162","severity":1,"message":"193","line":369,"column":13,"nodeType":"164","messageId":"165","endLine":369,"endColumn":22},{"ruleId":"162","severity":1,"message":"194","line":370,"column":13,"nodeType":"164","messageId":"165","endLine":370,"endColumn":22},{"ruleId":"162","severity":1,"message":"195","line":371,"column":13,"nodeType":"164","messageId":"165","endLine":371,"endColumn":23},{"ruleId":"162","severity":1,"message":"196","line":372,"column":13,"nodeType":"164","messageId":"165","endLine":372,"endColumn":22},{"ruleId":"162","severity":1,"message":"197","line":373,"column":13,"nodeType":"164","messageId":"165","endLine":373,"endColumn":22},{"ruleId":"162","severity":1,"message":"198","line":374,"column":13,"nodeType":"164","messageId":"165","endLine":374,"endColumn":22},{"ruleId":"162","severity":1,"message":"199","line":375,"column":13,"nodeType":"164","messageId":"165","endLine":375,"endColumn":24},{"ruleId":"162","severity":1,"message":"200","line":376,"column":13,"nodeType":"164","messageId":"165","endLine":376,"endColumn":24},{"ruleId":"162","severity":1,"message":"201","line":377,"column":13,"nodeType":"164","messageId":"165","endLine":377,"endColumn":22},{"ruleId":"162","severity":1,"message":"202","line":378,"column":13,"nodeType":"164","messageId":"165","endLine":378,"endColumn":21},{"ruleId":"162","severity":1,"message":"203","line":379,"column":13,"nodeType":"164","messageId":"165","endLine":379,"endColumn":23},{"ruleId":"162","severity":1,"message":"204","line":380,"column":13,"nodeType":"164","messageId":"165","endLine":380,"endColumn":27},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'A' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Link' is defined but never used.","'classes' is defined but never used.","'Order' is defined but never used.","'ServiceList' is defined but never used.",["205"],["206"],"'moment' is defined but never used.","'ordMSTerassignFromOrdersList' is assigned a value but never used.","'CustomizedButtons' is defined but never used.","'idOrder' is assigned a value but never used.","'idOrderPi' is assigned a value but never used.","'idOrderMs' is assigned a value but never used.","'ordersPI' is assigned a value but never used.","'ordersMS' is assigned a value but never used.","'orderTarget' is assigned a value but never used.","'noPO' is assigned a value but never used.","'noSPH' is assigned a value but never used.","'orderName' is assigned a value but never used.","'description' is assigned a value but never used.","'projectInstallation' is assigned a value but never used.","'managedService' is assigned a value but never used.","'startPI' is assigned a value but never used.","'deadline' is assigned a value but never used.","'close' is assigned a value but never used.","'percentage' is assigned a value but never used.","'actualStart' is assigned a value but never used.","'actualEnd' is assigned a value but never used.","'activated' is assigned a value but never used.","'clientName' is assigned a value but never used.","'clientDiv' is assigned a value but never used.","'clientPIC' is assigned a value but never used.","'clientOrg' is assigned a value but never used.","'clientPhone' is assigned a value but never used.","'clientEmail' is assigned a value but never used.","'dateOrder' is assigned a value but never used.","'verified' is assigned a value but never used.","'isPIchange' is assigned a value but never used.","'finishedSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]