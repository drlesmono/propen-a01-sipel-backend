[{"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"2","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"3","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\Components\\Layout\\index.js":"4","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"5","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js":"6","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js":"7","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceList.js":"8","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js":"9","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js":"10","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetail.js":"11","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"12","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js":"13","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"14","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js":"15","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceDetail.js":"16","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js":"17","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js":"18","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js":"19","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js":"20","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js":"21","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js":"22","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js":"23","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js":"24","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js":"25","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js":"26","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js":"27","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js":"28","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js":"29","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js":"30","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js":"31"},{"size":565,"mtime":1619762565434,"results":"32","hashOfConfig":"33"},{"size":7798,"mtime":1622176236898,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1618630151447,"results":"35","hashOfConfig":"33"},{"size":186,"mtime":1619146411241,"results":"36","hashOfConfig":"33"},{"size":186,"mtime":1619146411241,"results":"37","hashOfConfig":"33"},{"size":768,"mtime":1619268259747,"results":"38","hashOfConfig":"33"},{"size":7327,"mtime":1622377905584,"results":"39","hashOfConfig":"33"},{"size":936,"mtime":1619586961764,"results":"40","hashOfConfig":"33"},{"size":1734,"mtime":1621788284607,"results":"41","hashOfConfig":"33"},{"size":1485,"mtime":1621788358910,"results":"42","hashOfConfig":"33"},{"size":3823,"mtime":1621782336025,"results":"43","hashOfConfig":"33"},{"size":141,"mtime":1619295380407,"results":"44","hashOfConfig":"33"},{"size":474,"mtime":1619268227108,"results":"45","hashOfConfig":"33"},{"size":1797,"mtime":1619271163009,"results":"46","hashOfConfig":"33"},{"size":255,"mtime":1619268019724,"results":"47","hashOfConfig":"33"},{"size":448,"mtime":1619285199524,"results":"48","hashOfConfig":"33"},{"size":7085,"mtime":1622420718881,"results":"49","hashOfConfig":"33"},{"size":13308,"mtime":1622421710910,"results":"50","hashOfConfig":"33"},{"size":2330,"mtime":1621925018113,"results":"51","hashOfConfig":"33"},{"size":956,"mtime":1621917911610,"results":"52","hashOfConfig":"33"},{"size":19706,"mtime":1622421630892,"results":"53","hashOfConfig":"33"},{"size":58442,"mtime":1622339864887,"results":"54","hashOfConfig":"33"},{"size":37880,"mtime":1622381601485,"results":"55","hashOfConfig":"33"},{"size":33296,"mtime":1622339939741,"results":"56","hashOfConfig":"33"},{"size":39218,"mtime":1622339911883,"results":"57","hashOfConfig":"33"},{"size":33349,"mtime":1622339924433,"results":"58","hashOfConfig":"33"},{"size":25349,"mtime":1622130701207,"results":"59","hashOfConfig":"33"},{"size":26729,"mtime":1622135742190,"results":"60","hashOfConfig":"33"},{"size":673,"mtime":1622096925915,"results":"61","hashOfConfig":"33"},{"size":10300,"mtime":1622340115481,"results":"62","hashOfConfig":"33"},{"size":1569,"mtime":1622178688786,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"10eu9m6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["140","141"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["142","143","144"],"/* import React, { Component } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <InputDataOrder/>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App; */\r\n\r\n// import logo from './logo.svg';\r\nimport { useRoutes, A } from \"hookrouter\";\r\n// import routes from \"./router\";\r\nimport './App.css';\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport homepage from \"./assets/homepage.png\";\r\nimport PenjadwalanMaintenance from \"./containers/PenjadwalanMaintenance/PenjadwalanMaintenance\";\r\nimport CreateMaintenance from \"./containers/CreateMaintenance/CreateMaintenance\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport LookUpdateMaintenance from \"./containers/LookUpdateMaintenance/LookUpdateMaintenance\";\r\nimport CreateOrder from \"./containers/CreateOrder/CreateOrder\";\r\nimport DetailOrder from \"./containers/DetailOrder/DetailOrder\";\r\nimport ChangeOrderPI from \"./containers/ChangeOrderPI/ChangeOrderPI\";\r\nimport ChangeOrderMS from \"./containers/ChangeOrderMS/ChangeOrderMS\";\r\nimport ChangeOrderPIMS from \"./containers/ChangeOrderPIMS/ChangeOrderPIMS\";\r\nimport LaporanInstalasiMaintenance from \"./containers/LaporanInstalasiMaintenance\"\r\nimport StatusPersetujuanLaporan from \"./containers/StatusPersetujuanLaporan/StatusPersetujuanLaporan\";\r\nimport UnggahDokumenOrder from \"./containers/UnggahDokumenOrder/UnggahDokumenOrder\";\r\n\r\nconst routes = {\r\n  \"/\": () => \r\n            <div> \r\n              <div style={{ margin: 75 }}>\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      <div style={{ margin: 30 }}>\r\n                        <h3 style={{ color: '#F7873F' }}>Hello, name_here</h3>\r\n                        <h1 style={{ color: '#2F3F58' }}>Selamat Datang di Sistem Informasi Pengelolaan Layanan</h1>\r\n                      </div>\r\n                    </td>\r\n                    <td><img src={homepage} alt=\"homepage\"/></td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>,\r\n  //\"/order/order\": () => <InputDataOrder/>,\r\n  //\"/produksi/maintenance\": () => <PenjadwalanMaintenance />,\r\n  //\"/produksi/maintenance/tambah/:id\" : () => <CreateMaintenance />,\r\n  \"/laporan/daftarLaporan\" : () => <LaporanInstalasiMaintenance />,\r\n};\r\n\r\nfunction App(){\r\n\r\n  const routeResult = useRoutes(routes);\r\n\r\n    return (\r\n        <Layout>\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" id=\"navbar\">\r\n            <Navbar.Brand href=\"/\" style={{ textDecoration: 'none', color: '#F7873F' }}>SIPEL</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#dashboard\">Dashboard</Nav.Link>\r\n                <NavDropdown title=\"Order\" id=\"collasible-nav-dropdown\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Nav.Link href=\"/order/order\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Order</Nav.Link>\r\n                    <Nav.Link href=\"#action/3.2\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Another action</Nav.Link>\r\n                    <Nav.Link href=\"#action/3.4\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Something</Nav.Link>\r\n                    <Nav.Link href=\"#action/3.4\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Something 2</Nav.Link>\r\n                  </div>\r\n                  {/* <NavDropdown.Item href=\"/order/order\">Order</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item> */}\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Produksi\" id=\"collasible-nav-dropdown\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Nav.Link href=\"#produksi/penugasan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Penugasan</Nav.Link>\r\n                    <Nav.Link href=\"#produksi/progress-delivery\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Progress Delivery</Nav.Link>\r\n                    <Nav.Link href=\"#produksi/periodeKontrak\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Periode Kontrak</Nav.Link>\r\n                    <Nav.Link href=\"/produksi/maintenance\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Maintenance</Nav.Link>\r\n                  </div>\r\n                  {/* <NavDropdown.Item href=\"#action/3.1\">Penugasan</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.1\">Progress Delivery</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.1\">Periode Kontrak</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"produksi/maintenance\">Maintenance</NavDropdown.Item> */}\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Laporan\" id=\"collasible-nav-dropdown\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Nav.Link href=\"/laporan/daftarLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>\r\n                    <Nav.Link href=\"/laporan/verifikasiLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Verifikasi Laporan</Nav.Link>\r\n                  </div>\r\n                  {/* <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item> */}\r\n                </NavDropdown>\r\n                <Nav.Link href=\"#halamanAdmin\">Halaman Admin</Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href=\"#deets\">name_here</Nav.Link>\r\n                {/* <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                </Nav.Link> */}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n            { routeResult }\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/order/order\" component={InputDataOrder} />\r\n              <Route exact path=\"/produksi/maintenance\" component={PenjadwalanMaintenance} />\r\n              <Route exact path=\"/produksi/maintenance/create/:id\" component={CreateMaintenance} />\r\n              <Route exact path=\"/produksi/maintenance/look-update/:id\" component={LookUpdateMaintenance} />\r\n              <Route exact path=\"/order/create\" component={CreateOrder} />\r\n              <Route exact path=\"/order/detail/:id\" component={DetailOrder} />\r\n              <Route exact path=\"/orderPI/change/:id/:idPi\" component={ChangeOrderPI} />\r\n              <Route exact path=\"/orderMS/change/:id/:idMs\" component={ChangeOrderMS} />\r\n              <Route exact path=\"/orderPIMS/change/:id/:idPi/:idMs\" component={ChangeOrderPIMS} />\r\n              <Route exact path=\"/laporan/verifikasiLaporan\" component={StatusPersetujuanLaporan} />\r\n              <Route exact path=\"/order/unggah/:id\" component={UnggahDokumenOrder} />\r\n            </Switch>\r\n          </Router>\r\n          </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\Components\\Layout\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js",["145","146"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst initState = {\r\n    orderTarget: null,\r\n    file: null,\r\n}\r\n\r\nclass InputDataOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            orderTarget: null,\r\n            isUnggah: false,\r\n            file: null,\r\n            isError: false,\r\n            isFinishedUpload: false,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            isFiltered: false,\r\n            ordersFiltered: [],\r\n        };\r\n        this.handleTambahOrder = this.handleTambahOrder.bind(this);\r\n        this.handleLookUpDetail = this.handleLookUpDetail.bind(this);\r\n        this.handleClickUnggah = this.handleClickUnggah.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/orderList\");\r\n            this.setState({ orders: listOrder.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return <div>Project Installation<br></br>Managed Service</div>;\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif){\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleTambahOrder = () => {\r\n        this.props.history.push(`/order/create`);\r\n    }\r\n\r\n    handleLookUpDetail = (order) => {\r\n        this.props.history.push(`/order/detail/${order.idOrder}`);\r\n    }\r\n\r\n    handleClickUnggah = (order) => {\r\n        this.props.history.push(`/order/unggah/${order.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrders = this.state.orders;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrders = this.state.orders.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) || \r\n                order.noPO.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.dateOrder).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.checkStatusOrder(order.verified).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersFiltered : newOrders });\r\n    }\r\n\r\n    render() {\r\n        const { orders, orderTarget, isError, isFiltered, ordersFiltered } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No', \r\n            'Nomor PO', \r\n            'Nama Order', \r\n            'Nama Pelanggan', \r\n            'Perusahaan Pelanggan',\r\n            'Tanggal Masuk',\r\n            'Jenis', \r\n            'Status', \r\n            'Aksi',\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersFiltered.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>])\r\n                        : orders.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <br></br>\r\n            <div className=\"d-flex justify-content-between\" style={{padding: 5}}>\r\n                <Button className={classes.button2} onClick={() => this.handleTambahOrder()}>+ Tambah Order</Button>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(InputDataOrder);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceList.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js",["147","148"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ProjectInstallation = (props) => {\r\n    const { \r\n        idOrderPi,\r\n        startPI, \r\n        deadline,\r\n        percentage,\r\n        close } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`ID Project Installation: ${idOrderPi}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Tanggal Mulai Proyek: ${startPI}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Tanggal Selesai Proyek: ${deadline}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Progres Pengerjaan: ${percentage} %`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Status: ${close}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectInstallation;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js",["149","150","151"],"import React from \"react\";\r\nimport ServiceList from \"../Services/serviceList\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ManagedService = (props) => {\r\n    const { \r\n        idOrderMs,\r\n        actualStart,\r\n        actualEnd,\r\n        activated\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`ID Managed Service: ${idOrderMs}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Periode Mulai: ${actualStart}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Periode Selesai: ${actualEnd}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Status: ${activated}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagedService;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetail.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceDetail.js",[],["152","153"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js",["154","155"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js",["156"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js",["157"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport ServiceList from \"../../components/Services/serviceList\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst initState = {\r\n    startPI: \"\",\r\n    deadline:\"\",\r\n    actualStart: \"\",\r\n    actualEnd: \"\",\r\n    listService: [{ index: Math.random(), name: \"\"}],\r\n}\r\n\r\nclass CreateOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            listService: [{ index: Math.random(), name: \"\"}],\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            orderTarget: null,\r\n            verified: false,\r\n            isSubmitOrder: false,\r\n            isSubmitOrderMS: false,\r\n            finishSubmitOrder: false,\r\n            orders: [],\r\n            ordersMS: [],\r\n            orderMSTarget: null,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitTambahOrder = this.handleSubmitTambahOrder.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleSubmitTambahPI = this.handleSubmitTambahPI.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitTambahMS = this.handleSubmitTambahMS.bind(this);\r\n        this.handleSubmitTambahService = this.handleSubmitTambahService.bind(this);\r\n        this.handleSubmitTambahPIMS = this.handleSubmitTambahPIMS.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/orderList\");\r\n            const listOrderMS  = await APIConfig.get(\"/orderMS\");\r\n            this.setState({ orders: listOrder.data });\r\n            this.setState({ orderTarget: this.state.orders[this.state.orders.length - 1] });\r\n            this.setState({ ordersMS: listOrderMS.data });\r\n            this.setState({ orderMSTarget: this.state.ordersMS[this.state.ordersMS.length - 1] });\r\n            //console.log(this.state.orderTarget);\r\n            //console.log(this.state.orderMSTarget);\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"name\"].includes(e.target.name)) {\r\n            let listService = [...this.state.listService]\r\n            listService[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n        if (e.target.checked !== \"projectInstallation\" && e.target.checked !== \"managedService\" && ![\"name\"].includes(e.target.name)) {\r\n            this.setState({ [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listService: [...prevState.listService, { index: Math.random(), name: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listService: this.state.listService.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listService: this.state.listService.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isSubmitOrder: false, isSubmitOrderMS: false, isCancel: false, ...initState });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    async handleSubmitTambahOrder(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            await APIConfig.post(\"/order/tambah\", data);\r\n            this.loadData();\r\n            this.setState( { isSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitTambahPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (new Date(this.state.startPI) > new Date (this.state.deadline)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.startPI) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            await APIConfig.post(`/order/tambah/PI/${this.state.orderTarget.idOrder}`, data);\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n            this.handleCancel(event);\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Data Project Installation gagal disimpan! Masukkan kembali tanggal mulai dan selesai project!\");\r\n            console.log(error);\r\n        }\r\n        //this.handleCancel(event);\r\n    }\r\n\r\n    async handleSubmitTambahMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (new Date(this.state.actualStart) > new Date (this.state.actualEnd)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.actualStart) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            };\r\n            await APIConfig.post(`/order/tambah/MS/${this.state.orderTarget.idOrder}`, data);\r\n            this.loadData();\r\n            this.setState({ isSubmitOrderMS: true});\r\n            this.setState({ isSubmitOrder: false });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Data Managed Service gagal disimpan! Masukkan kembali tanggal periode kontrak!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitTambahPIMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (new Date(this.state.startPI) > new Date (this.state.deadline)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.startPI) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.actualStart) > new Date (this.state.actualEnd)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.actualStart) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            };\r\n            await APIConfig.post(`/order/tambah/PI/${this.state.orderTarget.idOrder}`, dataPI);\r\n            await APIConfig.post(`/order/tambah/MS/${this.state.orderTarget.idOrder}`, dataMS);\r\n            this.loadData();\r\n            this.setState({ isSubmitOrderMS: true});\r\n            this.setState({ isSubmitOrder: false });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Data PI dan MS gagal disimpan! Masukkan kembali tanggal serta periode mulai dan selesai!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitTambahService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listService.length;i++) {\r\n                if (this.state.listService[i].name === \"\" || this.state.listService[i].name === null) {\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: \"Anda wajib mengisi field Nama Service\",\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 400\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            for (let i=0; i<this.state.listService.length;i++) {\r\n                const data = {\r\n                    name: this.state.listService[i].name,\r\n                };\r\n                //console.log(this.state.listService[i].name);\r\n                await APIConfig.post(`/order/tambah/MS/${this.state.orderMSTarget.idOrderMs}/Service`, data);\r\n                this.loadData();\r\n                this.setState({ finishSubmitOrder: true });\r\n            }\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            startPI,\r\n            deadline,\r\n            actualStart,\r\n            actualEnd,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        let { listService } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Tambah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\">Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\">Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input \r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\">Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\">Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Masuk Order</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahOrder}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.projectInstallation && !this.state.managedService && this.state.isSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                    Tambah Data PI\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahPI}>Simpan Data PI</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.managedService && !this.state.projectInstallation && this.state.isSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                    Tambah Data MS\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahMS}>Simpan Data MS</Button>\r\n                                </div>\r\n                            </div>                                            \r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.isSubmitOrderMS} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <form onChange={this.handleChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">Tambah Services</div>\r\n                                    <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                        <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"required\">Nama Services</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <ServiceList add={this.addNewRow} delete={this.clickOnDelete} listService={listService} />\r\n                                        </tbody>\r\n                                        </table>\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-center\">\r\n                                        <Button className={classes.button1} onClick={this.handleSubmitTambahService}>Simpan Data Services</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.managedService && this.state.projectInstallation && this.state.isSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                    Tambah Data PI-MS\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahPIMS}>Simpan Data PI-MS</Button>\r\n                                </div>\r\n                            </div>                                            \r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Ditambahkan</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;Anda yakin membatalkan menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateOrder);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js",["158","159"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport Order from \"../../components/Order/orderDetail\";\r\nimport ProjectInstallation from \"../../components/ProjectInstallation/piDetail\";\r\nimport ManagedService from \"../../components/ManagedService/msDetail\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CustomizedTables from \"../../components/Table\";\r\n//import Modal from \"../../components/Modal\";\r\nimport ServiceList from \"../../components/Services/serviceList\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\n\r\nconst initState = {\r\n    name: \"\",\r\n}\r\n\r\nclass DetailOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idOrderPi: \"\",\r\n            idOrderMs: \"\",\r\n            ordersPI: [],\r\n            ordersMS: [],\r\n            orderTarget: null,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            listService: [],\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            verified: false,\r\n            idService: \"\",\r\n            name: \"\",\r\n            serviceTarget: null,\r\n            listServiceNew: [{ index: Math.random(), name: \"\"}],\r\n            finishedSubmitService: false,\r\n            isChangeService: false,\r\n            finishedDeleteService: false,\r\n            finishedSubmitAddService: false,\r\n            isAddService: false,\r\n            documents: [], //dok order\r\n            documentTarget: null,\r\n            isDelete: false,\r\n            isError: false,\r\n            isDeleteSuccess: false,\r\n            isDeleteService: false,\r\n            serviceTargetToDelete: null,\r\n            isCancelChangeService: false,\r\n            isCancelToAddService: false,\r\n        }\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.handleLookService = this.handleLookService.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleChangeOrderPI = this.handleChangeOrderPI.bind(this);\r\n        this.handleChangeOrderMS = this.handleChangeOrderMS.bind(this);\r\n        this.handleChangeOrderPIMS = this.handleChangeOrderPIMS.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.changeService = this.changeService.bind(this);\r\n        this.handleSubmitChangeService = this.handleSubmitChangeService.bind(this);\r\n        this.deleteService = this.deleteService.bind(this);\r\n        this.handleToChangeService = this.handleToChangeService.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleAfterDelete = this.handleAfterDelete.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeFieldService = this.handleChangeFieldService.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitTambahService = this.handleSubmitTambahService.bind(this);\r\n        this.handleTambahService = this.handleTambahService.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleConfirmDelete = this.handleConfirmDelete.bind(this);\r\n        this.handleConfirmDeleteService = this.handleConfirmDeleteService.bind(this);\r\n        this.noCancelChange = this.noCancelChange.bind(this);\r\n        this.handleCancelSubmitService = this.handleCancelSubmitService.bind(this);\r\n        this.noCancelToAdd = this.noCancelToAdd.bind(this);\r\n        this.handleCancelSubmitAddService = this.handleCancelSubmitAddService.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrderPI  = await APIConfig.get(\"/orderPI\");\r\n            const listOrderMS  = await APIConfig.get(\"/orderMS\");\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            const docList = await APIConfig.get(`/order/${this.state.idOrder}/documents`); //doc order\r\n            this.setState({ ordersPI: listOrderPI.data });\r\n            this.setState({ ordersMS: listOrderMS.data });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ documents: docList.data }); //doc order\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getPIorder(idOrder) {\r\n        let pi = this.state.ordersPI.filter(pi => pi.idOrder.idOrder === idOrder);\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMSorder(idOrder) {\r\n        let ms = this.state.ordersMS.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        if (ms.length !== 0) {\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif) {\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    checkActivatedMS(active) {\r\n        if(active === true){\r\n            return \"Activated\";\r\n        } else {\r\n            return \"Not Activated\";\r\n        }\r\n    }\r\n\r\n    checkClosedPI(close) {\r\n        if(close === true){\r\n            return \"Closed\";\r\n        } else {\r\n            return \"Not Closed\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleLookDetail() {\r\n        let order = this.state.orderTarget;\r\n        this.setState({\r\n            noPO: order.noPO,\r\n            noSPH: order.noSPH,\r\n            orderName: order.orderName,\r\n            description: order.description,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            clientName: order.clientName,\r\n            clientDiv: order.clientDiv,\r\n            clientPIC: order.clientPIC,\r\n            clientOrg: order.clientOrg,\r\n            clientPhone: order.clientPhone,\r\n            clientEmail: order.clientEmail,\r\n            dateOrder: order.dateOrder,\r\n            verified: order.verified,\r\n        })\r\n        let isPI = order.projectInstallation;\r\n        let isMS = order.managedService;\r\n        if (isPI === true) {\r\n            const ordPI = this.getPIorder(order.idOrder);\r\n            this.setState({\r\n                idOrderPi: ordPI.idOrderPi,\r\n                startPI: ordPI.startPI,\r\n                deadline: ordPI.deadline,\r\n                close: ordPI.close,\r\n                percentage: ordPI.percentage,\r\n            });\r\n        }\r\n        if (isMS === true) {\r\n            const ordMS = this.getMSorder(order.idOrder);\r\n            this.setState({\r\n                idOrderMs: ordMS.idOrderMs,\r\n                actualStart: ordMS.actualStart,\r\n                actualEnd: ordMS.actualEnd,\r\n                activated: ordMS.activated,\r\n            });\r\n            this.handleLookService();\r\n        }\r\n    }\r\n\r\n    async handleLookService() {\r\n        try {\r\n            const services = await APIConfig.get(`/order/MS/${this.state.idOrderMs}/listService`);\r\n            this.setState({ listService: services.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async changeService(idService) {\r\n        try {\r\n            const serviceItem = await APIConfig.get(`/order/detail/Service/${idService}`);\r\n            this.setState({ serviceTarget: serviceItem.data });\r\n            console.log(this.state.serviceTarget);\r\n            this.handleToChangeService();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitChangeService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (this.state.name === \"\" || this.state.name === null) {\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: \"Anda wajib mengisi field Nama Service\",\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 300\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                name: this.state.name,\r\n            }\r\n            await APIConfig.put(`/order/ubah/service/${this.state.idService}`, data);\r\n            this.loadData();\r\n            this.setState({ finishedSubmitService: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n    \r\n    async deleteService(idService) {\r\n        try {\r\n            await APIConfig.delete(`order/delete/service/${idService}`);\r\n            this.loadData();\r\n            this.setState({ finishedDeleteService: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.setState({ isDeleteService: false });\r\n    }\r\n\r\n    handleToChangeService() {\r\n        let service = this.state.serviceTarget;\r\n        this.setState({\r\n            idService: service.idService,\r\n            name: service.name,\r\n            isChangeService: true,\r\n        })\r\n    }\r\n\r\n    handleChangeOrderPI = () => {\r\n        this.props.history.push(`/orderPI/change/${this.state.idOrder}/${this.state.idOrderPi}`);\r\n    }\r\n\r\n    handleChangeOrderMS = () => {\r\n        this.props.history.push(`/orderMS/change/${this.state.idOrder}/${this.state.idOrderMs}`);\r\n    }\r\n    \r\n    handleChangeOrderPIMS = () => {\r\n        this.props.history.push(`/orderPIMS/change/${this.state.idOrder}/${this.state.idOrderPi}/${this.state.idOrderMs}`);\r\n    }\r\n\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n        this.setState({ finishedSubmitService: false });\r\n    }\r\n\r\n    handleAfterDelete = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n        this.setState({ finishedDeleteService: false, isDeleteSuccess: false });\r\n    }\r\n\r\n    handleAfterAdd = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n        this.setState({ finishedSubmitAddService: false });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleCancelSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ isChangeService: false, isAddService: false, isCancelChangeService: false, isCancelToAddService: false });\r\n    }\r\n\r\n    handleCancelSubmitService(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelChangeService: true });\r\n    }\r\n\r\n    handleCancelSubmitAddService(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToAddService: true });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isChangeService: false, isAddService: false, isDelete: false, isDeleteService: false, ...initState });\r\n    }\r\n\r\n    handleChangeFieldService = (e) => {\r\n        if ([\"name\"].includes(e.target.name)) {\r\n            let listServiceNew = [...this.state.listServiceNew]\r\n            listServiceNew[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listServiceNew: [...prevState.listServiceNew, { index: Math.random(), name: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listServiceNew: this.state.listServiceNew.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listServiceNew: this.state.listServiceNew.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    noCancelChange(event){\r\n        event.preventDefault()\r\n        this.setState({ isCancelChangeService: false });\r\n    }\r\n\r\n    noCancelToAdd(event){\r\n        event.preventDefault()\r\n        this.setState({ isCancelToAddService: false });\r\n    }\r\n\r\n    handleTambahService(event) {\r\n        event.preventDefault();\r\n        this.setState({ isAddService: true });\r\n    }\r\n\r\n    async handleSubmitTambahService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listServiceNew.length;i++) {\r\n                if (this.state.listServiceNew[i].name === \"\" || this.state.listServiceNew[i].name === null) {\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: \"Anda wajib mengisi field Nama Service\",\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 300\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            for (let i=0; i<this.state.listServiceNew.length;i++) {\r\n                const data = {\r\n                    name: this.state.listServiceNew[i].name,\r\n                };\r\n                await APIConfig.post(`/order/tambah/MS/${this.state.idOrderMs}/Service`, data);\r\n                this.loadData();\r\n                this.setState({ finishedSubmitAddService: true });\r\n            }\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    getUrl(document){\r\n        if(document.fileType === \"application/pdf\"){\r\n            return document.urlFile+\"/preview\";\r\n        }else{\r\n            return document.urlFile;\r\n        }\r\n    }\r\n\r\n    handleConfirmDelete(document){\r\n        this.setState({ documentTarget: document, isDelete: true });\r\n    }\r\n\r\n    handleConfirmDeleteService(service){\r\n        this.setState({ serviceTargetToDelete: service, isDeleteService: true });\r\n    }\r\n\r\n    async handleDelete(event){\r\n        event.preventDefault();\r\n        try{\r\n            await APIConfig.delete(`/order/document/${this.state.documentTarget.idDoc}/delete`);\r\n            this.loadData();\r\n        }catch (error){\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n        this.setState({isDeleteSuccess: true, isDelete: false});\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            isDelete,\r\n            isError,\r\n            isDeleteSuccess,\r\n            isDeleteService,\r\n            isCancelChangeService,\r\n            isCancelToAddService,\r\n        } = this.state;\r\n\r\n        let { listService } = this.state;\r\n\r\n        let { listServiceNew } = this.state;\r\n\r\n        let { documents } = this.state; //doc order\r\n\r\n        const tableHeaders = [\r\n            'No', 'Nama Service', 'Aksi'\r\n        ];\r\n\r\n        const tableRows = listService.map((service) => [service.name,\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n            <Button className={classes.button1} onClick={() => this.changeService(service.idService)}>&nbsp;Ubah&nbsp;</Button> \r\n            <span>&nbsp;&nbsp;</span>\r\n            <Button className={classes.button2} onClick={() => this.handleConfirmDeleteService(service)}>Hapus</Button>\r\n            </div>\r\n        ]);\r\n\r\n        const tableHeadersDoc = ['No', 'Nama Dokumen', 'Tanggal Upload', 'Aksi']; //doc order\r\n\r\n        const tableRowsDoc = documents.map((document) => [document.docName, this.getDate(document.uploadedDate),\r\n                            <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <Button className={classes.button1} href={this.getUrl(document)} target = \"_blank\">&nbsp;Preview&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleConfirmDelete(document)}>&nbsp;&nbsp;Hapus&nbsp;&nbsp;</Button>\r\n                            </div>\r\n                            ]); //doc order\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Detail Order</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {this.state.projectInstallation && !this.state.managedService? \r\n                            <><div className=\"text-right\">\r\n                                <Button className={classes.button1} onClick={() => this.handleChangeOrderPI()}>&nbsp;Ubah Order&nbsp;</Button>\r\n                            </div></>\r\n                            : <></>}\r\n                            {this.state.managedService && !this.state.projectInstallation ? \r\n                            <><div className=\"text-right\">\r\n                                <Button className={classes.button1} onClick={() => this.handleChangeOrderMS()}>&nbsp;Ubah Order&nbsp;</Button>\r\n                            </div></>\r\n                            : <></>}\r\n                            {this.state.managedService && this.state.projectInstallation ? \r\n                            <><div className=\"text-right\">\r\n                                <Button className={classes.button1} onClick={() => this.handleChangeOrderPIMS()}>&nbsp;Ubah Order&nbsp;</Button>\r\n                            </div></>\r\n                            : <></>}\r\n                            <Order \r\n                                key={this.state.idOrder}\r\n                                idOrder={this.state.idOrder}\r\n                                noPO={this.state.noPO}\r\n                                noSPH={this.state.noSPH}\r\n                                orderName={this.state.orderName}\r\n                                description={this.state.description}\r\n                                clientName={this.state.clientName}\r\n                                clientDiv={this.state.clientDiv}\r\n                                clientPIC={this.state.clientPIC}\r\n                                clientOrg={this.state.clientOrg}\r\n                                clientPhone={this.state.clientPhone}\r\n                                clientEmail={this.state.clientEmail}\r\n                                dateOrder={this.getDate(this.state.dateOrder)}\r\n                                verified={this.checkStatusOrder(this.state.verified)}\r\n                                jenis={this.checkTypeOrder(this.state.projectInstallation, this.state.managedService)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {this.state.projectInstallation \r\n                            ? \r\n                            <>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Detail Data Project Installation</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <ProjectInstallation \r\n                                key={this.state.idOrderPi}\r\n                                idOrderPi={this.state.idOrderPi}\r\n                                startPI={this.getDate(this.state.startPI)}\r\n                                deadline={this.getDate(this.state.deadline)}\r\n                                percentage={this.state.percentage}\r\n                                close={this.checkClosedPI(this.state.close)} /><br></br>\r\n                            </>\r\n                            : \r\n                                <></>\r\n                            }\r\n                            {this.state.managedService\r\n                            ? \r\n                            <>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Detail Data Managed Service</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <ManagedService \r\n                                key={this.state.idOrderMs}\r\n                                idOrderMs={this.state.idOrderMs}\r\n                                actualStart={this.getDate(this.state.actualStart)}\r\n                                actualEnd={this.getDate(this.state.actualEnd)}\r\n                                activated={this.checkActivatedMS(this.state.activated)}/>\r\n                            <br></br>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Daftar Services</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                            <div className=\"text-right\">\r\n                                <Button className={classes.button1} onClick={this.handleTambahService}>+ Tambah Services</Button>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <br></br>\r\n                            <CustomizedTables headers={tableHeaders} rows={tableRows} /><br></br>\r\n                            </>\r\n                            : <></> }\r\n                            {/* doc order */}\r\n                            <br></br>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Daftar Dokumen Order</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <CustomizedTables headers={tableHeadersDoc} rows={tableRowsDoc} /><br></br>\r\n                        </div>\r\n                        <div className=\"card-footer text-right\">\r\n                            <Button className={classes.button1} onClick={() => this.handleBack()}>&nbsp;Kembali&nbsp;</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <Modal show={this.state.isChangeService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Body>\r\n                    <ReactNotification />\r\n                    <form onChange={this.handleChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">Ubah Service</div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-10\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Service</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"name\" \r\n                                                    id=\"name\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan nama service\" \r\n                                                    value={name} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-center\">\r\n                                        <Button className={classes.button1} onClick={this.handleSubmitChangeService}>Simpan</Button>\r\n                                        <span>&nbsp;&nbsp;</span>\r\n                                        <Button className={classes.button2} onClick={this.handleCancelSubmitService}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishedSubmitService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Service Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isDeleteService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin menghapus service ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.deleteService(this.state.serviceTargetToDelete.idService)}>&nbsp;&nbsp;Hapus&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={this.handleCancel}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                {/* untuk batal mengubah */}\r\n                <Modal show={isCancelChangeService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal mengubah service ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={this.handleCancelSubmit}>&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={this.noCancelChange}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishedDeleteService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Service Berhasil Dihapus</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterDelete()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.isAddService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Body>\r\n                    <ReactNotification />\r\n                    <form onChange={this.handleChangeFieldService} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">Tambah Services</div>\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"required\">Nama Services</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <ServiceList add={this.addNewRow} delete={this.clickOnDelete} listService={listServiceNew} />\r\n                                        </tbody>\r\n                                        </table>\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-center\">\r\n                                        <Button className={classes.button1} onClick={this.handleSubmitTambahService}>Simpan</Button>\r\n                                        <span>&nbsp;&nbsp;</span>\r\n                                        <Button className={classes.button2} onClick={this.handleCancelSubmitAddService}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishedSubmitAddService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Service Berhasil Ditambahkan</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleAfterAdd()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancelToAddService} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;Anda yakin batal menambahkan service ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={this.handleCancelSubmit}>&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={this.noCancelToAdd}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isDelete} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin menghapus dokumen ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={this.handleDelete}>&nbsp;&nbsp;Hapus&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={this.handleCancel}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isDeleteSuccess} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dokumen Order Berhasil Dihapus</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-footer text-center\">\r\n                                <Button className={classes.button1} onClick={() => this.handleAfterDelete()}>Kembali</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DetailOrder);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js",["160"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass ChangeOrderMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderMS = this.handleSubmitChangeOrderMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderMSTarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: ord.dateOrder,\r\n            actualStart: ordMS.actualStart,\r\n            actualEnd: ordMS.actualEnd,\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.actualStart) > new Date (this.state.actualEnd)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.actualStart) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data);\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS);\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\">Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\">Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\">Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\">Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Masuk Order</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                {/* <Modal show={this.state.finishSubmitOrder}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <h2>{`Order Berhasil Diubah`}</h2>\r\n                        </div>\r\n                        <div className=\"card-footer text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal> */}\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;Anda yakin membatalkan menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderMS);\r\n","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js",["161"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass ChangeOrderPIMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPIMS = this.handleSubmitChangeOrderPIMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`);\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderPITarget);\r\n            console.log(this.state.orderMSTarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: ord.dateOrder,\r\n            startPI: ordPI.startPI,\r\n            deadline: ordPI.deadline,\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n            actualStart: ordMS.actualStart,\r\n            actualEnd: ordMS.actualEnd,\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPIMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.startPI) > new Date (this.state.deadline)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.startPI) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.actualStart) > new Date (this.state.actualEnd)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.actualStart) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data);\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI);\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS);\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\">Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\">Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\">Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\">Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Masuk Order</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPIMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                {/* <Modal show={this.state.finishSubmitOrder}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <h2>{`Order Berhasil Diubah`}</h2>\r\n                        </div>\r\n                        <div className=\"card-footer text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal> */}\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;Anda yakin membatalkan menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPIMS);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js",["162"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass ChangeOrderPI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPI = this.handleSubmitChangeOrderPI.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderPITarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: ord.dateOrder,\r\n            startPI: ordPI.startPI,\r\n            deadline: ordPI.deadline,\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.startPI) > new Date (this.state.deadline)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (new Date(this.state.startPI) < new Date(this.state.dateOrder)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data);\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI);\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\">Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\">Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\">Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\">Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Masuk Order</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPI}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                {/* <Modal show={this.state.finishSubmitOrder}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <h2>{`Order Berhasil Diubah`}</h2>\r\n                        </div>\r\n                        <div className=\"card-footer text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal> */}\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;Anda yakin membatalkan menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPI);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js",["163","164","165","166","167","168","169","170"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport LaporanDetail from \"../../components/Laporan/laporanUbahStatusForm\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\n\r\nconst initState = {\r\n    statusApproval: \"\",\r\n    isReject: false,\r\n    notes: null,\r\n}\r\n\r\nclass StatusPersetujuanLaporan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            reports: [],\r\n            listIr: [],\r\n            listMr: [],\r\n            listPi: [],\r\n            listMs: [],\r\n            listMaintenance: [],\r\n            reportsFiltered: [],\r\n            isInstallationReport: false,\r\n            isMrUploaded: false,\r\n            reportTarget: null,\r\n            orderTarget: null,\r\n            maintenanceTarget: null,\r\n            orderByPO: null,\r\n            file: null,\r\n            notes: null,\r\n            reportNum: null,\r\n            statusApproval: \"\",\r\n            reportIRtarget: null,\r\n            reportMRtarget: null,\r\n            isChangeStatus: false,\r\n            isReject: false,\r\n            isApprove: false,\r\n            finishedSubmitChangeStatus: false,\r\n            isError: false,\r\n        };\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleSubmitChangeStatusIR = this.handleSubmitChangeStatusIR.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterChangeStatus = this.handleAfterChangeStatus.bind(this);\r\n        this.onValueChangeApprove = this.onValueChangeApprove.bind(this);\r\n        this.onValueChangeReject = this.onValueChangeReject.bind(this);\r\n        this.handleSubmitChangeStatusMR = this.handleSubmitChangeStatusMR.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerifiedReport\");\r\n            const reports = await APIConfig.get(\"/reportsIrMr\");\r\n            const listIr = await APIConfig.get(\"/reports/ir\");\r\n            const listMr = await APIConfig.get(\"/reports/mr\");\r\n            const listPi = await APIConfig.get(\"/orders/pi\");\r\n            const listMs = await APIConfig.get(\"/orders/ms\");\r\n            this.setState({ ordersVerified: orders.data, reports: reports.data, listIr: listIr.data, \r\n                            listMr: listMr.data, listPi: listPi.data, listMs: listMs.data});\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    getOrder(report){\r\n        if(report.reportType === \"installation\"){\r\n            const ir = this.getIr(report.idReport);\r\n            if(ir !== null){\r\n                const pi = ir.idOrderPi;\r\n                return pi.idOrder;\r\n            }\r\n        }else{\r\n            const mr = this.getMr(report.idReport);\r\n            if(mr !== null){\r\n                const maintenanceTarget = mr.idMaintenance;\r\n                for(let i=0; i<this.state.listMs.length; i++){\r\n                    if(this.state.listMs[i].listMaintenance !== null){\r\n                        const listMaintenance = this.state.listMs[i].listMaintenance.filter(maintenance => \r\n                                                maintenance.idMaintenance === maintenanceTarget.idMaintenance);\r\n                        if(listMaintenance.length !== 0){\r\n                            const ms = this.state.listMs[i];\r\n                            return ms.idOrder;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getListOrderFilter(){\r\n        if(this.state.isInstallationReport){\r\n            return this.state.ordersVerified.filter(order => order.projectInstallation === true);\r\n        }else{\r\n            return this.state.ordersVerified.filter(order => order.managedService === true);\r\n        }\r\n    }\r\n\r\n    getPi(idOrder){\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        console.log(ms);\r\n        if (ms.length !== 0) {\r\n            console.log(ms[0]);\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getIr(idReport){\r\n        let ir = this.state.listIr.filter(ir => ir.idReport.idReport === idReport);\r\n        if (ir.length !== 0) {\r\n            return ir[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMr(idReport){\r\n        let mr = this.state.listMr.filter(mr => mr.idReport.idReport === idReport);\r\n        if (mr.length !== 0) {\r\n            return mr[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getReportNum(report){\r\n        if(report.reportType === \"installation\"){\r\n            if(this.getIr(report.idReport) !== null){\r\n                return this.getIr(report.idReport).irNum;\r\n            }\r\n        }else{\r\n            if(this.getMr(report.idReport) !== null){\r\n                return this.getMr(report.idReport).mrNum;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getDate(value){\r\n        let date = new Date(value);\r\n        const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                            \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n\r\n        return date.getDate()+\" \"+monthNames[date.getMonth()]+\" \"+date.getFullYear();\r\n    }\r\n\r\n    getUrl(report){\r\n        if(report.fileType === \"application/pdf\"){\r\n            return report.urlFile+\"/preview\";\r\n        }else{\r\n            return report.urlFile;\r\n        }\r\n    }\r\n\r\n    getNotes(report){\r\n        if(report.reportType === \"installation\"){\r\n            const ir = this.getIr(report.idReport);\r\n            if(ir !== null){\r\n                if(ir.notes !== null){\r\n                    return ir.notes;\r\n                }\r\n            }\r\n        }else{\r\n            const mr = this.getMr(report.idReport);\r\n            if(mr !== null){\r\n                if(mr.notes !== null){\r\n                    return mr.notes;\r\n                }\r\n            }\r\n        }\r\n        return \"-\";\r\n    }\r\n\r\n    getReportType(report){\r\n        if(report.reportType === \"installation\"){\r\n            return \"Laporan Instalasi\";\r\n        }else{\r\n            return \"Laporan Maintenance\";\r\n        }\r\n    }\r\n\r\n    getStatus(report){\r\n        if(report.statusApproval === \"pending\"){\r\n            return \"Pending\";\r\n        }\r\n        if(report.statusApproval === \"Setujui\"){\r\n            return \"Disetujui\";\r\n        }\r\n        if(report.statusApproval === \"Tolak\"){\r\n            return \"Ditolak\";\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newReportList = this.state.reports;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newReportList = this.state.reports.filter(report => {\r\n                return (report.reportName.toLowerCase().includes(value.toLowerCase()) || \r\n                this.getReportNum(report).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ reportsFiltered : newReportList });\r\n    }\r\n\r\n    handleChangeStatus(report) {\r\n        this.setState({ isChangeStatus: true });\r\n        this.setState({\r\n            reportIRtarget: this.getIr(report.idReport),\r\n            reportMRtarget: this.getMr(report.idReport),\r\n            orderTarget: this.getOrder(report),\r\n            reportTarget: report,\r\n        });\r\n    }\r\n\r\n    async handleSubmitChangeStatusIR(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if ((this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === \"\")\r\n            || (this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === null)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: \"Anda wajib mengisi field Catatan\",\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 300\r\n                });\r\n                return false;\r\n            }\r\n            const dataReport = {\r\n                statusApproval: this.state.statusApproval,\r\n            }\r\n            const dataIr = {\r\n                notes: this.state.notes,\r\n            }\r\n            await APIConfig.put(`/report/update/${this.state.reportTarget.idReport}`, dataReport);\r\n            await APIConfig.put(`/update/notes/${this.state.reportIRtarget.idInstallationReport}`, dataIr);\r\n            this.loadData();\r\n            this.setState({ finishedSubmitChangeStatus: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n        this.setState({ isChangeStatus: false });\r\n    }\r\n\r\n    async handleSubmitChangeStatusMR(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if ((this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === \"\")\r\n            || (this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === null)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: \"Anda wajib mengisi field Catatan\",\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 300\r\n                });\r\n                return false;\r\n            }\r\n            const dataReport = {\r\n                statusApproval: this.state.statusApproval,\r\n            }\r\n            const dataMr = {\r\n                notes: this.state.notes,\r\n            }\r\n            await APIConfig.put(`/report/update/${this.state.reportTarget.idReport}`, dataReport);\r\n            await APIConfig.put(`/update/mr/notes/${this.state.reportMRtarget.idMaintenanceReport}`, dataMr);\r\n            this.loadData();\r\n            this.setState({ finishedSubmitChangeStatus: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n        this.setState({ isChangeStatus: false });\r\n    }\r\n\r\n    handleAfterChangeStatus = () => {\r\n        this.setState({ finishedSubmitChangeStatus: false, ...initState });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false, ...initState });\r\n    }\r\n\r\n    handleCancelSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ isChangeStatus: false, ...initState });\r\n    }\r\n\r\n    onValueChangeApprove(event) {\r\n        this.setState({\r\n            statusApproval: event.target.value,\r\n            isReject: false,\r\n        });\r\n    }\r\n\r\n    onValueChangeReject(event) {\r\n        this.setState({\r\n            statusApproval: event.target.value,\r\n            isReject: true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { reports, reportsFiltered, reportTarget, isFiltered, reportNum, statusApproval, \r\n            reportIRtarget, reportMRtarget, orderTarget, isChangeStatus, notes, isReject, isApprove,\r\n            finishedSubmitChangeStatus, isError } = this.state;\r\n\r\n        const tableHeaders = ['No', 'Nomor Laporan', 'Nama Laporan', 'Nomor PO', 'Perusahaan Pelanggan', 'Status', 'Tanggal Dibuat', 'Catatan', 'Aksi'];\r\n                  \r\n        let tableRows = [];\r\n\r\n        if(reports.length !== 0){\r\n            tableRows = isFiltered ? reportsFiltered.map((report) =>\r\n                        [ this.getReportNum(report), report.reportName, this.getOrder(report).noPO, this.getOrder(report).clientOrg, \r\n                        this.getStatus(report), this.getDate(report.uploadedDate), this.getNotes(report), \r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} href={this.getUrl(report)} target = \"_blank\">&nbsp;Preview&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        {this.getStatus(report) === \"Pending\" || this.getStatus(report) === \"Ditolak\" ? \r\n                        <>\r\n                        <Button className={classes.button2} onClick={() => this.handleChangeStatus(report)}>Verifikasi</Button>\r\n                        </> : <></> }</div>])\r\n                        : reports.map((report) =>\r\n                        [ this.getReportNum(report), report.reportName, this.getOrder(report).noPO, this.getOrder(report).clientOrg, \r\n                        this.getStatus(report), this.getDate(report.uploadedDate), this.getNotes(report), \r\n                        <div className=\"d-flex justify-content-left align-items-center\">\r\n                        <Button className={classes.button1} href={this.getUrl(report)} target = \"_blank\">&nbsp;Preview&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        {this.getStatus(report) === \"Pending\" || this.getStatus(report) === \"Ditolak\" ? \r\n                        <>\r\n                        <Button className={classes.button2} onClick={() => this.handleChangeStatus(report)}>Verifikasi</Button>\r\n                        </> : <></> } </div>]);\r\n        }\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <div><h1 className={classes.title}>Verifikasi Laporan</h1></div>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}>\r\n                    <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n                </div>\r\n                <br></br>\r\n                <div>{ reports.length !== 0 ? <CustomizedTables headers={tableHeaders} rows={tableRows}/> : <p className=\"text-center\" style={{color: \"red\"}}>Belum terdapat laporan </p>}</div>\r\n\r\n                <Modal show={isChangeStatus} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ubah Status Laporan</h3>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    {this.state.reportIRtarget !== null ? \r\n                                    <>\r\n                                    <ReactNotification />\r\n                                    <LaporanDetail \r\n                                        reportNum={this.getReportNum(this.state.reportTarget)}\r\n                                        reportName={this.state.reportTarget.reportName}\r\n                                        noPO={this.state.orderTarget.noPO}\r\n                                        clientOrg={this.state.orderTarget.clientOrg}\r\n                                        statusApproval={this.state.reportTarget.statusApproval}\r\n                                        uploadedDate={this.getDate(this.state.reportTarget.uploadedDate)}\r\n                                    />\r\n                                    <br></br>\r\n                                    <form >\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\">\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Setujui\"\r\n                                                checked={this.state.statusApproval === \"Setujui\"}\r\n                                                onChange={this.onValueChangeApprove}\r\n                                            />&nbsp;&nbsp;&nbsp;Setujui</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\">\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Tolak\"\r\n                                                checked={this.state.statusApproval === \"Tolak\"}\r\n                                                onChange={this.onValueChangeReject}\r\n                                            />&nbsp;&nbsp;&nbsp;Tolak</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                        {this.state.isReject ? \r\n                                        <>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"required\">Catatan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"notes\" \r\n                                                    id=\"notes\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Catatan\" \r\n                                                    value={notes} \r\n                                                    onChange={this.handleChange} />\r\n                                        </div>\r\n                                        </> : <></>}\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                        <div className=\"card-footer text-center\">\r\n                                            <Button className={classes.button2} onClick={this.handleSubmitChangeStatusIR}>Simpan</Button>\r\n                                            <span>&nbsp;&nbsp;</span>\r\n                                            <Button className={classes.button3} onClick={this.handleCancelSubmit}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                        </div>\r\n                                        </form>\r\n                                    </> : \r\n                                    <>{this.state.reportMRtarget !== null ? \r\n                                    <>\r\n                                    <ReactNotification />\r\n                                    <LaporanDetail \r\n                                        reportNum={this.getReportNum(this.state.reportTarget)}\r\n                                        reportName={this.state.reportTarget.reportName}\r\n                                        noPO={this.state.orderTarget.noPO}\r\n                                        clientOrg={this.state.orderTarget.clientOrg}\r\n                                        statusApproval={this.state.reportTarget.statusApproval}\r\n                                        uploadedDate={this.getDate(this.state.reportTarget.uploadedDate)}\r\n                                    />\r\n                                    <br></br>\r\n                                    <form >\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\">\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Setujui\"\r\n                                                checked={this.state.statusApproval === \"Setujui\"}\r\n                                                onChange={this.onValueChangeApprove}\r\n                                            />&nbsp;&nbsp;&nbsp;Setujui</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\">\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Tolak\"\r\n                                                checked={this.state.statusApproval === \"Tolak\"}\r\n                                                onChange={this.onValueChangeReject}\r\n                                            />&nbsp;&nbsp;&nbsp;Tolak</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                        {this.state.isReject ? \r\n                                        <>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"required\">Catatan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"notes\" \r\n                                                    id=\"notes\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Catatan\" \r\n                                                    value={notes} \r\n                                                    onChange={this.handleChange} />\r\n                                        </div>\r\n                                        </> : <></>}\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                        <div className=\"card-footer text-center\">\r\n                                            <Button className={classes.button2} onClick={this.handleSubmitChangeStatusMR}>Simpan</Button>\r\n                                            <span>&nbsp;&nbsp;</span>\r\n                                        <Button className={classes.button3} onClick={this.handleCancelSubmit}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </div>\r\n                                        </form>\r\n                                    </> : <></> }</>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={finishedSubmitChangeStatus} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Status Laporan Berhasil Diubah</h3>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-footer text-center\">\r\n                                <Button className={classes.button2} onClick={() => this.handleAfterChangeStatus()}>Kembali</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusPersetujuanLaporan;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js",["171"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Laporan = (props) => {\r\n    const { \r\n        reportNum,\r\n        reportName,\r\n        noPO,\r\n        clientOrg,\r\n        statusApproval,\r\n        uploadedDate,\r\n         } = props;\r\n    return (\r\n        <div>\r\n            <p>{`Nomor Laporan: ${reportNum}`}</p>\r\n            <p>{`Nama Laporan: ${reportName}`}</p>\r\n            <p>{`Nomor PO: ${noPO}`}</p>\r\n            <p>{`Perusahaan Pelanggan: ${clientOrg}`}</p>\r\n            <p>{`Status: ${statusApproval}`}</p>\r\n            <p>{`Tanggal Dibuat: ${uploadedDate}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Laporan;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js",["172"],"import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport OrderDetailForUnggah from \"../../components/Order/orderDetailForUnggah\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass UnggahDokumenOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            orderTarget: null,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            file: null,\r\n            verified: false,\r\n            isFinishedUpload: false,\r\n            isError: false,\r\n            isCancel: false,\r\n        };\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.checkTypeOrder = this.checkTypeOrder.bind(this);\r\n        this.handleChangeFile = this.handleChangeFile.bind(this);\r\n        this.checkStatusOrder = this.checkStatusOrder.bind(this);\r\n        this.handleSubmitDocument = this.handleSubmitDocument.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterUnggahDokumen = this.handleAfterUnggahDokumen.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleLookDetail() {\r\n        let order = this.state.orderTarget;\r\n        this.setState({\r\n            noPO: order.noPO,\r\n            orderName: order.orderName,\r\n            clientName: order.clientName,\r\n            clientOrg: order.clientOrg,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            verified: order.verified,\r\n        });\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif) {\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    handleChangeFile(event){\r\n        event.preventDefault();\r\n        this.setState({[event.target.name]: event.target.files[0]});\r\n    }\r\n\r\n    async handleSubmitDocument(event) {\r\n        event.preventDefault();\r\n        if(this.state.file === null || this.state.file === \"\"){\r\n            store.addNotification({\r\n                title: \"Peringatan!\",\r\n                message: \"Anda wajib memasukkan file yang akan diunggah\",\r\n                type: \"warning\",\r\n                container: \"top-left\",\r\n                insert: \"top\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeout\"],\r\n                dismiss: {\r\n                    duration: 7000,\r\n                    showIcon: true,\r\n                },\r\n                width: 300\r\n            });\r\n            return false;\r\n        }\r\n        try {\r\n            let response;\r\n            let newDocument;\r\n\r\n            const dataDocument = new FormData();\r\n            dataDocument.append(\"file\", this.state.file);\r\n            console.log(dataDocument);\r\n            response = await APIConfig.post(`/order/${this.state.orderTarget.idOrder}/document/upload`, dataDocument);\r\n            newDocument = response.data.result;\r\n            this.loadData();\r\n            this.setState({ isFinishedUpload: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterUnggahDokumen = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isFinishedUpload,\r\n            isError,\r\n            isCancel\r\n        } = this.state;\r\n        \r\n        return(\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Unggah Dokumen Order</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <OrderDetailForUnggah \r\n                                noPO={this.state.noPO}\r\n                                orderName={this.state.orderName}\r\n                                jenis={this.checkTypeOrder(this.state.projectInstallation, this.state.managedService)}\r\n                                clientName={this.state.clientName}\r\n                                clientOrg={this.state.clientOrg}\r\n                                status={this.checkStatusOrder(this.state.verified)}\r\n                            />\r\n                            <br></br>\r\n                            <Form>\r\n                            <Table borderless responsive=\"xl\" size=\"md\">\r\n                                <ReactNotification />\r\n                                <tr>\r\n                                    <td><h5 className=\"d-flex justify-content-center\">Dokumen Order <p style={{color: \"red\"}}>&nbsp;&nbsp;*</p></h5></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                        <Form.File name=\"file\" onChange={this.handleChangeFile}/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                    <Button className={classes.button2} onClick={this.handleSubmitDocument}>Simpan</Button>\r\n                                        <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button3} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </Table>\r\n                        </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={isFinishedUpload} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;Dokumen Order Berhasil Diunggah</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-footer text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleAfterUnggahDokumen()}>Kembali</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;Anda yakin membatalkan mengunggah dokumen ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button3} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UnggahDokumenOrder);","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":18,"column":21,"nodeType":"179","messageId":"180","endLine":18,"endColumn":22},{"ruleId":"177","severity":1,"message":"181","line":21,"column":17,"nodeType":"179","messageId":"180","endLine":21,"endColumn":26},{"ruleId":"177","severity":1,"message":"182","line":29,"column":50,"nodeType":"179","messageId":"180","endLine":29,"endColumn":54},{"ruleId":"177","severity":1,"message":"183","line":10,"column":7,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},{"ruleId":"177","severity":1,"message":"184","line":117,"column":25,"nodeType":"179","messageId":"180","endLine":117,"endColumn":36},{"ruleId":"177","severity":1,"message":"185","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":15},{"ruleId":"177","severity":1,"message":"186","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"177","severity":1,"message":"187","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":19},{"ruleId":"177","severity":1,"message":"185","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":15},{"ruleId":"177","severity":1,"message":"186","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"173","replacedBy":"188"},{"ruleId":"175","replacedBy":"189"},{"ruleId":"177","severity":1,"message":"190","line":6,"column":13,"nodeType":"179","messageId":"180","endLine":6,"endColumn":19},{"ruleId":"177","severity":1,"message":"191","line":94,"column":13,"nodeType":"179","messageId":"180","endLine":94,"endColumn":41},{"ruleId":"177","severity":1,"message":"190","line":7,"column":13,"nodeType":"179","messageId":"180","endLine":7,"endColumn":19},{"ruleId":"177","severity":1,"message":"192","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"192","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"190","line":14,"column":13,"nodeType":"179","messageId":"180","endLine":14,"endColumn":19},{"ruleId":"177","severity":1,"message":"192","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"192","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"192","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"193","line":356,"column":43,"nodeType":"179","messageId":"180","endLine":356,"endColumn":55},{"ruleId":"177","severity":1,"message":"194","line":356,"column":69,"nodeType":"179","messageId":"180","endLine":356,"endColumn":78},{"ruleId":"177","severity":1,"message":"195","line":356,"column":80,"nodeType":"179","messageId":"180","endLine":356,"endColumn":94},{"ruleId":"177","severity":1,"message":"196","line":357,"column":13,"nodeType":"179","messageId":"180","endLine":357,"endColumn":27},{"ruleId":"177","severity":1,"message":"197","line":357,"column":29,"nodeType":"179","messageId":"180","endLine":357,"endColumn":43},{"ruleId":"177","severity":1,"message":"184","line":357,"column":45,"nodeType":"179","messageId":"180","endLine":357,"endColumn":56},{"ruleId":"177","severity":1,"message":"198","line":357,"column":81,"nodeType":"179","messageId":"180","endLine":357,"endColumn":89},{"ruleId":"177","severity":1,"message":"199","line":357,"column":91,"nodeType":"179","messageId":"180","endLine":357,"endColumn":100},{"ruleId":"177","severity":1,"message":"185","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":15},{"ruleId":"177","severity":1,"message":"200","line":119,"column":13,"nodeType":"179","messageId":"180","endLine":119,"endColumn":24},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'A' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Link' is defined but never used.","'initState' is assigned a value but never used.","'orderTarget' is assigned a value but never used.","'classes' is defined but never used.","'Order' is defined but never used.","'ServiceList' is defined but never used.",["201"],["202"],"'moment' is defined but never used.","'ordMSTerassignFromOrdersList' is assigned a value but never used.","'CustomizedButtons' is defined but never used.","'reportTarget' is assigned a value but never used.","'reportNum' is assigned a value but never used.","'statusApproval' is assigned a value but never used.","'reportIRtarget' is assigned a value but never used.","'reportMRtarget' is assigned a value but never used.","'isReject' is assigned a value but never used.","'isApprove' is assigned a value but never used.","'newDocument' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]