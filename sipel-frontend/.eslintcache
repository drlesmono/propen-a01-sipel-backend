[{"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"2","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"3","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\Components\\Layout\\index.js":"4","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"5","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js":"6","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js":"7","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceList.js":"8","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js":"9","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js":"10","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetail.js":"11","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"12","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js":"13","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"14","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js":"15","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceDetail.js":"16","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js":"17"},{"size":565,"mtime":1619762565434,"results":"18","hashOfConfig":"19"},{"size":4082,"mtime":1621308170396,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1618630151447,"results":"21","hashOfConfig":"19"},{"size":186,"mtime":1619146411241,"results":"22","hashOfConfig":"19"},{"size":186,"mtime":1619146411241,"results":"23","hashOfConfig":"19"},{"size":768,"mtime":1619268259747,"results":"24","hashOfConfig":"19"},{"size":64455,"mtime":1620190325118,"results":"25","hashOfConfig":"19"},{"size":936,"mtime":1619586961764,"results":"26","hashOfConfig":"19"},{"size":1563,"mtime":1619710169528,"results":"27","hashOfConfig":"19"},{"size":1235,"mtime":1619710807549,"results":"28","hashOfConfig":"19"},{"size":5927,"mtime":1619706328060,"results":"29","hashOfConfig":"19"},{"size":141,"mtime":1619295380407,"results":"30","hashOfConfig":"19"},{"size":474,"mtime":1619268227108,"results":"31","hashOfConfig":"19"},{"size":1797,"mtime":1619271163009,"results":"32","hashOfConfig":"19"},{"size":255,"mtime":1619268019724,"results":"33","hashOfConfig":"19"},{"size":448,"mtime":1619285199524,"results":"34","hashOfConfig":"19"},{"size":10061,"mtime":1621500511007,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"10eu9m6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["76","77"],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["78","79"],"/* import React, { Component } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <InputDataOrder/>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App; */\r\n\r\n// import logo from './logo.svg';\r\nimport { useRoutes, A } from \"hookrouter\";\r\n// import routes from \"./router\";\r\nimport './App.css';\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport homepage from \"./assets/homepage.png\";\r\nimport PenjadwalanMaintenance from \"./containers/PenjadwalanMaintenance/PenjadwalanMaintenance\";\r\n\r\nconst routes = {\r\n  \"/\": () => \r\n            <div> \r\n              <div style={{ margin: 75 }}>\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      <div style={{ margin: 30 }}>\r\n                        <h3 style={{ color: '#F7873F' }}>Hello, name_here</h3>\r\n                        <h1 style={{ color: '#2F3F58' }}>Selamat Datang di Sistem Informasi Pengelolaan Layanan</h1>\r\n                      </div>\r\n                    </td>\r\n                    <td><img src={homepage} alt=\"homepage\"/></td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>,\r\n  \"/order/order\": () => <InputDataOrder/>,\r\n  \"/produksi/maintenance\": () => <PenjadwalanMaintenance />\r\n};\r\n\r\nfunction App(){\r\n\r\n  const routeResult = useRoutes(routes);\r\n\r\n    return (\r\n        <Layout>\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" id=\"navbar\">\r\n            <Navbar.Brand href=\"/\" style={{ textDecoration: 'none', color: '#F7873F' }}>SIPEL</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#dashboard\">Dashboard</Nav.Link>\r\n                <NavDropdown title=\"Order\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"/order/order\">Order</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Produksi\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Penugasan</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.1\">Progress Delivery</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.1\">Periode Kontrak</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"produksi/maintenance\">Maintenance</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Laporan\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Nav.Link href=\"#halamanAdmin\">Halaman Admin</Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href=\"#deets\">name_here</Nav.Link>\r\n                {/* <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                </Nav.Link> */}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n            { routeResult }\r\n          </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\Components\\Layout\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js",["80","81","82","83","84","85","86","87","88","89","90","91","92"],"import React from \"react\";\r\nimport ServiceList from \"../../components/Services/serviceList\";\r\nimport Order from \"../../components/Order/orderDetail\";\r\nimport ProjectInstallation from \"../../components/ProjectInstallation/piDetail\";\r\nimport ManagedService from \"../../components/ManagedService/msDetail\";\r\nimport Service from \"../../components/Services/serviceDetail\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst initState = {\r\n    noPO: \"\",\r\n    noSPH: \"\",\r\n    orderName: \"\",\r\n    description: \"\",\r\n    projectInstallation: false,\r\n    managedService: false,\r\n    startPI: \"\",\r\n    deadline: \"\",\r\n    actualStart: \"\",\r\n    actualEnd: \"\",\r\n    listService: [{ index: Math.random(), name: \"\"}],\r\n    clientName: \"\",\r\n    clientDiv: \"\",\r\n    clientPIC: \"\",\r\n    clientOrg: \"\",\r\n    clientPhone: \"\",\r\n    clientEmail: \"\",\r\n    dateOrder: \"\",\r\n    verified: false,\r\n    isLoading:false,\r\n    orderTarget: null,\r\n    isSubmit: false,\r\n    isEdit: false,\r\n    isCreate: false,\r\n    isUpload: false,\r\n}\r\n\r\nclass InputDataOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: null,\r\n            idOrderMs: null,\r\n            idOrderPi: null,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            listService: [{ index: Math.random(), name: \"\"}],\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            verified: false,\r\n            orders: [],\r\n            isLoading:false,\r\n            isCreate: false,\r\n            isEdit: false,\r\n            orderTarget: null,\r\n            isSubmit: false,\r\n            isSubmitPeriode: false,\r\n            close: false,\r\n            percentage: 0.0,\r\n            finishLoad: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            activated: false,\r\n            isAdd: false,\r\n            isShowDetail: false,\r\n            ordersMS: [],\r\n            isUpload: false,\r\n            selectedFile: null,\r\n            isEditableChild: false,\r\n            child: {\r\n                orderNameSubmit: \"\",\r\n                noPOSubmit: \"\",\r\n                noSPHSubmit: \"\",\r\n                descriptionSubmit: \"\",\r\n                isProjectInstallation: false,\r\n                isManagedService: false,\r\n                clientNameSubmit: \"\",\r\n                clientDivSubmit: \"\",\r\n                clientPICSubmit: \"\",\r\n                clientOrgSubmit: \"\",\r\n                clientPhoneSubmit: \"\",\r\n                clientEmailSubmit: \"\",\r\n                dateOrderSubmit: \"\",\r\n                startPISubmit: \"\",\r\n                deadlineSubmit: \"\",\r\n                actualStartSubmit: \"\",\r\n                actualEndSubmit: \"\",\r\n                isSubmitOrder: false,\r\n                isCreateChild: false,\r\n                isSubmitOrderMS: false,\r\n                isVerifiedSubmit: false,\r\n            },\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTambahOrder = this.handleTambahOrder.bind(this);\r\n        this.handleEditOrder = this.handleEditOrder.bind(this);\r\n        //this.handleDetailOrder = this.handleDetailOrder.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.handleReportSubmitPI = this.handleReportSubmitPI.bind(this);\r\n        this.handleAfterSubmitOrder = this.handleAfterSubmitOrder.bind(this);\r\n        this.handleSubmitTambahOrder = this.handleSubmitTambahOrder.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitTambahPI = this.handleSubmitTambahPI.bind(this);\r\n        this.handleSubmitTambahMS = this.handleSubmitTambahMS.bind(this);\r\n        this.handleSubmitTambahService = this.handleSubmitTambahService.bind(this);\r\n        this.handleSubmitEditOrder = this.handleSubmitEditOrder.bind(this);\r\n        this.handleReportSubmitMS = this.handleReportSubmitMS.bind(this);\r\n        this.handleToService = this.handleToService.bind(this);\r\n        //this.handleSubmitTambahPIMS = this.handleSubmitTambahPIMS.bind(this);\r\n        this.handleClickUnggah = this.handleClickUnggah.bind(this);\r\n        this.handleUploadDokumen = this.handleUploadDokumen.bind(this);\r\n        this.handleSubmitEditPI = this.handleSubmitEditPI.bind(this);\r\n    }\r\n  \r\n    handleChange = (e) => {\r\n        if ([\"name\"].includes(e.target.name)) {\r\n            let listService = [...this.state.listService]\r\n            listService[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n        if (e.target.checked !== \"projectInstallation\" && e.target.checked !== \"managedService\" && ![\"name\"].includes(e.target.name)) {\r\n            this.setState({ [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listService: [...prevState.listService, { index: Math.random(), name: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listService: this.state.listService.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listService: this.state.listService.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    handleTambahOrder() {\r\n        this.setState({ isCreate: true });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCreate: false, isEdit: false , isEditableChild: false, isShowDetail: false, ...initState });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    /* handleAfterLoad() {\r\n        this.setState({ child: {idOrder: this.state.orders[this.state.orders.length - 1].idOrder}});\r\n        console.log(this.state.child.idOrder);\r\n    } */\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/orderList\");\r\n            const listOrderMS  = await APIConfig.get(\"/orderMS\");\r\n            this.setState({ orders: listOrder.data });\r\n            this.setState({ ordersMS: listOrderMS.data });\r\n            //console.log(this.state.ordersMS);\r\n            //this.handleAfterLoad();\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        //this.setState({ finishLoad: true });\r\n    }\r\n\r\n    async handleSubmitTambahOrder(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n            }\r\n            await APIConfig.post(\"/order/tambah\", data);\r\n            this.handleAfterSubmitOrder(event);\r\n            this.loadData();\r\n        } catch (error) {\r\n            alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n        //this.handleAfterSubmitOrder(event);\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    async handleSubmitEditOrder(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data);\r\n            this.loadData();\r\n            this.setState({ isEditableChild: true });\r\n        } catch (error) {\r\n            alert(\"Order Gagal Diperbarui. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n        this.handleAfterSubmitOrder(event);\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    handleAfterSubmitOrder(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            child: {\r\n                isProjectInstallation: this.state.projectInstallation,\r\n                isManagedService: this.state.managedService,\r\n                isSubmitOrder: true,\r\n                orderNameSubmit: this.state.orderName,\r\n                noPOSubmit:this.state.noPO,\r\n                noSPHSubmit: this.state.noSPH,\r\n                descriptionSubmit: this.state.description,\r\n                clientNameSubmit: this.state.clientName,\r\n                clientDivSubmit: this.state.clientDiv,\r\n                clientPICSubmit: this.state.clientPIC,\r\n                clientOrgSubmit: this.state.clientOrg,\r\n                clientPhoneSubmit: this.state.clientPhone,\r\n                clientEmailSubmit: this.state.clientEmail,\r\n                dateOrderSubmit: this.state.dateOrder,\r\n                isCreateChild: true,\r\n            }\r\n        });\r\n        //this.handleCancel(event);\r\n    }\r\n\r\n    async handleSubmitTambahPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            console.log(this.state.idOrder);\r\n            await APIConfig.post(`/order/tambah/PI/${this.state.idOrder}`, data);\r\n            this.loadData();\r\n            this.handleReportSubmitPI(event);\r\n            console.log(event);\r\n        } catch (error) {\r\n            alert(\"Data Project Installation gagal disimpan! Masukkan kembali tanggal mulai dan selesai project!\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    async handleSubmitEditPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                startPI: this.state.child.startPISubmit,\r\n                deadline: this.state.child.deadlineSubmit,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            console.log(this.state.idOrder);\r\n            await APIConfig.post(`/order/ubah/PI/${this.state.idOrderPi}`, data);\r\n            this.loadData();\r\n            this.handleReportSubmitPI(event);\r\n            console.log(event);\r\n        } catch (error) {\r\n            alert(\"Data Project Installation gagal disimpan! Masukkan kembali tanggal mulai dan selesai project!\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    async handleSubmitTambahMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            };\r\n            await APIConfig.post(`/order/tambah/MS/${this.state.idOrder}`, data);\r\n            this.loadData();\r\n            this.handleToService(event);\r\n        } catch (error) {\r\n            alert(\"Data Managed Service gagal disimpan! Masukkan kembali tanggal periode kontrak!\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    /* async handleEditTambahMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            };\r\n            await APIConfig.post(`/order/ubah/MS/${this.state.idOrder}`, data);\r\n            this.loadData();\r\n            this.handleToService(event);\r\n        } catch (error) {\r\n            alert(\"Data Managed Service gagal disimpan! Masukkan kembali tanggal periode kontrak!\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    } */\r\n\r\n    /* async handleSubmitTambahPIMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const dat = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            await APIConfig.post(`/order/tambah/PI/${this.state.idOrder}`, data);\r\n            this.loadData();\r\n            const data = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            };\r\n            await APIConfig.post(`/order/tambah/MS/${this.state.idOrder}`, data);\r\n            this.loadData();\r\n            this.handleToService(event);\r\n        } catch (error) {\r\n            alert(\"Data Project Installation dan Managed Service gagal disimpan! Masukkan kembali tanggal instalasi dan periode kontrak!\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    } */\r\n\r\n    handleToService(event){\r\n        event.preventDefault();\r\n        this.setState({ child: {isSubmitOrderMS: true}});\r\n    }\r\n\r\n    async handleSubmitTambahService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listService.length;i++) {\r\n                const data = {\r\n                    name: this.state.listService[i].name,\r\n                };\r\n                console.log(this.state.listService[i].name);\r\n                await APIConfig.post(`/order/tambah/MS/${this.state.idOrderMs}/Service`, data);\r\n                this.loadData();\r\n            }\r\n            this.handleReportSubmitMS(event);\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    /* async handleSubmitEditService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listService.length;i++) {\r\n                const data = {\r\n                    name: this.state.listService[i].name,\r\n                };\r\n                console.log(this.state.listService[i].name);\r\n                await APIConfig.post(`/order/tambah/MS/${this.state.idOrderMs}/Service`, data);\r\n                this.loadData();\r\n            }\r\n            this.handleReportSubmitMS(event);\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    } */\r\n\r\n    async handleUploadDokumen(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const formData = {\r\n                file: this.state.selectedFile,\r\n            };\r\n            await APIConfig.post(`order/${this.state.idOrder}/upload`, formData);\r\n            this.loadData();\r\n            this.setState({ isUpload: false });\r\n            alert(\"File Uploaded Successfully\");\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleReportSubmitPI(event) {\r\n        event.preventDefault();\r\n        alert(\"Data Order PI berhasil ditambahkan!\")\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    handleReportSubmitMS(event) {\r\n        event.preventDefault();\r\n        alert(\"Data Order dan Service berhasil ditambahkan!\")\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    checkTypeOrder(pi, ms){\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif){\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    /* getIdOrder(){\r\n        let newListOrder = this.state.orders;\r\n        newListOrder = this.state.orders[this.state.orders.length - 1].idOrder;\r\n        console.log(newListOrder);\r\n        return newListOrder;\r\n    } */\r\n\r\n    handleFilter(event) {\r\n        let newOrderList = this.state.orders;\r\n        const { value } = event.target;\r\n        if(value !== \"\") {\r\n            newOrderList = this.state.orders.filter(order => {\r\n                return order.orderName.toLowerCase().includes(value.toLowerCase())\r\n            });\r\n            this.setState({ isFiltered: true });\r\n        } else {\r\n            this.setState({ isFiltered: false });\r\n        }\r\n        this.setState({ orderFiltered: newOrderList });\r\n    }\r\n\r\n    handleEditOrder(order) {\r\n        this.setState({\r\n            isEdit: true,\r\n            //isEditableChild: true,\r\n            idOrder: order.idOrder,\r\n            noPO: order.noPO,\r\n            noSPH: order.noSPH,\r\n            orderName: order.orderName,\r\n            description: order.description,\r\n            clientName: order.clientName,\r\n            clientDiv: order.clientDiv,\r\n            clientOrg: order.clientOrg,\r\n            clientPIC: order.clientPIC,\r\n            clientPhone: order.clientPhone,\r\n            clientEmail: order.clientEmail,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            dateOrder: order.dateOrder,\r\n        })\r\n        if (order.projectInstallation) {\r\n            this.setState({\r\n                idOrderPi: order.idOrderPi.idOrderPi,\r\n                child: {\r\n                    startPISubmit: order.idOrderPi.startPI,\r\n                    deadlineSubmit: order.idOrderPi.deadline,\r\n                }\r\n            });\r\n        }\r\n        if (order.managedService) {\r\n            this.setState({\r\n                idOrderMs: order.idOrderMs.idOrderMs,\r\n                child: {\r\n                    actualStartSubmit: order.idOrderMs.actualStart,\r\n                    actualEndSubmit: order.idOrderMs.actualEnd,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /* handleEditPI(pi) {\r\n        this.setState({\r\n            isEditableChild: true,\r\n            idOrder: pi.idOrderPi,\r\n            startPI:pi.startPI,\r\n            deadline: pi.deadline,\r\n            percentage: pi.percentage,\r\n            close: pi.close,\r\n        })\r\n    }\r\n\r\n    handleEditMS(ms) {\r\n        this.setState({\r\n            isEditableChild: true,\r\n            idOrder: ms.idOrderPi,\r\n            actualStart: ms.actualStart,\r\n            actualEnd: ms.actualEnd,\r\n            activated: ms.activated,\r\n        })\r\n    }\r\n */\r\n\r\n    async lookUpDetail(order) {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${order.idOrder}`);\r\n            this.setState({ orderTarget: orderItem.data });\r\n            //console.log(this.state.orderTarget);\r\n            //this.setState({ isShowDetail: true });\r\n            this.handleDetail(this.state.orderTarget);\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleDetail(orderTarget) {\r\n        console.log(this.state.orderTarget);\r\n        let order = this.state.orderTarget;\r\n        console.log(order);\r\n        this.setState({ \r\n            isShowDetail: true,\r\n            idOrder: order.idOrder,\r\n            noPO: order.noPO,\r\n            noSPH: order.noSPH,\r\n            orderName: order.orderName,\r\n            description: order.description,\r\n            clientName: order.clientName,\r\n            clientDiv: order.clientDiv,\r\n            clientOrg: order.clientOrg,\r\n            clientPIC: order.clientPIC,\r\n            clientPhone: order.clientPhone,\r\n            clientEmail: order.clientEmail,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            dateOrder: order.dateOrder,\r\n        });\r\n        if (order.projectInstallation) {\r\n            this.setState({\r\n                idOrderPi: order.idOrderPi.idOrderPi,\r\n                startPI: order.idOrderPi.startPI,\r\n                deadline: order.idOrderPi.deadline,\r\n                percentage: order.idOrderPi.percentage,\r\n                close: order.idOrderPi.close,\r\n            })\r\n        }\r\n        if (order.managedService) {\r\n            this.setState({\r\n                idOrderMs: order.idOrderMs.idOrderMs,\r\n                actualStart: order.idOrderMs.actualStart,\r\n                actualEnd: order.idOrderMs.actualEnd\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClickUnggah(order) {\r\n        this.setState({ \r\n            isUpload: true,\r\n            idOrder: order.idOrder });\r\n    }\r\n\r\n    onFileChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ selectedFile: e.target.files[0]});\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            idOrder,\r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            startPI,\r\n            deadline,\r\n            actualStart,\r\n            actualEnd,\r\n            listServices,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            verified,\r\n            orders,\r\n            orderFiltered,\r\n            ordersMS,\r\n            orderTarget,\r\n            isFiltered,\r\n            child: {\r\n                startPISubmit,\r\n                deadlineSubmit,\r\n                actualStartSubmit,\r\n                actualEndSubmit,\r\n            }\r\n        } = this.state;\r\n\r\n        let { listService } = this.state;\r\n        const tableHeaders = [\r\n            'No',\r\n            'Id Order', \r\n            'Nomor PO', \r\n            'Nama Order', \r\n            'Nama Pelanggan', \r\n            'Perusahaan Pelanggan',\r\n            'Jenis', \r\n            'Status', \r\n            'Ubah Order',\r\n            'Lihat Detail',\r\n            'Unggah Dokumen',\r\n        ];\r\n        \r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.idOrder, order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <CustomizedButtons \r\n                            variant=\"contained\" \r\n                            size=\"small\" \r\n                            color=\"#FD693E\" \r\n                            onClick={() => this.handleEditOrder(order)}>Ubah</CustomizedButtons>, \r\n                        <CustomizedButtons \r\n                            variant=\"contained\" \r\n                            size=\"small\" \r\n                            color=\"#FD693E\"\r\n                            onClick={() => this.lookUpDetail(order)}>Lihat</CustomizedButtons>,\r\n                        <CustomizedButtons \r\n                            variant=\"contained\" \r\n                            size=\"small\" \r\n                            color=\"#FD693E\" \r\n                            onClick={() => this.handleClickUnggah(order)}>Unggah</CustomizedButtons>])\r\n                        : orders.map((order) => [order.idOrder, order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                            this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                            this.checkStatusOrder(order.verified),\r\n                            <CustomizedButtons \r\n                                variant=\"contained\" \r\n                                size=\"small\" \r\n                                color=\"#FD693E\" \r\n                                onClick={() => this.handleEditOrder(order)}>Ubah</CustomizedButtons>,\r\n                            <CustomizedButtons \r\n                                variant=\"contained\" \r\n                                size=\"small\" \r\n                                color=\"#FD693E\"\r\n                                onClick={() => this.lookUpDetail(order)}>Lihat</CustomizedButtons>,\r\n                            <CustomizedButtons \r\n                                variant=\"contained\" \r\n                                size=\"small\" \r\n                                color=\"#FD693E\" \r\n                                onClick={() => this.handleClickUnggah(order)}>Unggah</CustomizedButtons>]);\r\n\r\n        return (\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <br></br>\r\n            <CustomizedButtons\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"#FD693E\"\r\n                onClick={this.handleTambahOrder}>Tambah Order</CustomizedButtons>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={this.state.isCreate || this.state.isEdit} handleCloseModal={this.handleCancel}>\r\n            <NotificationContainer />\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                {this.state.isCreate ? \"Tambah Order\" : `Ubah Data Order ${this.state.child.orderNameSubmit}`}\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>No.Telp Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan No.Telp\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan No.SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\">Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <label className=\"required\">Jenis Order</label>\r\n                                            <div className=\"form-check\">\r\n                                                {this.state.isCreate ? \r\n                                                <input\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                : <input disabled\r\n                                                type=\"checkbox\" \r\n                                                name=\"projectInstallation\" \r\n                                                id=\"projectInstallation\" \r\n                                                className=\"form-check-input\" \r\n                                                value={projectInstallation}\r\n                                                checked={projectInstallation} \r\n                                                onChange={(e) => this.setState(prevState => ({\r\n                                                    projectInstallation: !prevState.projectInstallation\r\n                                                }))} />}\r\n                                                <label className=\"form-check-label\">Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                {this.state.isCreate ? \r\n                                                <input \r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                : <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> }\r\n                                                <label className=\"form-check-label\">Managed Services</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Masuk Order</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.state.isCreate ? this.handleSubmitTambahOrder : this.handleSubmitEditOrder}>\r\n                                        Simpan Order\r\n                                    </CustomizedButtons>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        \r\n           <Modal show={this.state.child.isProjectInstallation && !this.state.child.isManagedService && this.state.child.isSubmitOrder} handleCloseModal={this.handleCancel}>\r\n                    <NotificationContainer />\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                    {this.state.child.isCreateChild ? \"Tambah Data PI\" : `Ubah Data Order PI ${this.state.child.orderNameSubmit}`}\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\">ID Order</label>\r\n                                            {this.state.child.isCreateChild ? \r\n                                            <Form.Control as=\"select\" size=\"md\" name=\"idOrder\" id=\"idOrder\" onChange={this.handleChange}>\r\n                                                {orders.map(order => <option value={order.idOrder}>{order.idOrder}</option>)}\r\n                                            </Form.Control>\r\n                                            : <Form.Control as=\"select\" size=\"md\" name=\"idOrder\" id=\"idOrder\" onChange={this.handleChange} disabled>\r\n                                            {orders.map(order => <option value={order.idOrder}>{order.idOrder}</option>)}\r\n                                            </Form.Control>\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Mulai Project</label>\r\n                                                {this.state.child.isCreateChild ? \r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                                : <input \r\n                                                type=\"date\" \r\n                                                name=\"startPISubmit\" \r\n                                                id=\"startPISubmit\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                value={this.state.child.startPISubmit} \r\n                                                onChange={this.handleChange} />}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Selesai Project</label>\r\n                                                {this.state.child.isCreateChild ? \r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                                : <input \r\n                                                type=\"date\" \r\n                                                name=\"deadline\" \r\n                                                id=\"deadline\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                value={this.state.child.deadlineSubmit} \r\n                                                onChange={this.handleChange} />}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmitTambahPI} >\r\n                                        Simpan Data PI\r\n                                    </CustomizedButtons>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n\r\n            <Modal show={this.state.isEditableChild} handleCloseModal={this.handleCancel}>\r\n                    <NotificationContainer />\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                    Ubah Data Order PI\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\">ID Order</label>\r\n                                            <Form.Control as=\"select\" size=\"md\" name=\"idOrder\" id=\"idOrder\" onChange={this.handleChange} disabled>\r\n                                            {orders.map(order => <option value={order.idOrder}>{order.idOrder}</option>)}\r\n                                            </Form.Control>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPISubmit\" \r\n                                                    id=\"startPISubmit\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={this.state.child.startPISubmit} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\">Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={this.state.child.deadlineSubmit} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmitEditPI} >\r\n                                        Simpan Perubahan\r\n                                    </CustomizedButtons>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        \r\n            <Modal show={this.state.child.isManagedService && !this.state.child.isProjectInstallation && this.state.child.isSubmitOrder} handleCloseModal={this.handleCancel} >\r\n                <NotificationContainer />\r\n                <form onSubmit={this.handleSubmitTambahMS} onChange={this.handleChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-sm-1\"></div>\r\n                    <div className=\"col-sm-10\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header text-center\">\r\n                                {this.state.child.isCreateChild ? \"Tambah Data MS\" : `Ubah Data Nama Order MS ${this.state.child.orderNameSubmit}`}\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <label className=\"required\">ID Order</label>\r\n                                        <Form.Control as=\"select\" size=\"md\" name=\"idOrder\" id=\"idOrder\" onChange={this.handleChange}>\r\n                                            {orders.map(order => <option value={order.idOrder}>{order.idOrder}</option>)}\r\n                                        </Form.Control>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"required\">Periode Mulai Managed</label>\r\n                                            <input \r\n                                                type=\"date\" \r\n                                                name=\"actualStart\" \r\n                                                id=\"actualStart\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Masukkan Periode Mulai\" \r\n                                                value={actualStart} \r\n                                                onChange={this.handleChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"required\">Periode Selesai Managed</label>\r\n                                            <input \r\n                                                type=\"date\" \r\n                                                name=\"actualEnd\" \r\n                                                id=\"actualEnd\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Masukkan Periode Selesai\" \r\n                                                value={actualEnd} \r\n                                                onChange={this.handleChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer text-center\">\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmitTambahMS}>\r\n                                    Simpan Data MS\r\n                                </CustomizedButtons>\r\n                            </div>\r\n                        </div>                                            \r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n\r\n            <Modal show={this.state.child.isSubmitOrderMS} handleCloseModal={this.handleCancel}>\r\n               <NotificationContainer />\r\n                <form onSubmit={this.handleSubmitTambahService} onChange={this.handleChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">Tambah Services</div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\">ID Order</label>\r\n                                            <Form.Control as=\"select\" size=\"md\" name=\"idOrderMs\" id=\"idOrderMs\" onChange={this.handleChange}>\r\n                                                {ordersMS.map(orderMS => <option value={orderMS.idOrderMs}>{orderMS.idOrderMs}</option>)}\r\n                                            </Form.Control>\r\n                                        </div>\r\n                                        </div>\r\n                                        <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"required\">Nama Services</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <ServiceList add={this.addNewRow} delete={this.clickOnDelete} listService={listService} />\r\n                                        </tbody>\r\n                                        <tfoot>\r\n                                            <tr><td colSpan=\"4\">\r\n                                                <button onClick={this.addNewRow} type=\"button\" className=\"btn btn-primary text-center\">\r\n                                                    <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                                                </button>\r\n                                            </td></tr>\r\n                                        </tfoot>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-center\">\r\n                                        <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmitTambahService}>\r\n                                            Simpan Data Service\r\n                                        </CustomizedButtons>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n            {/* <Modal show={this.state.isShowDetail} handleCloseModal={this.handleCancel} >\r\n                <NotificationContainer />\r\n                    <div className=\"row\" style={{ marginTop: 5 }}>\r\n                    <div className=\"col-sm-1\"></div>\r\n                    <div className=\"col-sm-10\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header text-center\">\r\n                                Detail Order\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <Order\r\n                                    key={this.state.idOrder}\r\n                                    idOrder={this.state.idOrder}\r\n                                    noPO={this.state.noPO}\r\n                                    noSPH={this.state.noSPH}\r\n                                    orderName={this.state.orderName}\r\n                                    description={this.state.description}\r\n                                    projectInstallation={this.state.projectInstallation}\r\n                                    managedService={this.state.managedService}\r\n                                    clientName={this.state.clientName}\r\n                                    clientDiv={this.state.clientDiv}\r\n                                    clientPIC={this.state.clientPIC}\r\n                                    clientOrg={this.state.clientOrg}\r\n                                    clientPhone={this.state.clientPhone}\r\n                                    clientEmail={this.state.clientEmail}\r\n                                    dateOrder={this.state.dateOrder}\r\n                                    verified={this.state.verified}\r\n                                />\r\n                            </div> \r\n                                <div className=\"card-header text-center\">\r\n                                    Detail Project Installation\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <ProjectInstallation \r\n                                        key={this.state.idOrderPi}\r\n                                        idOrderPi={this.state.idOrderPi}\r\n                                        startPI={this.state.startPI}\r\n                                        deadline={this.state.deadline}\r\n                                        percentage={this.state.percentage}\r\n                                        close={this.state.close}\r\n                                    />\r\n                                </div>\r\n                                 <div className=\"card-header text-center\">\r\n                                    Detail Managed Service\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <ManagedService \r\n                                        key={this.state.idOrderMs}\r\n                                        idOrderMs={this.state.idOrderMs}\r\n                                        actualStart={this.state.actualStart}\r\n                                        actualEnd={this.state.actualEnd}\r\n                                    />\r\n                                </div>\r\n                            <div className=\"card-footer text-center\">\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleCancel}>\r\n                                    Kembali\r\n                                </CustomizedButtons>\r\n                            </div>\r\n                        </div>                                            \r\n                    </div>\r\n                    </div>\r\n            </Modal> */} \r\n\r\n            <Modal show={this.state.isUpload} handleCloseModal={this.handleCancel} >\r\n                <NotificationContainer />\r\n                <form onSubmit={this.handleUploadDokumen} onChange={this.handleChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                    <div className=\"col-sm-1\"></div>\r\n                    <div className=\"col-sm-10\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header text-center\">Unggah Dokumen</div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group files color\">\r\n                                                <label>Upload Your File</label>\r\n                                                <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onFileChange}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            <div className=\"card-footer text-center\">\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleUploadDokumen}>\r\n                                    Unggah\r\n                                </CustomizedButtons>\r\n                            </div>\r\n                        </div>                                            \r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n            </div>      \r\n                                \r\n        );\r\n    }\r\n}      \r\n\r\nexport default InputDataOrder;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceList.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js",["93","94"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ProjectInstallation = (props) => {\r\n    const { \r\n        idOrderPi,\r\n        startPI, \r\n        deadline,\r\n        percentage,\r\n        close } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`ID Order PI: ${idOrderPi}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Tanggal Mulai Proyek: ${startPI}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Tanggal Selesai Proyek: ${deadline}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Progres Pengerjaan: ${percentage}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Status Ditutup: ${close}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectInstallation;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\ManagedService\\msDetail.js",["95","96","97","98"],"import React from \"react\";\r\nimport ServiceList from \"../Services/serviceList\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ManagedService = (props) => {\r\n    const { \r\n        idOrderMs,\r\n        actualStart,\r\n        actualEnd,\r\n        listService } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`ID Order MS: ${idOrderMs}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Periode Mulai: ${actualStart}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Periode Selesai: ${actualEnd}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n       /*  {/* </div>\r\n        <p>{listService.map((service) => (<ServiceList name={service.name} />))}</p>\r\n        </div> */\r\n    );\r\n};\r\n\r\nexport default ManagedService;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Order\\orderDetail.js",["99","100","101","102"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CustomizedButtons from \"../Button\";\r\n\r\nconst Order = (props) => {\r\n    const { \r\n        idOrder,\r\n        noPO, \r\n        noSPH, \r\n        orderName, \r\n        description, \r\n        projectInstallation, \r\n        managedService, \r\n        clientName,\r\n        clientDiv,\r\n        clientPIC,\r\n        clientOrg,\r\n        clientPhone,\r\n        clientEmail,\r\n        dateOrder,\r\n        verified,\r\n        handleEdit,\r\n        handleDetail } = props;\r\n    return (    \r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`ID Order: ${idOrder}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Nama Pelanggan: ${clientName}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`No.Telp Pelanggan: ${clientPhone}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Nomor Order: ${noPO}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Divisi Pelanggan: ${clientDiv}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Project Installation: ${projectInstallation}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Nomor SPH: ${noSPH}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`PIC Pelanggan: ${clientPIC}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Managed Service: ${managedService}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Nama Order: ${orderName}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Perusahaan Pelanggan: ${clientOrg}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Tanggal Order Masuk: ${dateOrder}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Deskripsi Order: ${description}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Email Pelanggan: ${clientEmail}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <div className=\"form-group\">\r\n                        <p>{`Status: ${verified}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n/* class Order extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { \r\n            idOrder,\r\n            noPO, \r\n            noSPH, \r\n            orderName, \r\n            description, \r\n            isProjectInstallation, \r\n            isManagedService, \r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            handleEdit,\r\n            handleDetail } = props;\r\n            return (\r\n                <div className={classes.order}>\r\n                    <p>{`Id Order: ${idOrder}`}</p>\r\n                    <p>{`Nomor Order: ${noPO}`}</p>\r\n                    <p>{`Nomor SPH: ${noSPH}`}</p>\r\n                    <p>{`Nama Order: ${orderName}`}</p>\r\n                    <p>{`Deskripsi Order: ${description}`}</p>\r\n                    <p>{`Project Installation: ${isProjectInstallation}`}</p>\r\n                    <p>{`Managed Service: ${isManagedService}`}</p>\r\n                    <p>{`Nama Pelanggan: ${clientName}`}</p>\r\n                    <p>{`Divisi Pelanggan: ${clientDiv}`}</p>\r\n                    <p>{`PIC Pelanggan: ${clientPIC}`}</p>\r\n                    <p>{`Perusahaan Pelanggan: ${clientOrg}`}</p>\r\n                    <p>{`Nomor Telepon Pelanggan: ${clientPhone}`}</p>\r\n                    <p>{`Email Pelanggan: ${clientEmail}`}</p>\r\n                    <p>{`Tanggal Order Masuk: ${dateOrder}`}</p>\r\n                    <CustomizedButtons onClick={handleEdit} variant=\"primary\">\r\n                        Ubah\r\n                    </CustomizedButtons>\r\n                    <CustomizedButtons onClick={handleDetail} variant=\"primary\">\r\n                        Lihat\r\n                    </CustomizedButtons>\r\n                </div>\r\n            );\r\n        };\r\n    }\r\n} */\r\n\r\nexport default Order;","E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\components\\Services\\serviceDetail.js",[],"E:\\Semester 6\\Implementasi Propensi\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js",["103","104","105","106","107","108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":18,"column":21,"nodeType":"116","messageId":"117","endLine":18,"endColumn":22},{"ruleId":"114","severity":1,"message":"118","line":21,"column":17,"nodeType":"116","messageId":"117","endLine":21,"endColumn":26},{"ruleId":"114","severity":1,"message":"119","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":13},{"ruleId":"114","severity":1,"message":"120","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":27},{"ruleId":"114","severity":1,"message":"121","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":22},{"ruleId":"114","severity":1,"message":"122","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":8,"column":33,"nodeType":"116","messageId":"117","endLine":8,"endColumn":52},{"ruleId":"114","severity":1,"message":"124","line":618,"column":13,"nodeType":"116","messageId":"117","endLine":618,"endColumn":20},{"ruleId":"114","severity":1,"message":"125","line":629,"column":13,"nodeType":"116","messageId":"117","endLine":629,"endColumn":25},{"ruleId":"114","severity":1,"message":"126","line":637,"column":13,"nodeType":"116","messageId":"117","endLine":637,"endColumn":21},{"ruleId":"114","severity":1,"message":"127","line":641,"column":13,"nodeType":"116","messageId":"117","endLine":641,"endColumn":24},{"ruleId":"114","severity":1,"message":"128","line":644,"column":17,"nodeType":"116","messageId":"117","endLine":644,"endColumn":30},{"ruleId":"114","severity":1,"message":"129","line":645,"column":17,"nodeType":"116","messageId":"117","endLine":645,"endColumn":31},{"ruleId":"114","severity":1,"message":"130","line":646,"column":17,"nodeType":"116","messageId":"117","endLine":646,"endColumn":34},{"ruleId":"114","severity":1,"message":"131","line":647,"column":17,"nodeType":"116","messageId":"117","endLine":647,"endColumn":32},{"ruleId":"114","severity":1,"message":"132","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":13},{"ruleId":"114","severity":1,"message":"133","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"132","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"134","line":11,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":20},{"ruleId":"114","severity":1,"message":"132","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":15},{"ruleId":"114","severity":1,"message":"135","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":25},{"ruleId":"114","severity":1,"message":"136","line":22,"column":9,"nodeType":"116","messageId":"117","endLine":22,"endColumn":19},{"ruleId":"114","severity":1,"message":"137","line":23,"column":9,"nodeType":"116","messageId":"117","endLine":23,"endColumn":21},{"ruleId":"114","severity":1,"message":"138","line":107,"column":13,"nodeType":"116","messageId":"117","endLine":107,"endColumn":19},{"ruleId":"114","severity":1,"message":"139","line":108,"column":13,"nodeType":"116","messageId":"117","endLine":108,"endColumn":21},{"ruleId":"114","severity":1,"message":"140","line":109,"column":13,"nodeType":"116","messageId":"117","endLine":109,"endColumn":19},{"ruleId":"114","severity":1,"message":"141","line":110,"column":13,"nodeType":"116","messageId":"117","endLine":110,"endColumn":23},{"ruleId":"114","severity":1,"message":"142","line":111,"column":13,"nodeType":"116","messageId":"117","endLine":111,"endColumn":26},{"ruleId":"114","severity":1,"message":"143","line":113,"column":13,"nodeType":"116","messageId":"117","endLine":113,"endColumn":28},{"ruleId":"114","severity":1,"message":"144","line":116,"column":14,"nodeType":"116","messageId":"117","endLine":116,"endColumn":29},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'A' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Order' is defined but never used.","'ProjectInstallation' is defined but never used.","'ManagedService' is defined but never used.","'Service' is defined but never used.","'NotificationManager' is defined but never used.","'idOrder' is assigned a value but never used.","'listServices' is assigned a value but never used.","'verified' is assigned a value but never used.","'orderTarget' is assigned a value but never used.","'startPISubmit' is assigned a value but never used.","'deadlineSubmit' is assigned a value but never used.","'actualStartSubmit' is assigned a value but never used.","'actualEndSubmit' is assigned a value but never used.","'classes' is defined but never used.","'ServiceList' is defined but never used.","'listService' is assigned a value but never used.","'CustomizedButtons' is defined but never used.","'handleEdit' is assigned a value but never used.","'handleDetail' is assigned a value but never used.","'datemn' is assigned a value but never used.","'ordersMS' is assigned a value but never used.","'orders' is assigned a value but never used.","'isFiltered' is assigned a value but never used.","'orderFiltered' is assigned a value but never used.","'ordersTerassign' is assigned a value but never used.","'listMaintenance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]