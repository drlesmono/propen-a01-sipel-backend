[{"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"3","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"4","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"5","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"6","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js":"7","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"8","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js":"9","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js":"10","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"11","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Login\\index.js":"12","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\Homepage\\index.js":"13"},{"size":544,"mtime":1619591270619,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":3735,"mtime":1620199433169,"results":"17","hashOfConfig":"15"},{"size":225,"mtime":1620187315518,"results":"18","hashOfConfig":"15"},{"size":19481,"mtime":1621193227706,"results":"19","hashOfConfig":"15"},{"size":143,"mtime":1618932282107,"results":"20","hashOfConfig":"15"},{"size":802,"mtime":1619176967606,"results":"21","hashOfConfig":"15"},{"size":2994,"mtime":1619024890744,"results":"22","hashOfConfig":"15"},{"size":478,"mtime":1619532665996,"results":"23","hashOfConfig":"15"},{"size":259,"mtime":1618994525865,"results":"24","hashOfConfig":"15"},{"size":29502,"mtime":1621247473680,"results":"25","hashOfConfig":"15"},{"size":847,"mtime":1619584073795,"results":"26","hashOfConfig":"15"},{"size":4619,"mtime":1619585963576,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qicre3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["58","59"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["60"],"// import logo from './logo.svg';\r\nimport { useRoutes, A } from \"hookrouter\";\r\n// import routes from \"./router\";\r\nimport './App.css';\r\nimport Layout from \"./components/Layout\";\r\nimport PenugasanEngineer from \"./containers/PenugasanEngineer\";\r\nimport PeriodeKontrak from \"./containers/PeriodeKontrak\";\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport homepage from \"./assets/homepage.png\";\r\n\r\nconst routes = {\r\n  \"/\": () => \r\n            <div> \r\n              <div style={{ margin: 75 }}>\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      <div style={{ margin: 30 }}>\r\n                        <h3 style={{ color: '#F7873F' }}>Hello, name_here</h3>\r\n                        <h1 style={{ color: '#2F3F58' }}>Selamat Datang di Sistem Informasi Pengelolaan Layanan</h1>\r\n                      </div>\r\n                    </td>\r\n                    <td><img src={homepage} alt=\"homepage\"/></td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>,\r\n  \"/produksi/penugasan\": () => <PenugasanEngineer />,\r\n  \"/produksi/periodeKontrak\": () => <PeriodeKontrak />\r\n};\r\n\r\nfunction App(){\r\n\r\n  const routeResult = useRoutes(routes);\r\n\r\n    return (\r\n        <>\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" id=\"navbar\">\r\n            <Navbar.Brand href=\"/\" style={{ textDecoration: 'none', color: '#F7873F' }}>SIPEL</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#dashboard\">Dashboard</Nav.Link>\r\n                <NavDropdown title=\"Order\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Produksi\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"/produksi/penugasan\">Penugasan</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#produksi/progress-delivery\">Progress Delivery</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/produksi/periodeKontrak\">Periode Kontrak</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#produksi/maintenance\">Maintenance</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Laporan\"  id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Nav.Link href=\"#halamanAdmin\">Halaman Admin</Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href=\"#deets\">name_here</Nav.Link>\r\n                {/* <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                </Nav.Link> */}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Layout>\r\n            { routeResult }\r\n          </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",["61"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\n// import Modal from \"../../components/Modal\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\n\r\nclass PenugasanEngineer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            orderTarget: null,\r\n            users: [],\r\n            picEngineerPi: null,\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            isReport: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            isFailed: false\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReport = this.handleReport.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerified\");\r\n            const users = await APIConfig.get(\"/users\");\r\n            // console.log(orders.data);\r\n            // console.log(users.data);\r\n            this.setState({ ordersVerified: orders.data, users: users.data});\r\n            \r\n        } catch (error) {\r\n            // alert(\"Oops terjadi masalah pada server\");\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if(this.state.orderTarget.projectInstallation === true){\r\n                const pi = this.state.orderTarget.idOrderPi;\r\n                const dataPi = {\r\n                    idOrderPi: pi.idOrderPi,\r\n                    idUserEng: this.state.picEngineerPi,\r\n                    percentage: pi.percentage,\r\n                    startPI: pi.startPI,\r\n                    deadline: pi.deadline,\r\n                    dateClosedPI: pi.dateClosedPI\r\n                }\r\n                await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/pi/${this.state.orderTarget.idOrderPi.idOrderPi}/updatePIC`, dataPi);\r\n            }\r\n            if(this.state.orderTarget.managedService === true){\r\n                const ms = this.state.orderTarget.idOrderMs;\r\n                const dataMs = {\r\n                    idOrderMs: ms.idOrderMs,\r\n                    idUserPic: this.state.picEngineerMs,\r\n                    actualStart: ms.actualStart,\r\n                    actualEnd: ms.actualEnd,\r\n                    activated: ms.activated,\r\n                    timeRemaining: ms.timeRemaining,\r\n                    dateClosedMS: ms.dateClosedMS\r\n                }\r\n                await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${this.state.orderTarget.idOrderMs.idOrderMs}/updatePIC`, dataMs);\r\n                let listService = this.getListService(this.state.orderTarget);\r\n                console.log(this.state.servicesEngineer);\r\n                for(let i=0; i<this.state.servicesEngineer.length; i++){\r\n                    console.log(i);\r\n                    let service = listService[i];\r\n                    console.log(service);\r\n                    const dataService = {\r\n                        idService: service.idService,\r\n                        name: service.name,\r\n                        idUser: this.state.servicesEngineer[i]\r\n                    }\r\n                    await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${this.state.orderTarget.idOrderMs.idOrderMs}/service/${service.idService}/updateService`, dataService);\r\n                }\r\n            }\r\n            this.loadData();\r\n        } catch (error) {\r\n            // alert(\"Penugasan Engineer gagal disimpan\");\r\n            console.log(error);\r\n            return this.setState({isFailed: true});\r\n        }\r\n        // this.handleReport(event);\r\n        this.setState({isSuccess: true, isEdit: false});\r\n    }\r\n\r\n    handleReport(event){\r\n        event.preventDefault();\r\n        this.setState({isSuccess: false, isReport: true});\r\n        // alert(\"Penugasan Engineer berhasil disimpan\");\r\n    }\r\n\r\n    checkTypeOrder(pi, ms){\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    getPICPI(idOrder){\r\n        let orderTarget = this.state.ordersVerified.filter(\r\n            order => order.idOrder === idOrder\r\n        );\r\n        let pi = orderTarget.map(order => {return order.idOrderPi});\r\n    \r\n        if(orderTarget !== null && pi[0] !== null){\r\n            let user = orderTarget.map(order => order.idOrderPi.idUserEng);\r\n            if(user !== null){\r\n                let pic = orderTarget.map(order => order.idOrderPi.idUserEng.fullname);\r\n                return pic;\r\n            }\r\n        }\r\n\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    getPICMS(idOrder){\r\n        let orderTarget = this.state.ordersVerified.filter(\r\n            order => order.idOrder === idOrder\r\n        );\r\n        let ms = orderTarget.map(order => {return order.idOrderMs});\r\n    \r\n        if(orderTarget !== null && ms[0] !== null){\r\n            let user = orderTarget.map(order => order.idOrderMs.idUserPic);\r\n            if(user !== null){\r\n                let pic = orderTarget.map(order => order.idOrderMs.idUserPic.fullname);\r\n                return pic;\r\n            }\r\n        }\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    getPICService(service){\r\n        if(service.idUser !== null) return service.idUser.fullname;\r\n        return \"Belum ditugaskan\";\r\n    }\r\n    \r\n    handleEdit(order) {\r\n        this.setState({\r\n            isEdit: true,\r\n            orderTarget: order\r\n        });\r\n        if(order.idOrderPi !== null){\r\n            if(order.idOrderPi.idUserEng !== null){\r\n                this.setState({picEngineerPi: order.idOrderPi.idUserEng.id});\r\n            }\r\n        }\r\n        if(order.idOrderMs !== null){\r\n            if(order.idOrderMs.idUserPic !== null){\r\n                let servicesEngineer = order.idOrderMs.listService.map(service => service.idUser.id);\r\n                this.setState({\r\n                    picEngineerMs: order.idOrderMs.idUserPic.id, \r\n                    servicesEngineer: servicesEngineer\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isError: false, \r\n            isSuccess: false,\r\n            isFailed: false\r\n        });\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name, value);\r\n        const servicesEngineerNew = this.state.servicesEngineer;\r\n        if( name.substring(0,16) === \"servicesEngineer\"){\r\n            let index = Number(name.substring(16));\r\n            servicesEngineerNew[index] = value;\r\n            this.setState({ servicesEngineer: servicesEngineerNew});\r\n        }else{\r\n            this.setState({ [name]: value});\r\n        }\r\n    }\r\n\r\n    getListService(order){\r\n        if(order.idOrderMs !== null){\r\n            return order.idOrderMs.listService;\r\n        }\r\n    }\r\n\r\n    getOrder(idOrder){\r\n        const orders = this.state.ordersVerified;\r\n        for(let i=0; i<=orders.length; i++){\r\n            if(orders[i].idOrder === idOrder){\r\n                return orders[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrderList = this.state.ordersVerified.filter(order => {\r\n                return order.orderName.toLowerCase().includes(value.toLowerCase())\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false });\r\n    }\r\n\r\n    render() {\r\n        const { ordersVerified, isEdit, orderTarget, users, picEngineerPi, isFailed,\r\n             picEngineerMs, servicesEngineer, isReport, isError, isSuccess, orderFiltered, isFiltered } = this.state;\r\n        console.log(orderTarget);\r\n        console.log(picEngineerPi);\r\n        console.log(servicesEngineer);\r\n        const tableHeaders = ['No.', 'Id Order', 'Nomor PO', 'Nama Order', 'Tipe', 'PIC PI', 'PIC MS', 'Aksi'];                  \r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.getPICPI(order.idOrder), this.getPICMS(order.idOrder),\r\n                        <div className=\"d-flex justify-content-center\"><Button className={classes.button1}\r\n                        onClick={() => this.handleEdit(order)}>perbarui</Button></div>])\r\n                        : ordersVerified.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.getPICPI(order.idOrder), this.getPICMS(order.idOrder),\r\n                        <div className=\"d-flex justify-content-center\"><Button className={classes.button1}\r\n                        onClick={() => this.handleEdit(order)}>perbarui</Button></div>])\r\n        const tableServiceHeaders = ['No.', 'Nama Service', 'Engineer'];\r\n        let tableServiceRows;\r\n\r\n        if(orderTarget !== null){\r\n            if(orderTarget.idOrderPi !== null){\r\n            }\r\n            if(orderTarget.idOrderMs !== null){\r\n                tableServiceRows = orderTarget.idOrderMs.listService.map((service, index) =>\r\n                                        [service.name, isReport ? this.getPICService(service) :\r\n                                        <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                                        value={servicesEngineer[index] === null ? users[0].id : servicesEngineer[index]}\r\n                                        onChange={this.handleChangeField}>\r\n                                            {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                        </Form.Control>]);\r\n            }\r\n        }\r\n\r\n        const title = isReport? \"Penugasan Engineer\" : \"Form Penugasan Engineer\";\r\n\r\n        return (\r\n            <div style={{justifyContent: \"space-around\"}}>\r\n                <div><h1 className=\"text-center\">Daftar Order</h1></div>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} className={classes.search}/></div>\r\n                <div><CustomizedTables headers={tableHeaders} rows={tableRows}/></div>\r\n                <Modal\r\n                    show={isEdit || isReport}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {title}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                        <Modal.Body>\r\n                               { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        <div>Penugasan Engineer Gagal disimpan</div>\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                               : <></> }\r\n                            <p>\r\n                                {orderTarget !== null ?\r\n                                <><Form>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>Id Order</td>\r\n                                            <td>: {orderTarget.idOrder}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nomor PO</td>\r\n                                            <td>: {orderTarget.noPO === null? \"-\" : orderTarget.noPO}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nama Order</td>\r\n                                            <td>: {orderTarget.orderName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Perusahaan</td>\r\n                                            <td>: {orderTarget.clientOrg}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Tipe</td>\r\n                                            <td>: {this.checkTypeOrder(orderTarget.projectInstallation, orderTarget.managedService)}</td>\r\n                                        </tr>\r\n                                        { orderTarget.projectInstallation ?\r\n                                            <><tr>\r\n                                                <td style={{fontWeight: 'bold'}}>Project Installation</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>PIC Engineer</td>\r\n                                                {/* {console.log(picEngineerPi.id === null), console.log(users[0].id), console.log(picEngineerPi), console.log(users[0].id === picEngineerPi)} */}\r\n                                                {isReport ?\r\n                                                <td>: {this.getPICPI(orderTarget.idOrder)}</td> :\r\n                                                <td><Form.Control as=\"select\" size=\"sm\" name=\"picEngineerPi\" value={picEngineerPi === null ? users[0].id : picEngineerPi} onChange={this.handleChangeField}>\r\n                                                        {users.map((user, index) => <option key={index} value={user.id}>{user.fullname}</option>)}\r\n                                                    </Form.Control></td>}\r\n                                            </tr></>\r\n                                        : <></>}\r\n                                        { orderTarget.managedService ?\r\n                                        <><tr>\r\n                                            <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Services</td>\r\n                                            <td>\r\n                                                <><CustomizedTables headers={tableServiceHeaders} rows={tableServiceRows}></CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>PIC Engineer</td>\r\n                                            {isReport ?\r\n                                                <td>: {this.getPICMS(orderTarget.idOrder)}</td> :\r\n                                            <td><Form.Control as=\"select\" size=\"sm\" name=\"picEngineerMs\" value={picEngineerMs === null ? users[0].id : picEngineerMs} onChange={this.handleChangeField}>\r\n                                                    {/* {listServiceEngineerNew.map(user =><option value={user[1]}>{user[2]}</option>)} */}\r\n                                                    {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                                </Form.Control></td>}\r\n                                        </tr></>\r\n                                        : <></>}\r\n                                    </table>\r\n                                    {isReport ? <></> :\r\n                                    <><br/><div className=\"d-flex justify-content-end\" style={{ marginRight: 35 }}><Button variant=\"primary\" className={classes.button1} onClick={this.handleSubmit}>\r\n                                        simpan\r\n                                    </Button></div></>}\r\n                                </Form></>\r\n                                : <></> }\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    show={isSuccess || isError}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {isSuccess?\r\n                        <>\r\n                            <div className=\"d-flex justify-content-center\">Penugasan Engineer berhasil disimpan.</div><br></br>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" className={classes.button1} onClick={this.handleReport}>\r\n                                    Kembali\r\n                                </Button>\r\n                            </div>\r\n                        </> :\r\n                        <>\r\n                        <div className=\"d-flex justify-content-center\">Oops terjadi masalah pada server</div><br></br>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleCancel}>\r\n                                Kembali\r\n                            </Button>\r\n                        </div>\r\n                        </>}\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PenugasanEngineer;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js",[],["62","63"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",["64","65"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Login\\index.js",["66"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\Homepage\\index.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":21,"nodeType":"74","messageId":"75","endLine":2,"endColumn":22},{"ruleId":"72","severity":1,"message":"76","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":25},{"ruleId":"68","replacedBy":"77"},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","severity":1,"message":"79","line":158,"column":31,"nodeType":"74","messageId":"75","endLine":158,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":521,"column":75,"nodeType":"82","messageId":"83","endLine":521,"endColumn":86},{"ruleId":"72","severity":1,"message":"84","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"85","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":15},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'A' is defined but never used.","Identifier","unusedVar","'CustomizedButtons' is defined but never used.",["86"],["87"],"'newMs' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Component' is defined but never used.","'classes' is defined but never used.","no-global-assign","no-unsafe-negation"]