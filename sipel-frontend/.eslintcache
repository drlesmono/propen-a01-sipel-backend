[{"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"2","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"3","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"4","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"5","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"6","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"7","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js":"8","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js":"9","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js":"10","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx":"11","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\services\\InstallationProjectService.js":"12","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Header\\HeaderComponent.jsx":"13","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Footer\\FooterComponent.jsx":"14","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\LandingPage.js":"15","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx":"16","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx":"17","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx":"18","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx":"19"},{"size":565,"mtime":1619467299628,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1619388738260,"results":"22","hashOfConfig":"21"},{"size":1793,"mtime":1619611279982,"results":"23","hashOfConfig":"21"},{"size":178,"mtime":1619388738244,"results":"24","hashOfConfig":"21"},{"size":19389,"mtime":1619463609843,"results":"25","hashOfConfig":"21"},{"size":143,"mtime":1619388738229,"results":"26","hashOfConfig":"21"},{"size":2994,"mtime":1619388738244,"results":"27","hashOfConfig":"21"},{"size":802,"mtime":1619388738244,"results":"28","hashOfConfig":"21"},{"size":478,"mtime":1619388738244,"results":"29","hashOfConfig":"21"},{"size":259,"mtime":1619388738244,"results":"30","hashOfConfig":"21"},{"size":2221,"mtime":1619608452016,"results":"31","hashOfConfig":"21"},{"size":1072,"mtime":1619575736242,"results":"32","hashOfConfig":"21"},{"size":3202,"mtime":1619612371168,"results":"33","hashOfConfig":"21"},{"size":490,"mtime":1619568609194,"results":"34","hashOfConfig":"21"},{"size":966,"mtime":1619611551263,"results":"35","hashOfConfig":"21"},{"size":3640,"mtime":1619575819357,"results":"36","hashOfConfig":"21"},{"size":3404,"mtime":1619609771548,"results":"37","hashOfConfig":"21"},{"size":3437,"mtime":1619568183624,"results":"38","hashOfConfig":"21"},{"size":2781,"mtime":1619572285260,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"jdavbg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["82","83"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\App.js",["84"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",["85","86"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nclass PenugasanEngineer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [ \r\n            // {items : [10,  '000010/I/PO-LA/2021', 'PIMS-190621/PT.Aplikasinusa', 'Project Installation (PI), Managed Service (MS)', 'Belum ditugaskan', 'Belum ditugaskan']},\r\n            // {items : [9,  '000010/I/PO-LA/2021', 'PIMS-190621/PT.Aplikasinusa', 'Project Installation (PI), Managed Service (MS)', 'Belum ditugaskan', 'Belum ditugaskan']}\r\n            ],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            // isChange: false,\r\n            orderTarget: null,\r\n            users: [],\r\n            picEngineerPi: null,\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            isReport: false,\r\n            // isNotif: false,\r\n            // isError: false,\r\n            orderFiltered: [],\r\n            isFiltered: false\r\n            // listService: [],\r\n            // services: [],\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReport = this.handleReport.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        // this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerified\");\r\n            const users = await APIConfig.get(\"/users\");\r\n            // const services = await APIConfig.get(\"/services\");\r\n            console.log(orders.data);\r\n            console.log(users.data);\r\n            this.setState({ ordersVerified: orders.data, users: users.data});\r\n            \r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if(this.state.orderTarget.projectInstallation === true){\r\n                // console.log(this.state.orderTarget.idOrderPi);\r\n                const pi = this.state.orderTarget.idOrderPi;\r\n                const dataPi = {\r\n                    idOrderPi: pi.idOrderPi,\r\n                    idUserEng: this.state.picEngineerPi,\r\n                    percentage: pi.percentage,\r\n                    startPI: pi.startPI,\r\n                    deadline: pi.deadline,\r\n                    dateClosedPI: pi.dateClosedPI\r\n                }\r\n                // console.log(dataPi);\r\n                await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/pi/${this.state.orderTarget.idOrderPi.idOrderPi}/updatePIC`, dataPi);\r\n                // const dataResponsePi = await responsePi.json();\r\n            }\r\n            if(this.state.orderTarget.managedService === true){\r\n                const ms = this.state.orderTarget.idOrderMs;\r\n                const dataMs = {\r\n                    idOrderMs: ms.idOrderMs,\r\n                    idUserPic: this.state.picEngineerMs,\r\n                    actualStart: ms.actualStart,\r\n                    actualEnd: ms.actualEnd,\r\n                    activated: ms.activated,\r\n                    timeRemaining: ms.timeRemaining,\r\n                    dateClosedMS: ms.dateClosedMS\r\n                }\r\n                // console.log(dataMs);\r\n                await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${this.state.orderTarget.idOrderMs.idOrderMs}/updatePIC`, dataMs);\r\n                let listService = this.getListService(this.state.orderTarget);\r\n                console.log(this.state.servicesEngineer);\r\n                for(let i=0; i<this.state.servicesEngineer.length; i++){\r\n                    console.log(i);\r\n                    let service = listService[i];\r\n                    console.log(service);\r\n                    const dataService = {\r\n                        idService: service.idService,\r\n                        name: service.name,\r\n                        idUser: this.state.servicesEngineer[i]\r\n                    }\r\n                    console.log(this.state.orderTarget.idOrderMs.idOrderMs);\r\n                    // console.log(dataService);\r\n                    await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${this.state.orderTarget.idOrderMs.idOrderMs}/service/${service.idService}/updateEngineer`, dataService);\r\n                    // console.log(dataService);\r\n                }\r\n            }\r\n            this.loadData();\r\n        } catch (error) {\r\n            alert(\"Penugasan Engineer gagal disimpan\");\r\n            // this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n        this.handleReport(event);\r\n        // this.handleCancel(event);\r\n        // this.setState({ \r\n        //     orderTarget: null,\r\n        //     users: [],\r\n        //     picEngineerPi: null,\r\n        //     picEngineerMs: null,\r\n        //     servicesEngineer: []\r\n        // });\r\n    }\r\n\r\n    handleReport(event){\r\n        event.preventDefault();\r\n        // this.setState({isEdit: false, isReport: true, isNotif: true});\r\n        this.setState({isEdit: false, isReport: true});\r\n        alert(\"Penugasan Engineer berhasil disimpan\");\r\n    }\r\n\r\n    checkTypeOrder(pi, ms){\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    getPICPI(idOrder){\r\n        let orderTarget = this.state.ordersVerified.filter(\r\n            order => order.idOrder === idOrder\r\n        );\r\n        let pi = orderTarget.map(order => {return order.idOrderPi});\r\n        // console.log(pi[0]);\r\n        // console.log(orderTarget !== null && pi[0] !== null);\r\n    \r\n        if(orderTarget !== null && pi[0] !== null){\r\n            let user = orderTarget.map(order => order.idOrderPi.idUserEng);\r\n            if(user !== null){\r\n                let pic = orderTarget.map(order => order.idOrderPi.idUserEng.fullname);\r\n                return pic;\r\n            }\r\n        }\r\n\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    getPICMS(idOrder){\r\n        let orderTarget = this.state.ordersVerified.filter(\r\n            order => order.idOrder === idOrder\r\n        );\r\n        let ms = orderTarget.map(order => {return order.idOrderMs});\r\n    \r\n        if(orderTarget !== null && ms[0] !== null){\r\n            let user = orderTarget.map(order => order.idOrderMs.idUserPic);\r\n            if(user !== null){\r\n                let pic = orderTarget.map(order => order.idOrderMs.idUserPic.fullname);\r\n                return pic;\r\n            }\r\n        }\r\n        return \"Belum ditugaskan\";\r\n    }\r\n\r\n    getPICService(service){\r\n        if(service.idUser !== null) return service.idUser.fullname;\r\n        return \"Belum ditugaskan\";\r\n    }\r\n    \r\n    handleEdit(order) {\r\n        // const { value } = event.target;\r\n        // console.log(event.target);\r\n        // console.log(value);\r\n        // const order = this.getOrder(value);\r\n        this.setState({\r\n            isEdit: true,\r\n            orderTarget: order\r\n        });\r\n        if(order.idOrderPi !== null){\r\n            if(order.idOrderPi.idUserEng !== null){\r\n                this.setState({picEngineerPi: order.idOrderPi.idUserEng.id});\r\n            }\r\n        }\r\n        if(order.idOrderMs !== null){\r\n            if(order.idOrderMs.idUserPic !== null){\r\n                let servicesEngineer = order.idOrderMs.listService.map(service => service.idUser.id);\r\n                this.setState({\r\n                    picEngineerMs: order.idOrderMs.idUserPic.id, \r\n                    servicesEngineer: servicesEngineer\r\n                });\r\n            }\r\n        }\r\n        // console.log(this.state.orderTarget);\r\n        // console.log(this.state.picEngineerPi);\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({isEdit: false, isReport: false});\r\n    }\r\n\r\n    // handleCloseNotif(event){\r\n    //     event.preventDefault();\r\n    //     this.setState({isNotif: false, isError: false});\r\n    // }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name, value);\r\n        const servicesEngineerNew = this.state.servicesEngineer;\r\n        if( name.substring(0,16) === \"servicesEngineer\"){\r\n            let index = Number(name.substring(16));\r\n            servicesEngineerNew[index] = value;\r\n            this.setState({ servicesEngineer: servicesEngineerNew});\r\n        }else{\r\n            this.setState({ [name]: value});\r\n        }\r\n    }\r\n\r\n    getListService(order){\r\n        if(order.idOrderMs !== null){\r\n            return order.idOrderMs.listService;\r\n        }\r\n    }\r\n\r\n    getOrder(idOrder){\r\n        const orders = this.state.ordersVerified;\r\n        for(let i=0; i<=orders.length; i++){\r\n            if(orders[i].idOrder === idOrder){\r\n                return orders[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            console.log(this.checkTypeOrder(this.state.ordersVerified[0].projectInstallation, this.state.ordersVerified[0].managedService).toLowerCase());\r\n            console.log(this.getPICPI(this.state.ordersVerified[0].idOrder)[0]);\r\n            // newOrderList = this.state.ordersVerified.filter(order => {\r\n            //     return order.noPO !== null ? order.noPO.toLowerCase().includes(value.toLowerCase()) : \"\".toLowerCase().includes(value.toLowerCase()) || \r\n            //     order.orderName.toLowerCase().includes(value.toLowerCase()) ||\r\n            //     this.checkTypeOrder(order.projectInstallation, order.managedService).toLowerCase().includes(value.toLowerCase()) ||\r\n            //     order.idOrderPi !== null ? this.getPICPI(order.idOrder)[0].toLowerCase().includes(value.toLowerCase())\r\n            //     : \"\".toLowerCase().includes(value.toLowerCase()) ||\r\n            //     order.idOrderMs !== null ? this.getPICMS(order.idOrder)[0].toLowerCase().includes(value.toLowerCase()) : \"\".toLowerCase().includes(value.toLowerCase())\r\n            // });\r\n            newOrderList = this.state.ordersVerified.filter(order => {\r\n                return order.orderName.toLowerCase().includes(value.toLowerCase())\r\n            });\r\n            // console.log( this.state.ordersVerified[2].orderName.toLowerCase().includes(value.toLowerCase()))\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    render() {\r\n        const { ordersVerified, isEdit, orderTarget, users, picEngineerPi,\r\n             picEngineerMs, servicesEngineer, isReport, isNotif, isError, orderFiltered, isFiltered } = this.state;\r\n        console.log(orderTarget);\r\n        console.log(picEngineerPi);\r\n        console.log(servicesEngineer);\r\n        const tableHeaders = ['No.', 'Id Order', 'Nomor PO', 'Nama Order', 'Tipe', 'PIC PI', 'PIC MS', 'Aksi'];                  \r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.getPICPI(order.idOrder), this.getPICMS(order.idOrder),\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\"\r\n                        onClick={() => this.handleEdit(order)}>perbarui</CustomizedButtons>])\r\n                        : ordersVerified.map((order) =>\r\n                        [order.idOrder, order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.getPICPI(order.idOrder), this.getPICMS(order.idOrder),\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\"\r\n                        onClick={() => this.handleEdit(order)}>perbarui</CustomizedButtons>])\r\n        const tableServiceHeaders = ['No.', 'Nama Service', 'Engineer'];\r\n        let tableServiceRows;\r\n\r\n        if(orderTarget !== null){\r\n            if(orderTarget.idOrderPi !== null){\r\n            }\r\n            if(orderTarget.idOrderMs !== null){\r\n                tableServiceRows = orderTarget.idOrderMs.listService.map((service, index) =>\r\n                                        [service.name, isReport ? this.getPICService(service) :\r\n                                        <Form.Control as=\"select\" size=\"lg\" key={index} name={\"servicesEngineer\"+index} \r\n                                        value={servicesEngineer[index] === null ? users[0].id : servicesEngineer[index]}\r\n                                        onChange={this.handleChangeField}>\r\n                                            {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                        </Form.Control>]);\r\n            }\r\n        }\r\n\r\n        const title = isReport? \"Penugasan Engineer\" : \"Form Penugasan Engineer\";\r\n\r\n        const notification = isError ? \"Penugasan Engineer Gagal disimpan\" : \"Penugasan Engineer Berhasil disimpan\";\r\n\r\n        return (\r\n            <div style={{justifyContent: \"space-around\"}}>\r\n                <div>\r\n                    {/* <tr> */}\r\n                        <div><h1>Daftar Order</h1></div>\r\n                        <div><Form.Control type=\"text\" placeholder=\"Cari...\" onChange={this.handleFilter} id=\"search\"/></div>\r\n                    {/* </tr> */}\r\n                </div>\r\n                <div style={{width: 1300}}><CustomizedTables headers={tableHeaders} rows={tableRows}/></div>\r\n                {/* <Modal show={isNotif} style={{modal : {zIndex: 900}}}>\r\n                    {notification}\r\n                    <a href=\"#\" class=\"close\" onClick={()=>this.handleCloseNotif}>x</a>\r\n                    {console.log(isEdit, isReport, isNotif)}\r\n                </Modal> */}\r\n                <Modal show={isEdit || isReport} style={{modal : {zIndex: 200}}}>\r\n                    <div style={{ justifyContent: \"end\"}}><a href=\"#\" class=\"close\" onClick={this.handleCancel}>x</a></div>\r\n                    <h3 id='titleform' >{title}</h3>\r\n                    {console.log(isEdit, isReport, isNotif)}\r\n                    {orderTarget !== null ?\r\n                        <><Form>\r\n                            <table>\r\n                                <tr>\r\n                                    <td>Id Order</td>\r\n                                    <td>: {orderTarget.idOrder}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Nomor PO</td>\r\n                                    <td>: {orderTarget.noPO === null? \"-\" : orderTarget.noPO}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Nama Order</td>\r\n                                    <td>: {orderTarget.orderName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Perusahaan</td>\r\n                                    <td>: {orderTarget.clientOrg}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Tipe</td>\r\n                                    <td>{this.checkTypeOrder(orderTarget.projectInstallation, orderTarget.managedService)}</td>\r\n                                </tr>\r\n                                { orderTarget.projectInstallation ?\r\n                                    <><tr>\r\n                                        <td style={{fontWeight: 'bold'}}>Project Installation</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>PIC Engineer</td>\r\n                                        {/* {console.log(picEngineerPi.id === null), console.log(users[0].id), console.log(picEngineerPi), console.log(users[0].id === picEngineerPi)} */}\r\n                                        {isReport ?\r\n                                        <td>: {this.getPICPI(orderTarget.idOrder)}</td> :\r\n                                        <td><Form.Control as=\"select\" size=\"lg\" name=\"picEngineerPi\" value={picEngineerPi === null ? users[0].id : picEngineerPi} onChange={this.handleChangeField}>\r\n                                                {users.map((user, index) => <option key={index} value={user.id}>{user.fullname}</option>)}\r\n                                            </Form.Control></td>}\r\n                                    </tr></>\r\n                                : <></>}\r\n                                { orderTarget.managedService ?\r\n                                <><tr>\r\n                                    <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Services</td>\r\n                                    <td>\r\n                                        <><CustomizedTables headers={tableServiceHeaders} rows={tableServiceRows}></CustomizedTables></>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>PIC Engineer</td>\r\n                                    {isReport ?\r\n                                        <td>: {this.getPICMS(orderTarget.idOrder)}</td> :\r\n                                    <td><Form.Control as=\"select\" size=\"lg\" name=\"picEngineerMs\" value={picEngineerMs === null ? users[0].id : picEngineerMs} onChange={this.handleChangeField}>\r\n                                            {/* {listServiceEngineerNew.map(user =><option value={user[1]}>{user[2]}</option>)} */}\r\n                                            {users.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                        </Form.Control></td>}\r\n                                </tr></>\r\n                                : <></>}\r\n                            </table>\r\n                            {isReport ? <></> :\r\n                            <div style={{alignItems:'right'}}><CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmit}>\r\n                                simpan\r\n                            </CustomizedButtons></div>}\r\n                        </Form></>\r\n                    : <></> }\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PenugasanEngineer;","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\services\\InstallationProjectService.js",["87"],"import axios from 'axios';\r\n\r\nconst DELIVERY_PROGRESS_API_BASE_URL = \"http://localhost:2020/api/v1/delivery-progress\";\r\nconst LIST_TASK_API_BASE_URL = \"http://localhost:2020/api/v1/list-task\";\r\nconst ADD_TASK_API_BASE_URL = \"http://localhost:2020/api/v1/addTask\";\r\nconst GET_TASK_API_BASE_URL = \"http://localhost:2020/api/v1/retrieve-task\";\r\n\r\nclass InstallationProjectService {\r\n\r\n    getVerifiedOrderPi(){\r\n        return axios.get(DELIVERY_PROGRESS_API_BASE_URL);\r\n    }\r\n\r\n    getListTaskByIdPi(idOrderPi){\r\n       return axios.get(LIST_TASK_API_BASE_URL + '/' + idOrderPi);\r\n    }\r\n\r\n    createTask(task, idOrderPi){\r\n        return axios.post(LIST_TASK_API_BASE_URL + '/' + idOrderPi, task);\r\n    }\r\n\r\n    getTaskByIdTask(idTask){\r\n        return axios.get(GET_TASK_API_BASE_URL+'/'+idTask);\r\n    }\r\n\r\n    updateTaskModel(task, idTask){\r\n        return axios.put(LIST_TASK_API_BASE_URL+'/'+idTask, task);\r\n    }\r\n\r\n    deleteTask(idTask){\r\n        return axios.delete(LIST_TASK_API_BASE_URL+'/'+idTask);\r\n    }\r\n\r\n}\r\n\r\nexport default new InstallationProjectService()","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Header\\HeaderComponent.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\Footer\\FooterComponent.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\LandingPage.js",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx",["88"],"import React, { Component } from 'react'\r\nimport InstallationProjectService from \"../../services/InstallationProjectService\";\r\nimport APIConfig from \"../../APIConfig\";\r\n\r\n\r\nclass ListTaskComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id, //jangan diapus, sblmnya id doang, jadi idPi\r\n            idTask: this.props.match.params.idTask,\r\n            listTask: []\r\n\r\n        }\r\n        this.addTask = this.addTask.bind(this);\r\n        this.editTask = this.editTask.bind(this);\r\n        this.editProgres = this.editProgres.bind(this);\r\n        this.deleteTask = this.deleteTask.bind(this);\r\n        \r\n    }\r\n\r\n    deleteTask(idTask){\r\n        InstallationProjectService.deleteTask(idTask).then( res => {\r\n            this.setState({listTask: this.state.listTask.filter(task => task.idTask !== idTask)})\r\n        })\r\n    }\r\n\r\n    editTask(id, idTask){\r\n        this.props.history.push(`/update-task/${id}/${idTask}`);\r\n    }\r\n\r\n    editProgres(id, idTask){\r\n        this.props.history.push(`/add-progress/${id}/${idTask}`);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        InstallationProjectService.getListTaskByIdPi(this.state.id).then((res) => {\r\n            this.setState({ listTask: res.data});\r\n        });\r\n        \r\n    }\r\n\r\n    addTask(idPi){\r\n        this.props.history.push(`/add-task/${idPi}`); //diubah sblmnya idOrder\r\n    }\r\n\r\n    //dibutton tambah jadi idPi, sblmnya id doang\r\n    //edit task jadi nambah idPi\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Daftar Task Order</h2>\r\n                <div className=\"row\">\r\n                    <button onClick = { () => this.addTask(this.state.id) } className=\"btn btn-primary\">+ Tambah Task</button>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <table className = \"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nama Task</th>\r\n                                <th>Deskripsi Task</th>\r\n                                <th>Progres Task</th>\r\n                                <th>Aksi</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                this.state.listTask.map(\r\n                                    task =>\r\n                                    <tr key = {task.idTask}>\r\n                                        <td>{task.taskName}</td>\r\n                                        <td>{task.description}</td>\r\n                                        <td>{task.percentage + \"%\"}</td>\r\n                                        <td>\r\n                                            <button onClick = { () => this.editTask(this.state.id, task.idTask)} className=\"btn btn-info\">Ubah Task</button>\r\n                                            <button onClick = { () => this.editProgres(this.state.id, task.idTask)} className=\"btn btn-warning\" style={{marginLeft: \"10px\"}}>Ubah Progres</button>\r\n                                            <button onClick = { () => this.deleteTask(task.idTask)} className=\"btn btn-danger\" style={{marginLeft: \"10px\"}}>Hapus Task</button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTaskComponent","C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx",["89","90"],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx",[],"C:\\kamila kaffah\\PROPENSI\\Branch Hanna\\propen-a01-sipel\\sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":311,"column":15,"nodeType":"97","messageId":"98","endLine":311,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":328,"column":59,"nodeType":"102","endLine":328,"endColumn":113},{"ruleId":"95","severity":1,"message":"103","line":5,"column":7,"nodeType":"97","messageId":"98","endLine":5,"endColumn":28},{"ruleId":"95","severity":1,"message":"104","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":17},{"ruleId":"95","severity":1,"message":"105","line":3,"column":9,"nodeType":"97","messageId":"98","endLine":3,"endColumn":30},{"ruleId":"95","severity":1,"message":"106","line":3,"column":32,"nodeType":"97","messageId":"98","endLine":3,"endColumn":51},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'notification' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ADD_TASK_API_BASE_URL' is assigned a value but never used.","'APIConfig' is defined but never used.","'NotificationContainer' is defined but never used.","'NotificationManager' is defined but never used.","no-global-assign","no-unsafe-negation"]